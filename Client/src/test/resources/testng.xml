<!DOCTYPE suite SYSTEM "http://testng.org/testng-1.0.dtd" >

<suite name="oxAuthClient" parallel="false">

    <!-- Application Type Restriction test -->
    <test name="Application Type Restriction (HTTP)" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.ws.rs.ApplicationTypeRestrictionHttpTest"/>
        </classes>
    </test>

    <!-- Authorization Code Flow test -->
    <test name="Authorization Code Flow test (HTTP)" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.ws.rs.AuthorizationCodeFlowHttpTest"/>
        </classes>
    </test>

    <!-- Authorize test -->
    <test name="Authorize test (HTTP)" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.ws.rs.AuthorizeRestWebServiceHttpTest"/>
        </classes>
    </test>

    <!-- Client Authentication Filter test -->
    <test name="Client Authentication Filter test (HTTP)" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.ws.rs.ClientAuthenticationFilterHttpTest"/>
        </classes>
    </test>

    <!-- Client Info test  -->
    <test name="Client Info test (HTTP)" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.ws.rs.ClientInfoRestWebServiceHttpTest"/>
        </classes>
    </test>

    <!-- Configuration test -->
    <test name="Configuration test (HTTP)" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.ws.rs.ConfigurationRestWebServiceHttpTest"/>
        </classes>
    </test>

    <!-- End Session test -->
    <test name="End Session test (HTTP)" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.ws.rs.EndSessionRestWebServiceHttpTest"/>
        </classes>
    </test>

    <!-- JWK test -->
    <test name="JWK test (HTTP)" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.ws.rs.JwkRestWebServiceHttpTest"/>
        </classes>
    </test>
    
    <!-- OpenID Request Object test -->
    <test name="OpenID Request Object test (HTTP)" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.ws.rs.OpenIDRequestObjectHttpTest"/>
        </classes>
    </test>

    <!-- Register test -->
    <test name="Register test (HTTP)" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.ws.rs.RegistrationRestWebServiceHttpTest"/>
        </classes>
    </test>

    <!-- Sector Identifier URL Verification test -->
    <test name="Sector Identifier URL Verification (HTTP)" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.ws.rs.SectorIdentifierUrlVerificationHttpTest"/>
        </classes>
    </test>

    <!-- SSO with Multiple Backend Services test -->
    <test name="SSO with Multiple Backend Services test (HTTP)" enabled="false">
        <classes>
            <class name="org.xdi.oxauth.ws.rs.SSOWithMultipleBackendServicesHttpTest"/>
        </classes>
    </test>

    <!-- OpenID Connect Discovery test -->
    <test name="OpenID Connect Discovery test (HTTP)" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.ws.rs.OpenIDConnectDiscoveryHttpTest"/>
        </classes>
    </test>

    <!-- Token Endpoint Auth Method Restriction test -->
    <test name="Token Endpoint Auth Method Restriction (HTTP)" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.ws.rs.TokenEndpointAuthMethodRestrictionHttpTest"/>
        </classes>
    </test>

    <!-- Token test -->
    <test name="Token test (HTTP)" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.ws.rs.TokenRestWebServiceHttpTest"/>
        </classes>
    </test>

    <!-- Token Signatures test -->
    <test name="Token Signatures test (HTTP)" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.ws.rs.TokenSignaturesHttpTest"/>
        </classes>
    </test>

    <!-- Token Encryption test -->
    <test name="Token Encryption test (HTTP)" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.ws.rs.TokenEncryptionHttpTest"/>
        </classes>
    </test>

    <!-- User Authentication Filter test -->
    <test name="User Authentication Filter test (HTTP)" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.ws.rs.UserAuthenticationFilterHttpTest"/>
        </classes>
    </test>

    <!-- User Info test -->
    <test name="User Info test (HTTP)" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.ws.rs.UserInfoRestWebServiceHttpTest"/>
        </classes>
    </test>

    <!-- Federation tests -->
    <test name="Federation metadata test (HTTP)" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.ws.rs.FederationMetadataWebServiceHttpTest"/>
        </classes>
    </test>
    <test name="Federation data (join) test (HTTP)" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.ws.rs.FederationDataWebServiceHttpTest"/>
        </classes>
    </test>
    <test name="Federation metadata signature test" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.ws.rs.FederationMetadataSignatureTest"/>
        </classes>
    </test>

    <!-- Federation tests -->
    <!-- This test must be enabled only in case federation feature is enabled on server side. -->
    <test name="Federation scopes handling test (HTTP)" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.ws.rs.FederationScopesWSHttpTest"/>
        </classes>
    </test>

    <!-- Dev tests-->
    <test name="Custom token issuing test via session" enabled="false">
        <classes>
            <class name="org.xdi.oxauth.dev.TestSessionWorkflow"/>
        </classes>
    </test>

    <!-- UMA tests -->
    <!-- Test for getting UMA meta data configuration -->
    <test name="Test for getting UMA meta data configuration (HTTP)" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.ws.rs.uma.MetaDataFlowHttpTest"/>
        </classes>
    </test>

    <!-- Obtain UMA PAT token test -->
    <test name="Obtain UMA PAT token test (HTTP)" enabled="false">
        <classes>
            <class name="org.xdi.oxauth.ws.rs.uma.ObtainPatTokenFlowHttpTest"/>
        </classes>
    </test>

    <!-- Register UMA resource set description test -->
    <test name="Register UMA resource set test (HTTP)" enabled="false">
        <classes>
            <class name="org.xdi.oxauth.ws.rs.uma.RegisterResourceSetFlowHttpTest"/>
        </classes>
    </test>

    <test name="Response Types Restriction (HTTP)" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.ws.rs.ResponseTypesRestrictionHttpTest"/>
        </classes>
    </test>

    <!-- Obtain UMA AAT token test -->
    <test name="Obtain UMA AAT token test (HTTP)" enabled="false">
        <classes>
            <class name="org.xdi.oxauth.ws.rs.uma.ObtainAatTokenFlowHttpTest"/>
        </classes>
    </test>

    <!-- Obtain UMA RPT token test -->
    <test name="Obtain UMA RPT token test (HTTP)" enabled="false">
        <classes>
            <class name="org.xdi.oxauth.ws.rs.uma.ObtainRptTokenFlowHttpTest"/>
        </classes>
    </test>

    <!-- Register UMA resource set description permissions test -->
    <test name="Register UMA resource set description permissions test (HTTP)" enabled="false">
        <classes>
            <class name="org.xdi.oxauth.ws.rs.uma.RegisterResourceSetPermissionFlowHttpTest"/>
        </classes>
    </test>

    <!-- Test for getting UMA protected resource -->
    <test name="Test for getting UMA protected resource (HTTP)" enabled="false">
        <classes>
            <class name="org.xdi.oxauth.ws.rs.uma.AccessProtectedResourceFlowHttpTest"/>
        </classes>
    </test>

    <test name="Test for getting UMA scopes (HTTP)" enabled="false">
        <classes>
            <class name="org.xdi.oxauth.ws.rs.uma.ScopeHttpTest"/>
        </classes>
    </test>

    <test name="ID Generation test (HTTP)" enabled="false">
        <classes>
            <class name="org.xdi.oxauth.ws.rs.IdGenWsHttpTest"/>
        </classes>
    </test>

    <test name="Introspection test (HTTP)" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.ws.rs.IntrospectionWsHttpTest"/>
        </classes>
    </test>

    <!-- OIC Interop Tests -->
    <test name="OC5:FeatureTest-Accept Request Without redirect uri when One Registered" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.AcceptRequestWithoutRedirectUriWhenOneRegistered"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Accept Valid Asymmetric ID Token Signature" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.AcceptValidAsymmetricIdTokenSignature"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Accept Valid Symmetric ID Token Signature" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.AcceptValidSymmetricIdTokenSignature"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Can Discover Identifiers using E-Mail Syntax" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.CanDiscoverIdentifiersUsingEMailSyntax"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Can Discover Identifiers using URL Syntax" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.CanDiscoverIdentifiersUsingUrlSyntax"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Can Make Access Token Request with client secret basic Authentication" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.CanMakeAccessTokenRequestWithClientSecretBasicAuthentication"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Can Make Access Token Request with client secret jwt Authentication" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.CanMakeAccessTokenRequestWithClientSecretJwtAuthentication"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Can Make Access Token Request with client secret post Authentication" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.CanMakeAccessTokenRequestWithClientSecretPostAuthentication"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Can Make Access Token Request with private key jwt Authentication" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.CanMakeAccessTokenRequestWithPrivateKeyJwtAuthentication"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Can Provide Encrypted ID Token Response" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.CanProvideEncryptedIdTokenResponse"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Can Provide Encrypted UserInfo Response" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.CanProvideEncryptedUserInfoResponse"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Can Provide Signed UserInfo Response" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.CanProvideSignedUserInfoResponse"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Can Request and Use Claims in id token" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.CanRequestAndUseClaimsInIdToken"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Can Request and Use Encrypted ID Token Response" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.CanRequestAndUseEncryptedIdTokenResponse"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Can Request and Use Signed UserInfo Response" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.CanRequestAndUseSignedUserInfoResponse"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Displays Logo in Login Page" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.DisplaysLogoInLoginPage"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Displays Policy in Login Page" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.DisplaysPolicyUriInLoginPage"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Support WebFinger Discovery" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.SupportWebFingerDiscovery"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Enables Dynamic Registration" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.EnablesDynamicRegistration"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Ignores Extra Query Component in Request" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.IgnoresExtraQueryComponentInRequest"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Includes at hash in ID Token when Implicit Flow Used" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.IncludesAtHashInIdTokenWhenImplicitFlowUsed"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Includes c hash in ID Token when Code Flow Used" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.IncludesCHashInIdTokenWhenCodeFlowUsed"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Preserves Query Parameter in redirect uri" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.PreservesQueryParameterInRedirectUri"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Preserves Query Parameter in Registered redirect uri" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.PreservesQueryParameterInRegisteredRedirectUri"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Providing ID Token with Essential auth time Claim" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.ProvidingIdTokenWithEssentialAuthTimeClaim"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Providing ID Token with max age Restriction" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.ProvidingIdTokenWithMaxAgeRestriction"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Providing Individually Requested Essential and Voluntary Claims" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.ProvidingIndividuallyRequestedEssentialAndVoluntaryClaims"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Providing Individually Requested Essential Claims" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.ProvidingIndividuallyRequestedEssentialClaims"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Providing Individually Requested Voluntary Claims" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.ProvidingIndividuallyRequestedVoluntaryClaims"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Publish openid-configuration Discovery Information" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.PublishOpenIdConfigurationDiscoveryInformation"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Reject Invalid Asymmetric ID Token Signature" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.RejectInvalidAsymmetricIdTokenSignature"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Reject Invalid Symmetric ID Token Signature" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.RejectInvalidSymmetricIdTokenSignature"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Reject redirect uri Not Matching a Registered redirect uri" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.RejectRedirectUriNotMatchingARegisteredRedirectUri"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Reject Registration of redirect uri with Fragment" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.RejectRegistrationOfRedirectUriWithFragment"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Reject Requests Without nonce Using Implicit Flow" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.RejectRequestsWithoutNonceUsingImplicitFlow"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Reject Request Without redirect uri when Multiple Registered" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.RejectRequestWithoutRedirectUriWhenMultipleRegistered"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Reject Request Without response type" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.RejectRequestWithoutResponseType"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Rejects Incorrect at hash when Implicit Flow Used" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.RejectsIncorrectAtHashWhenImplicitFlowUsed"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Rejects Incorrect c hash when Code Flow Used" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.RejectsIncorrectCHashWhenCodeFlowUsed"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Rejects redirect uri when Query Parameter Does Not Match" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.RejectsRedirectUriWhenQueryParameterDoesNotMatch"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Rejects Second Use of Access Code" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.RejectsSecondUseOfAccessCode"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Rejects Sector Identifier Not Containing Registered redirect uri Values" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.RejectsSectorIdentifierNotContainingRegisteredRedirectUriValues"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Requesting UserInfo Claims with OpenID Request Object" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.RequestingUserInfoClaimsWithOpenIdRequestObject"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Requesting UserInfo Claims with scope Values" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.RequestingUserInfoClaimsWithScopeValues"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Second Use of Access Code Revokes Previously Issued Access Token" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.SecondUseOfAccessCodeRevokesPreviouslyIssuedAccessToken"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Support Authentication to Token Endpoint using Form-Encoded Client Credentials in POST Body" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.SupportAuthenticationToTokenEndpointUsingFormEncodedClientCredentialsInPostBody"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Support Authentication to Token Endpoint using HTTP Basic with POST" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.SupportAuthenticationToTokenEndpointUsingHttpBasicWithPost"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Support Authentication to Token Endpoint with Asymmetrically Signed JWTs" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.SupportAuthenticationToTokenEndpointWithAsymmetricallySignedJWTs"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Support Authentication to Token Endpoint with Symmetrically Signed JWTs" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.SupportAuthenticationToTokenEndpointWithSymmetricallySignedJWTs"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Support code Response Type" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.SupportCodeResponseType"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Support Combination of code id token token Response Types" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.SupportCombinationOfCodeIdTokenTokenResponseTypes"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Support Combination of code token Response Types" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.SupportCombinationOfCodeTokenResponseTypes"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Support Combination of id token code Response Types" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.SupportCombinationOfIdTokenCodeResponseTypes"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Support Combination of id token token Response Types" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.SupportCombinationOfIdTokenTokenResponseTypes"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Support display value page" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.SupportDisplayValuePage"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Support display value popup" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.SupportDisplayValuePopup"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Support id token Response Type" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.SupportIdTokenResponseType"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Support prompt value login" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.SupportPromptValueLogin"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Support prompt value none" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.SupportPromptValueNone"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Support Registration Read" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.SupportRegistrationRead"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Support Request File" enabled="false">
        <classes>
            <class name="org.xdi.oxauth.interop.SupportRequestFile"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Support claims Request Specifying sub Value" enabled="false">
        <classes>
            <class name="org.xdi.oxauth.interop.SupportClaimsRequestSpecifyingSubValue"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Support Requests Containing nonce" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.SupportRequestsContainingNonce"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Support Requests Without nonce" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.SupportRequestsWithoutNonce"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Supports Combining Claims Requested with scope and Request Object" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.SupportsCombiningClaimsRequestedWithScopeAndRequestObject"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Support scope Requesting address Claims" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.SupportScopeRequestingAddressClaims"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Support scope Requesting All Basic Claims" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.SupportScopeRequestingAllBasicClaims"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Support scope Requesting email Claims" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.SupportScopeRequestingEmailClaims"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Support scope Requesting No Specific Claims" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.SupportScopeRequestingNoSpecificClaims"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Support scope Requesting phone Claims" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.SupportScopeRequestingPhoneClaims"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Support scope Requesting profile Claims" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.SupportScopeRequestingProfileClaims"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Supports Returning Claims in ID Token" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.SupportsReturningClaimsInIdToken"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Supports Returning Different Claims in ID Token and UserInfo Endpoint" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.SupportsReturningDifferentClaimsInIdTokenAndUserInfoEndpoint"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Support token Response Type" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.SupportTokenResponseType"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-UserInfo Endpoint" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.UserInfoEndpoint"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-UserInfo Endpoint Access with Form-Encoded Body Method" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.UserInfoEndpointAccessWithFormEncodedBodyMethod"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-UserInfo Endpoint Access with Header Method" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.UserInfoEndpointAccessWithHeaderMethod"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Uses Asymmetric ID Token Signatures" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.UsesAsymmetricIdTokenSignatures"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Uses Discovery" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.UsesDiscovery"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Uses Dynamic Registration" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.UsesDynamicRegistration"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Uses Symmetric ID Token Signatures" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.UsesSymmetricIdTokenSignatures"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Verifies Correct at hash when Implicit Flow Used" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.VerifiesCorrectAtHashWhenImplicitFlowUsed"/>
        </classes>
    </test>
    <test name="OC5:FeatureTest-Verifies Correct c hash when Code Flow Used" enabled="true">
        <classes>
            <class name="org.xdi.oxauth.interop.VerifiesCorrectCHashWhenCodeFlowUsed"/>
        </classes>
    </test>

    <!-- GLUU: ${test.server.name} Test-->
    <parameter name="swdResource" value="${swd.resource}"/>
    <parameter name="federationMetadataId" value="@!1111!0008!00F1!0001"/>
    <parameter name="userId" value="${auth.user.uid}"/>
    <parameter name="userSecret" value="${auth.user.password}"/>
    <parameter name="userInum" value="${auth.user.inum}"/>
    <parameter name="userEmail" value="${auth.user.email}"/>
    <parameter name="clientId" value="${auth.client.id}"/>
    <parameter name="clientSecret" value="${auth.client.secret}"/>
    <parameter name="redirectUri" value="https://${test.server.name}/oxauth-rp/home.seam"/>
    <parameter name="redirectUris" value="https://${test.server.name}/oxauth-rp/home.seam https://client.example.com/cb https://client.example.com/cb1 https://client.example.com/cb2"/>
    <parameter name="postLogoutRedirectUri" value="https://client.example.com/pl"/>
    <parameter name="hostnameVerifier" value="default"/>
    <parameter name="sectorIdentifierUri" value="https://${test.server.name}/oxauth-client/test/resources/sector_identifier.js"/>
    <parameter name="federationRpDisplayName" value="Federation RP Test display name"/>
    <parameter name="federationRpRedirectUri" value="https://client.example.com/cb?foo=bar"/>
    <parameter name="federationRpRedirectUris" value="https://client.example.com/cb?foo=bar https://client.example.com/cb1?foo=bar"/>
    <parameter name="federationOpDisplayName" value="Federation OP Test display name"/>
    <parameter name="federationOpId" value="http://example.com/op1"/>
    <parameter name="federationOpDomain" value="example.com"/>
    <!-- By enabling this block, you require a place to publish files via HTTP or HTTPS -->
    <!--parameter name="requestFileBasePath" value="/var/www/html/oxAuthRequestFile"/>
    <parameter name="requestFileBaseUrl" value="http://localhost/oxAuthRequestFile"/-->

    <!-- UMA specific properties -->
    <parameter name="umaMetaDataUrl" value="https://${test.server.name}/oxauth/seam/resource/restv1/oxauth/uma-configuration"/>
    <parameter name="umaAmHost" value="${test.server.name}"/>
    <parameter name="umaUserId" value="${uma.user.uid}"/>
    <parameter name="umaUserSecret" value="${uma.user.password}"/>
    <parameter name="umaPatClientId" value="${uma.pat.client.id}"/>
    <parameter name="umaPatClientSecret" value="${uma.pat.client.secret}"/>
    <parameter name="umaAatClientId" value="${uma.aat.client.id}"/>
    <parameter name="umaAatClientSecret" value="${uma.aat.client.secret}"/>
    <parameter name="umaRedirectUri" value="https://client.example.com/cb?foo=bar"/>

    <!-- LOCALHOST TEST HTTPS 8443 -->
    <!--parameter name="swdResource" value="acct:${auth.user.uid}@localhost:8443"/>
    <parameter name="federationMetadataId" value="@!1111!0008!00F1!0001"/>
    <parameter name="userId" value="${auth.user.uid}"/>
    <parameter name="userSecret" value="${auth.user.password}"/>
    <parameter name="clientId" value="${auth.client.id}"/>
    <parameter name="clientSecret" value="${auth.client.secret}"/>
    <parameter name="redirectUri" value="https://${test.server.name}/oxauth-rp/home.seam?foo=bar"/>
    <parameter name="redirectUris" value="https://${test.server.name}/oxauth-rp/home.seam https://client.example.com/cb https://client.example.com/cb1 https://client.example.com/cb2"/>
    <parameter name="hostnameVerifier" value="allow_all"/>
    <parameter name="sectorIdentifierUri" value="https://${test.server.name}/oxauth-client/test/resources/sector_identifier.js"/-->
    <!-- By enabling this block, you require a place to publish files via HTTP or HTTPS -->
    <!--parameter name="requestFileBasePath" value="/var/www/html/oxAuth"/>
    <parameter name="requestFileBaseUrl" value="http://localhost/oxAuth"/-->

    <!--parameter name="federationRpDisplayName" value="Federation RP Test display name"/>
    <parameter name="federationRpRedirectUri" value="https://client.example.com/cb?foo=bar"/>
    <parameter name="federationRpRedirectUris" value="https://client.example.com/cb?foo=bar https://client.example.com/cb1?foo=bar"/>
    <parameter name="federationOpDisplayName" value="Federation OP Test display name"/>
    <parameter name="federationOpId" value="http://example.com/op1"/>
    <parameter name="federationOpDomain" value="example.com"/-->

    <!-- UMA specific properties -->
    <!--parameter name="umaMetaDataUrl" value="https://localhost:8443/seam/resource/restv1/oxauth/uma-configuration"/>
    <parameter name="umaAmHost" value="localhost"/>
    <parameter name="umaUserId" value="${uma.user.uid}"/>
    <parameter name="umaUserSecret" value="${uma.user.password}"/>
    <parameter name="umaPatClientId" value="${auth.client.id}"/>
    <parameter name="umaPatClientSecret" value="${auth.client.secret}"/>
    <parameter name="umaAatClientId" value="${uma.aat.client.id}"/>
    <parameter name="umaAatClientSecret" value="${uma.aat.client.secret}"/>
    <parameter name="umaRedirectUri" value="https://client.example.com/cb?foo=bar"/-->

    <!-- Client Resources -->
    <parameter name="clientJwksUri" value="https://${test.server.name}/oxauth-client/test/resources/jwks.json"/>
    <!-- RS256 -->
    <parameter name="RS256_modulus"
               value="AJpGcIVu7fmQJLHXeAClhXaJD7SvuABjYiPcT9IbKFWGWj51GgD-CxtyrQGXT0ctGEEsXOzMZM40q-V7GR-5qkJ_OalVTTc_EeKAHao45bZPsPHLxvusNfrfpyhc6JjF2TQhoOqxbgMgQ9L6W9q9fSjgzx-tPlD0d3X0GZOEQ_NYGstZWRRBwHgsxA2IRYtwSH-v76yPpxF9poLIWdnBKtKfSr6UY7p1BrLmMm0DdMhjQLn6j4S_eB-p2WyBwObvsLqO6FdClpZFtGr82Km2uinpHvZ6KJ_MUEW1sijPPI3rIGbaUbLtQJwX5GVynAP5qU2qRVkcsrKt-GeNoz6QNLM"/>
    <parameter name="RS256_privateExponent"
               value="RkIKAFpyehMRAwTTm8fFriPhSTI1I8ge66HroA3KIpjbBFKkEwue11M0QuM7sXhx8UxYzWaQCfCm0A1tdatCRKJYCivUzHImnPYnjFv5ETvdo2BgMEFPG_86ywD01I5Vyo3-EKPZLAdHnA90QXvGQhWPfieRl6CdvtP5ydqUb39aPazZKzPx4v6hj-7wrrwrQmYq-7li_urR2zhz5HvE_eE66i1xhGTI8VdV9VE2y06Zbzn54qL7kf0nsjvg4X9ERdXv4kkhRwSSc3CExJ-iNbo0n3nQ3KovhpA1FEzd9cwI_2EfLRIvVjJRMTnPHCLmz_8-Htn2Kpi3vV9MWHab8Q"/>
    <!-- RS384 -->
    <parameter name="RS384_modulus"
               value="AJ125IzZ0TRSSoVas3jwMWuckyMujoGUUeDd8rLjTSCLlgUb3RiT9MbKfWdeCByme5MZ21lvMu6OmMFn8iDb5erLSBJ8bZFq6ruGIVzU8NI833IahlIO9m6JIR4L_go8Szu-1MYPGUjOKDsxc-Fp3fR-Kb0HFAEEs44t9vL9yMKjNeQeAp7Fo2AukDNEZqvEObP7XWLdJFA-TuAXE1f7o49lMr0y4Tqy2XeDKwfklO0bAnbSryZubRg2E7gjiwaiSYVIFphotLlpCd3N4MU46JjHA2dv1GtIe8749HinwhK1stes3PbZb9Gwm2LyK89iRJ35bCmDLnkwP0rTwTZ2Ul8"/>
    <parameter name="RS384_privateExponent"
               value="NYqTtADsTaodhLKOi_TAGSMoNLJD6nOQU7GkMIdxVjugSyRqTU0h0eZQNbGXeIZzRlVobESPQOZjsn-xqNKcnvV4EDEW4HdGUXUOKw6MxC_GmnnCamyEBpnCFQFm4_wUaMA-gQnpQwQ2UcpC6Maindu4PXoGp0H9-75NVdpNRUDHO5xY2Ybp2kVv__sUWCKRLK7JaKRA3iGlXFpLPSy9DvmBjy27z1t_z58_vrPrVset7muMwMTwgfDv-EP3NBH4eTg7_Cy952MuhxaUUsHW85LZuv5t_rcoUF8kfDWcclP3a954lAzCbVjdngpvaShNbiTKAf9-bMQKG66v63W54Q"/>
    <!-- RS512 -->
    <parameter name="RS512_modulus"
               value="AKuc75KyKNwteumhyN5Kxa4ipQZrE_ouULtMZmCYI3Y32oCv3wWkgmrprBo-yCK292wfn77dNdZ9h5OoY-6sDVG-OKi9uwXpFcopyqIdsYOrw-4FKHxpr_7b--cH6HRmGlSFKVJpwfvIjD9Mu8S9bhNgnXfbKoYLcANU7Vjtacr3MvX-U406eRXLI9lZNr6ViQxSJw3A7yYMo2XYMYhO-FHGOYeV815q7fJFUMoCUMNSWlCx-pUCVGg0PuCKlOhUGIoLqvuFqUnBNd0hoAJCtmqya4_e3DLNzOgr2HOEbX7kQEjpi0XdyQ0fbFTAYO9TpXT2gldnmOElZ4UE2lX8J6M"/>
    <parameter name="RS512_privateExponent"
               value="doYyFGAFxmOG43tAbv63XthAn5kut_hq-6D9iDMrMsfKmlxdLNl81XhDy_CWaxtw8PU6cCj5uQUDsSB4vGuJ224EVc6ML73WtcR9VdAqPOVRsb9QQfUAf4XRibO1gUbPYpaBfpDaUBonesR1XqDyOGHe_9uXl_KoTzTFpEh8a5eCk9mwz85bb08PxQUut5DFdzPPyTi8_k3m7hry97I0TMbHUTiTqjgFpq2ZqSn4KQz77uft1oMwJLvlNHP6Fs25aVYrgAWw1DfTcCDwPAKxXlCD4ZPfGN2LmxZWCYxj1HLVKmQkrjX-FSgvpHs7YUqzJ19whmrTEtODnhWvZhTucQ"/>
    <!-- ES256 -->
    <parameter name="ES256_d"
               value="AIiNVUvr6-ChpOv2F7HNXyS2pYuoLF3ZqF2kTP0XquzB"/>
    <!-- ES384 -->
    <parameter name="ES384_d"
               value="S5iDyZaSar7cqcCKYFC1VGVKAXmwdOSHRMrwbrEd_WvmIYi3u8PwHFYAmA0PEwLF"/>
    <!-- ES512 -->
    <parameter name="ES512_d"
               value="AbedxoxLdftbJpXMYWlcuJkEF6iRotCxYYbH18NyEuOka_vS5dLV6m6Bhx_y_y9NgTQzP5SGzfpkSpgF6JVG7eFL"/>

    <!-- Form Interaction -->
    <parameter name="loginFormUsername" value="loginForm:username"/>
    <parameter name="loginFormPassword" value="loginForm:password"/>
    <parameter name="loginFormLoginButton" value="loginForm:loginButton"/>
    <parameter name="authorizeFormAllowButton" value="authorizeForm:allowButton"/>
    <parameter name="authorizeFormDoNotAllowButton" value="authorizeForm:doNotAllowButton"/>
</suite>