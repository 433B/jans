openapi: 3.0.1
info:
  title: oxauth-config
  description: oxauth-config - Authorization services
  contact:
    email: xxx@gluu.org
  license:
    name: License
    url: 'https://github.com/GluuFederation/oxauth-config/blob/master/LICENSE'
  version: '1.0'
servers:
  - url: 'https://gluu.org/'
tags:
  - name: developers
    description: oxauth-config enables access to the features available via the existing oxAuth API.
  - name: Attribute
  - name: Authentication
  - name: Cache Configuration
  - name: Cache Configuration – Memcached
  - name: Cache Configuration – Redis
  - name: Cache Configuration – in-Memory
  - name: Cache Configuration – Native-Persistence
  - name: Configuration – Properties
  - name: Configuration – Backchannel
  - name: Configuration – Dynamic Registration
  - name: Configuration – IdToken
  - name: Configuration – oxEleven
  - name: Configuration – Request Object
  - name: Configuration – Responses Types
  - name: Configuration – Responses Modes
  - name: Configuration – User Info
  - name: Configuration – UMA
  - name: Configuration – Session ID
  - name: Configuration – Pairwise
  - name: Configuration – Fido2
  - name: Configuration – CIBA
  - name: Configuration – Cors Configuration Filter
  - name: Configuration – SMTP
  - name: Configuration – Library
  - name: Configuration – Logs
  - name: Configuration – JWK - JSON Web Key Set (JWKs)
  - name: Custom Scripts
  - name: Custom Scripts - Person Authentication
  - name: Custom Scripts - Consent Gathering
  - name: Custom Scripts - Client Registration
  - name: Custom Scripts - Dynamic Scopes
  - name: Custom Scripts - UMA RPT Policies
  - name: Custom Scripts - UMA Claims Gathering
  - name: Custom Scripts - Introspection
  - name: Custom Scripts - Resource Owner Password Credentials
  - name: Custom Scripts - Application Session
  - name: Database - Couchbase
  - name: Database - LDAP configuration
  - name: Graphics - Logo
  - name: Graphics - Favicon
  - name: OAuth - OpenID Connect - Clients
  - name: OAuth - OpenID Connect - Scopes
  - name: OAuth - OpenID Connect - Sector Identifiers
  - name: OAuth - UMA Scopes
  - name: OAuth - UMA Resources
paths:
  /config/properties:
    get:
      summary: Gets all oxAuth configuration properties.
      description: Gets all oxAuth configuration properties.
      operationId: get-properties-all
      security:
        - oxAuth:
            - read
      tags:
        - Configuration – Properties
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: AppConfiguration
                description: List of all oxauth-config properties.
                items:
                  type: object
                  title: AppConfiguration
                  description: App configuration properties.
                  required:
                    - sessionAsJwt
                    - issuer
                    - baseEndpoint
                    - authorizationEndpoint
                    - tokenEndpoint
                    - tokenRevocationEndpoint
                    - userInfoEndpoint
                    - clientInfoEndpoint
                    - checkSessionIFrame
                    - endSessionEndpoint
                    - jwksUri
                    - registrationEndpoint
                    - openIdDiscoveryEndpointLDAP
                    - openIdConfigurationEndpoint
                    - idGenerationEndpoint
                    - introspectionEndpoint
                    - introspectionAccessTokenMustHaveUmaProtectionScope
                    - umaConfigurationEndpoint
                    - oxElevenGenerateKeyEndpoint
                    - oxElevenSignEndpoint
                    - oxElevenVerifySignatureEndpoint
                    - oxElevenDeleteKeyEndpoint
                    - oxElevenJwksEndpoint
                    - openidSubAttribute
                    - responseTypesSupported
                    - responseModesSupported
                    - grantTypesSupported
                    - defaultSubjectType
                    - userInfoSigningAlgValuesSupported
                    - userInfoEncryptionAlgValuesSupported
                    - userInfoEncryptionEncValuesSupported
                    - idTokenSigningAlgValuesSupported
                    - idTokenEncryptionAlgValuesSupported
                    - idTokenEncryptionEncValuesSupported
                    - requestObjectSigningAlgValuesSupported
                    - requestObjectEncryptionAlgValuesSupported
                    - requestObjectEncryptionEncValuesSupported
                    - tokenEndpointAuthMethodsSupported
                    - tokenEndpointAuthSigningAlgValuesSupported
                    - dynamicRegistrationCustomAttributes
                    - displayValuesSupported
                    - claimTypesSupported
                    - serviceDocumentation
                    - claimsLocalesSupported
                    - idTokenTokenBindingCnfValuesSupported
                    - uiLocalesSupported
                    - opPolicyUri
                    - opTosUri
                    - authorizationCodeLifetime
                    - refreshTokenLifetime
                    - idTokenLifetime
                    - accessTokenLifetime
                    - umaRptLifetime
                    - umaTicketLifetime
                    - umaPctLifetime
                    - umaResourceLifetime
                  properties:
                    sessionAsJwt:
                      type: boolean
                      description: Boolean value true saves session data as a JWT.
                    issuer:
                      type: string
                      description: URL using the https scheme that OP asserts as Issuer identifier.
                      example: 'https://server.example.com/'
                    baseEndpoint:
                      type: string
                      description: The base URL for endpoints.
                      example: 'https://server.example.com/oxauth/restv1'
                    authorizationEndpoint:
                      type: string
                      description: The authorization endpoint URL.
                      example: 'https://server.example.com/oxauth/restv1/authorize'
                    tokenEndpoint:
                      type: string
                      description: The token endpoint URL.
                      example: 'https://server.example.com/oxauth/restv1/token'
                    tokenRevocationEndpoint:
                      type: string
                      description: The URL for the access_token or refresh_token revocation endpoint.
                      example: 'https://server.example.com/oxauth/restv1/revoke'
                    userInfoEndpoint:
                      type: string
                      description: The User Info endpoint URL.
                      example: 'https://server.example.com/oxauth/restv1/userinfo'
                    clientInfoEndpoint:
                      type: string
                      description: The Client Info endpoint URL.
                      example: 'https://server.example.com/oxauth/restv1/clientinfo'
                    checkSessionIFrame:
                      type: string
                      description: URL for an OP IFrame that supports cross-origin communications for session state information with the RP Client using the HTML5 postMessage API.
                      example: 'https://server.example.com/oxauth/opiframe.htm'
                    endSessionEndpoint:
                      type: string
                      description: URL at the OP to which an RP can perform a redirect to request that the end user be logged out at the OP.
                      example: 'https://server.example.com/oxauth/restv1/end_session'
                    jwksUri:
                      type: string
                      description: URL of the OP's JSON Web Key Set (JWK) document. This contains the signing key(s) the RP uses to validate signatures from the OP.
                      example: 'https://server.example.com/oxauth/restv1/jwks'
                    registrationEndpoint:
                      type: string
                      description: URL of the Registration Endpoint.
                      example: 'https://server.example.com/oxauth/restv1/register'
                    openIdDiscoveryEndpoint:
                      type: string
                      description: URL for the Discovery Endpoint.
                      example: 'https://server.example.com/.well-known/webfinger'
                    openIdConfigurationEndpoint:
                      type: string
                      description: URL for the Open ID Connect Configuration Endpoint.
                      example: 'https://server.example.com/.well-known/openid-configuration'
                    idGenerationEndpoint:
                      type: string
                      description: URL for the ID Generation Endpoint.
                      example: 'https://server.example.com/oxauth/restv1/id'
                    introspectionEndpoint:
                      type: string
                      description: URL for the Introspection Endpoint.
                      example: 'https://server.example.com/oxauth/restv1/introspection'
                    introspectionAccessTokenMustHaveUmaProtectionScope:
                      type: boolean
                      description: Reject introspection requests if access_token in Authorization header does not have uma_protection scope.
                      default: false
                    umaConfigurationEndpoint:
                      type: string
                      description: URL for the UMA Configuration Endpoint.
                      example: 'https://server.example.com/oxauth/restv1/uma2-configuration'
                    sectorIdentifierEndpoint:
                      type: string
                      description: URL for the Sector Identifier Endpoint.
                      example: null
                    oxElevenGenerateKeyEndpoint:
                      type: string
                      description: URL for the oxEleven Generate Key Endpoint.
                      example: 'https://server.example.com/oxeleven/rest/oxeleven/generateKey'
                    oxElevenSignEndpoint:
                      type: string
                      description: URL for the oxEleven Sign Endpoint.
                      example: 'https://server.example.com/oxeleven/rest/oxeleven/sign'
                    oxElevenVerifySignatureEndpoint:
                      type: string
                      description: URL for the oxEleven Verify Signature Endpoint.
                      example: 'https://server.example.com/oxeleven/rest/oxeleven/verifySignature'
                    oxElevenDeleteKeyEndpoint:
                      type: string
                      description: URL for the oxEleven Delete Key Endpoint.
                      example: 'https://server.example.com/oxeleven/rest/oxeleven/deleteKey'
                    oxElevenJwksEndpoint:
                      type: string
                      description: URL for the oxEleven JWKS Endpoint.
                      example: null
                    openidSubAttribute:
                      type: string
                      description: Specifies which LDAP attribute is used for the subject identifier claim.
                      example: inum
                    responseTypesSupported:
                      type: array
                      description: A list of the OAuth 2.0 response_type values that this OP supports.
                      minItems: 1
                      items:
                        type: string
                      enum:
                        - code
                        - token
                        - id_token
                    responseModesSupported:
                      type: array
                      description: A list of the OAuth 2.0 Response Mode values that this OP supports.
                      items:
                        type: string
                      enum:
                        - query
                        - fragment
                        - form_post
                    grantTypesSupported:
                      type: array
                      description: A list of the OAuth 2.0 Grant Type values that this OP supports.
                      items:
                        type: string
                      enum:
                        - authorization_code
                        - implicit
                        - password
                        - client_credentials
                        - refresh_token
                        - '\urn\:ietf\:params\:oauth\:grant-type\:uma-ticket'
                        - '\urn\:openid\:params\:grant-type\:ciba'
                    dynamicGrantTypeDefault:
                      type: array
                      description: list of the OAuth 2.0 Grant Type values that it's possible to set via client registration API..
                      items:
                        type: string
                      enum:
                        - authorization_code
                        - implicit
                        - password
                        - client_credentials
                        - refresh_token
                        - 'urn:ietf:params:oauth:grant-type:uma-ticket'
                        - 'urn:openid:params:grant-type:ciba'
                    subjectTypesSupported:
                      type: array
                      description: A list of the Subject Identifier types that this OP supports. Valid types include pairwise and public.
                      items:
                        type: string
                      enum:
                        - public
                        - pairwise
                    defaultSubjectType:
                      type: string
                      description: Default Subject Type used for Dynamic Client Registration.
                      items:
                        type: string
                      enum:
                        - public
                        - pairwise
                    userInfoSigningAlgValuesSupported:
                      type: array
                      description: A list of the JWS signing algorithms (alg values) JWA supported by the UserInfo Endpoint to encode the Claims in a JWT.
                      items:
                        type: string
                      enum:
                        - HS256
                        - HS384
                        - HS512
                        - RS256
                        - RS384
                        - RS512
                        - ES256
                        - ES384
                        - ES512
                        - PS256
                        - PS384
                        - PS512
                    userInfoEncryptionAlgValuesSupported:
                      type: array
                      description: A list of the JWE encryption algorithms (alg values) JWA supported by the UserInfo Endpoint to encode the Claims in a JWT.
                      items:
                        type: string
                      enum:
                        - RSA1_5
                        - RSA-OAEP
                        - A128KW
                        - A256KW
                    userInfoEncryptionEncValuesSupported:
                      type: array
                      description: A list of the JWE encryption algorithms (enc values) JWA supported by the UserInfo Endpoint to encode the Claims in a JWT.
                      items:
                        type: string
                      enum:
                        - A128CBC+HS256
                        - A256CBC+HS512
                        - A128GCM
                        - A256GCM
                    idTokenSigningAlgValuesSupported:
                      type: array
                      description: A list of the JWS signing algorithms (alg values) supported by the OP for the ID Token to encode the Claims in a JWT.
                      items:
                        type: string
                      enum:
                        - none
                        - HS256
                        - HS384
                        - HS512
                        - RS256
                        - RS384
                        - RS512
                        - ES256
                        - ES384
                        - ES512
                        - PS256
                        - PS384
                        - PS512
                    idTokenEncryptionAlgValuesSupported:
                      type: array
                      description: A list of the JWE encryption algorithms (alg values) supported by the OP for the ID Token to encode the Claims in a JWT.
                      items:
                        type: string
                      enum:
                        - RSA1_5
                        - RSA-OAEP
                        - A128KW
                        - A256KW
                    idTokenEncryptionEncValuesSupported:
                      type: array
                      description: A list of the JWE encryption algorithms (enc values) supported by the OP for the ID Token to encode the Claims in a JWT.
                      items:
                        type: string
                      enum:
                        - A128CBC+HS256
                        - A256CBC+HS512
                        - A128GCM
                        - A256GCM
                    requestObjectSigningAlgValuesSupported:
                      type: array
                      description: A list of the JWS signing algorithms (alg values) supported by the OP for Request Objects.
                      items:
                        type: string
                      enum:
                        - none
                        - HS256
                        - HS384
                        - HS512
                        - RS256
                        - RS384
                        - RS512
                        - ES256
                        - ES384
                        - ES512
                        - PS256
                        - PS384
                        - PS512
                    requestObjectEncryptionAlgValuesSupported:
                      type: array
                      description: A list of the JWE encryption algorithms (alg values) supported by the OP for Request Objects.
                      items:
                        type: string
                      enum:
                        - RSA1_5
                        - RSA-OAEP
                        - A128KW
                        - A256KW
                    requestObjectEncryptionEncValuesSupported:
                      type: array
                      description: A list of the JWE encryption algorithms (enc values) supported by the OP for Request Objects.
                      items:
                        type: string
                      enum:
                        - A128CBC+HS256
                        - A256CBC+HS512
                        - A128GCM
                        - A256GCM
                    tokenEndpointAuthMethodsSupported:
                      type: array
                      description: A list of Client Authentication methods supported by this Token Endpoint.
                      items:
                        type: string
                      enum:
                        - client_secret_basic
                        - client_secret_post
                        - client_secret_jwt
                        - private_key_jwt
                    tokenEndpointAuthSigningAlgValuesSupported:
                      type: array
                      description: A list of the JWS signing algorithms (alg values) supported by the Token Endpoint for the signature on the JWT used to authenticate the Client at the Token Endpoint for the private_key_jwt and client_secret_jwt authentication methods.
                      items:
                        type: string
                      enum:
                        - HS256
                        - HS384
                        - HS512
                        - RS256
                        - RS384
                        - RS512
                        - ES256
                        - ES384
                        - ES512
                        - PS256
                        - PS384
                        - PS512
                    dynamicRegistrationCustomAttributes:
                      type: array
                      description: Custom attributes for the Dynamic registration.
                      items:
                        type: string
                      enum:
                        - oxAuthTrustedClient
                    displayValuesSupported:
                      type: array
                      description: A list of the display parameter values that the OpenID Provider supports.
                      items:
                        type: string
                      enum:
                        - page
                        - popup
                    claimTypesSupported:
                      type: array
                      description: A list of the Claim Types that the OpenID Provider supports.
                      items:
                        type: string
                      enum:
                        - normal
                    serviceDocumentation:
                      type: string
                      description: URL of a page containing human-readable information that developers might want or need to know when using the OpenID Provider.
                      items:
                        type: string
                      format: url
                      example: 'http://gluu.org/docs'
                    claimsLocalesSupported:
                      type: array
                      description: Languages and scripts supported for values in Claims being returned.
                      items:
                        type: string
                      enum:
                        - en
                    idTokenTokenBindingCnfValuesSupported:
                      type: array
                      description: 'Array containing a list of the JWT Confirmation Method member names supported by the OP for Token Binding of ID Tokens. The presence of this parameter indicates that the OpenID Provider supports Token Binding of ID Tokens. If omitted, the default is that the OpenID Provider does not support Token Binding of ID Tokens.'
                      items:
                        type: string
                      enum:
                        - tbh
                    uiLocalesSupported:
                      type: array
                      description: Languages and scripts supported for the user interface.
                      items:
                        type: string
                      enum:
                        - en
                        - es
                    persistIdTokenInLdap:
                      type: boolean
                      description: Specifies whether to persist id_token into LDAP (otherwise saves into cache).
                      default: false
                    persistRefreshTokenInLdap:
                      type: boolean
                      description: Specifies whether to persist refresh_token into LDAP (otherwise saves into cache).
                      default: true
                    claimsParameterSupported:
                      type: boolean
                      description: Specifies whether the OP supports use of the claim’s parameter.
                      default: false
                    requestParameterSupported:
                      type: boolean
                      description: Boolean value specifying whether the OP supports use of the request parameter.
                      default: false
                    requestUriParameterSupported:
                      type: boolean
                      description: Boolean value specifying whether the OP supports use of the request_uri parameter.
                      default: false
                    requireRequestUriRegistration:
                      type: boolean
                      description: Boolean value specifying whether the OP requires any request_uri values used to be pre-registered using the request_uris registration parameter.
                      default: false
                    opPolicyUri:
                      type: string
                      description: URL that the OpenID Provider provides to the person registering the Client to read about the OP's requirements on how the Relying Party can use the data provided by the OP.
                      example: 'http://ox.gluu.org/doku.php?id=oxauth:policy'
                    opTosUri:
                      type: string
                      description: URL that the OpenID Provider provides to the person registering the Client to read about OpenID Provider's terms of service.
                      example: 'http://ox.gluu.org/doku.php?id=oxauth:tos'
                    authorizationCodeLifetime:
                      type: integer
                      description: The lifetime of the Authorization Code.
                      multipleOf: 1
                      minimum: 1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      example: 60
                    refreshTokenLifetime:
                      type: integer
                      description: The lifetime of the Refresh Token.
                      multipleOf: 1
                      minimum: 1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      example: 14400
                    idTokenLifetime:
                      type: integer
                      description: The lifetime of the ID Token.
                      multipleOf: 1
                      minimum: 1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      example: 3600
                    accessTokenLifetime:
                      type: integer
                      description: The lifetime of the short-lived Access Token.
                      multipleOf: 1
                      minimum: 1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      example: 3600
                    umaRptLifetime:
                      type: integer
                      description: UMA RPT lifetime.
                      multipleOf: 1
                      minimum: 1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      example: 3600
                    umaTicketLifetime:
                      type: integer
                      description: UMA ticket lifetime.
                      multipleOf: 1
                      minimum: 1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      example: 3600
                    umaPctLifetime:
                      type: integer
                      description: UMA PCT lifetime.
                      multipleOf: 1
                      minimum: 1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      example: 3600
                    umaResourceLifetime:
                      type: integer
                      description: UMA PCT lifetime.
                      multipleOf: 1
                      minimum: 1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      example: 3600
                    umaAddScopesAutomatically:
                      type: boolean
                      description: Add UMA scopes automatically if it is not registered yet.
                      default: false
                    umaValidateClaimToken:
                      type: boolean
                      description: Validate claim_token as id_token assuming it is issued by local idp.
                      default: false
                    umaGrantAccessIfNoPolicies:
                      type: boolean
                      description: Specifies whether to grant access to resources if there are no any policies associated with scopes.
                      default: false
                    umaRestrictResourceToAssociatedClient:
                      type: boolean
                      description: Restrict access to resource by associated client.
                      default: false
                    umaKeepClientDuringResourceSetRegistration:
                      type: boolean
                      description: Save client information during resource registration.
                      default: false
                    umaRptAsJwt:
                      type: boolean
                      description: Issue RPT as JWT or as random string.
                      default: false
                    cleanServiceInterval:
                      type: integer
                      description: Time interval for the Clean Service in seconds.
                      multipleOf: 1
                      minimum: 1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      example: 60
                    cleanServiceBaseDns:
                      type: array
                      description: List of additional base dns under which AS will look up for expired entities.
                      items:
                        type: string
                      minItems: 0
                      uniqueItems: true
                      example:
                        - ssn
                    cleanServiceBatchChunkSize:
                      type: integer
                      description: Each clean up iteration fetches chunk of expired data per base dn and removes it from storage.
                      multipleOf: 1
                      minimum: 1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      example: 10000
                    keyRegenerationEnabled:
                      type: boolean
                      description: Boolean value specifying whether to regenerate keys.
                      default: false
                    keyRegenerationInterval:
                      type: integer
                      description: The interval for key regeneration in hours.
                      multipleOf: 1
                      minimum: 1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      example: 48
                    defaultSignatureAlgorithm:
                      type: string
                      description: The default signature algorithm to sign ID Tokens.
                      items:
                        type: string
                      enum:
                        - HS256
                        - HS384
                        - HS512
                        - RS256
                        - RS384
                        - RS512
                        - ES256
                        - ES384
                        - ES512
                    oxOpenIdConnectVersion:
                      type: string
                      description: OpenID Connect Version.
                      minLength: 1
                      example: openidconnect-1.0
                    oxId:
                      type: string
                      description: URL for the Inum generator Service.
                      format: url
                      minLength: 1
                      example: 'https://server.example.com/oxid/service/gluu/inum'
                    dynamicRegistrationEnabled:
                      type: boolean
                      description: Boolean value specifying whether to enable Dynamic Registration.
                      default: false
                    dynamicRegistrationExpirationTime:
                      type: integer
                      description: 'Expiration time in seconds for clients created with dynamic registration, -1 means never expire.'
                      multipleOf: 1
                      minimum: 0
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      default: -1
                    dynamicRegistrationPersistClientAuthorizations:
                      type: boolean
                      description: Boolean value specifying whether to persist client authorizations.
                      default: false
                    trustedClientEnabled:
                      type: boolean
                      description: Boolean value specifying whether a client is trusted and no authorization is required.
                      default: false
                    dynamicRegistrationScopesParamEnabled:
                      type: boolean
                      description: Boolean value specifying whether to enable scopes parameter in dynamic registration.
                      default: false
                    dynamicRegistrationCustomObjectClass:
                      type: string
                      description: LDAP custom object class for dynamic registration.
                      minLength: 1
                    personCustomObjectClassList:
                      type: array
                      description: LDAP custom object class list for dynamic person enrolment.
                      uniqueItems: true
                      minItems: 0
                      items:
                        type: string
                      enum:
                        - gluuCustomPerson
                        - gluuPerson
                    authenticationFiltersEnabled:
                      type: boolean
                      description: Boolean value specifying whether to enable user authentication filters.
                      default: false
                    clientAuthenticationFiltersEnabled:
                      type: boolean
                      description: Boolean value specifying whether to enable client authentication filters.
                      default: false
                    authenticationFilters:
                      type: array
                      description: User authentication filters.
                      uniqueItems: false
                      minItems: 1
                      items:
                        type: object
                        properties:
                          filter:
                            type: string
                            example: '(&(mail=*{0}*)(inum={1}))'
                          bind:
                            type: boolean
                            default: false
                          bind-password-attribute:
                            type: string
                          base-dn:
                            type: string
                            example: 'ou=people,o=gluu'
                    clientAuthenticationFilters:
                      type: array
                      description: Client authentication filters.
                      uniqueItems: false
                      minItems: 1
                      items:
                        type: object
                        properties:
                          filter:
                            type: string
                            example: 'myCustomAttr1={0}'
                          bind:
                            type: boolean
                            default: false
                          bind-password-attribute:
                            type: string
                          base-dn:
                            type: string
                            example: 'ou=clients,o=gluu'
                    sessionIdUnusedLifetime:
                      type: integer
                      description: The lifetime for unused session states.
                      multipleOf: 1
                      minimum: 1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      example: 86400
                    sessionIdUnauthenticatedUnusedLifetime:
                      type: integer
                      description: The lifetime for unused unauthenticated session states.
                      multipleOf: 1
                      minimum: 1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      default: 120
                      example: 800
                    sessionIdLifetime:
                      type: integer
                      description: The lifetime of session id in seconds. If 0 or -1 then expiration is not set. `session_id` cookie expires when browser session ends.
                      multipleOf: 1
                      minimum: -1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      default: 86400
                      example: 86400
                    sessionIdEnabled:
                      type: boolean
                      description: Boolean value specifying whether to enable authentication by session_id.
                      default: false
                    sessionIdPersistOnPromptNone:
                      type: boolean
                      description: Boolean value specifying whether to persist session ID on prompt none.
                      default: false
                    configurationUpdateInterval:
                      type: integer
                      description: The interval for configuration update in seconds.
                      multipleOf: 1
                      minimum: 1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      example: 3600
                    cssLocation:
                      type: string
                      description: The location for CSS files.
                      minLength: 1
                    jsLocation:
                      type: string
                      description: The location for JavaScript files.
                      minLength: 1
                    imgLocation:
                      type: string
                      description: The location for image files.
                      minLength: 1
                    metricReporterInterval:
                      type: integer
                      description: The interval for metric reporter in seconds.
                      multipleOf: 1
                      minimum: 1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      example: 300
                    metricReporterKeepDataDays:
                      type: integer
                      description: The days to keep metric reported data.
                      multipleOf: 1
                      minimum: 1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      example: 15
                    metricReporterEnabled:
                      type: boolean
                      description: Boolean value specifying whether to enable Metric Reporter.
                      default: true
                    pairwiseIdType:
                      type: string
                      description: The pairwise ID type.
                      items:
                        type: string
                      enum:
                        - persistent
                        - algorithmic
                    pairwiseCalculationKey:
                      type: string
                      description: Key to calculate algorithmic pairwise IDs.
                      minLength: 1
                    pairwiseCalculationSalt:
                      type: string
                      description: Salt to calculate algorithmic pairwise IDs.
                      minLength: 1
                    shareSubjectIdBetweenClientsWithSameSectorId:
                      type: boolean
                      description: Share Subject ID between clients with same Sector ID.
                      default: false
                    webKeysStorage:
                      type: string
                      description: Web Key Storage Type.
                      format: enum - keystore - pkcs11
                    dnName:
                      type: string
                      description: DN of certificate issuer.
                      minLength: 1
                      example: CN=oxAuth CA Certificates
                    keyStoreFile:
                      type: string
                      description: The Key Store File (JKS).
                      minLength: 1
                      example: /etc/certs/oxauth-keys.jks
                    keyStoreSecret:
                      type: string
                      description: The password of the Key Store.
                      minLength: 1
                    endSessionWithAccessToken:
                      type: boolean
                      description: Accept access token to call end_session endpoint.
                    clientWhiteList:
                      type: array
                      description: White List for Client Redirection URIs.
                      uniqueItems: true
                      minItems: 0
                      items:
                        type: string
                    clientBlackList:
                      type: array
                      description: Black List for Client Redirection URIs.
                      uniqueItems: true
                      minItems: 0
                      items:
                        type: string
                    legacyIdTokenClaims:
                      type: boolean
                      description: Include Claims in ID Token.
                    customHeadersWithAuthorizationResponse:
                      type: boolean
                      description: Boolean value specifying whether to enable Custom Response Header parameter to return custom headers with the Authorization Response.
                    frontChannelLogoutSessionSupported:
                      type: boolean
                      description: Boolean value to specify support for front channel logout session.
                    useCacheForAllImplicitFlowObjects:
                      type: boolean
                      description: Boolean value to specify whether to persist all objects into cache during Implicit Flow.
                      default: false
                    invalidateSessionCookiesAfterAuthorizationFlow:
                      type: boolean
                      description: Boolean value to specify whether to invalidate `session_id` and `consent_session_id` cookies right after successful or unsuccessful authorization.
                      default: false
                    updateUserLastLogonTime:
                      type: boolean
                      description: Boolean value to specify if application should update oxLastLogonTime attribute on user authentication.
                      default: false
                    updateClientAccessTime:
                      type: boolean
                      description: Boolean value to specify if application should update oxLastAccessTime/oxLastLogonTime attributes on client authentication.
                      default: false
                    enableClientGrantTypeUpdate:
                      type: boolean
                      description: Boolean value to specify if client can update Grant Type values.
                      default: false
                    loggingLevel:
                      type: string
                      description: Logging level for oxAuth logger.
                      format: enum - TRACE - DEBUG - INFO - WARN - ERROR - FATAL - OFF
                    corsConfigurationFilters:
                      type: array
                      description: CORS Configuration filters.
                      minItems: 1
                      uniqueItems: false
                      items:
                        type: object
                        properties:
                          filterName:
                            type: string
                            minLength: 1
                          corsEnabled:
                            type: boolean
                            default: true
                          corsAllowedOrigins:
                            type: string
                            minLength: 1
                            default: \*
                          corsAllowedMethods:
                            type: string
                            default: 'GET, POST, HEAD, OPTIONS'
                          corsAllowedHeaders:
                            type: string
                            minLength: 1
                            default: 'Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers'
                          corsExposedHeaders:
                            type: string
                            minLength: 1
                          corsSupportCredentials:
                            type: boolean
                            default: true
                          corsLoggingEnabled:
                            type: boolean
                            default: false
                          corsPreflightMaxAge:
                            type: integer
                            multipleOf: 1
                            minimum: 1
                            exclusiveMinimum: false
                            maximum: 2147483647
                            exclusiveMaximum: false
                            default: 1800
                          corsRequestDecorate:
                            type: boolean
                            default: true
                    logClientIdOnClientAuthentication:
                      type: boolean
                      description: Boolean value to specify if application should log the Client ID on client authentication.
                    logClientNameOnClientAuthentication:
                      type: boolean
                      description: Boolean value to specify if application should log the Client Name on client authentication.
                    authorizationRequestCustomAllowedParameters:
                      type: array
                      description: Authorization Request Custom Allowed Parameters.
                      minItems: 0
                      uniqueItems: true
                      items:
                        type: string
                    legacyDynamicRegistrationScopeParam:
                      type: boolean
                      description: Legacy Dynamic Registration Scopes JSON Array Param.
                    openidScopeBackwardCompatibility:
                      type: boolean
                      description: 'Set to false to only allow token endpoint request for openid scope with grant type equals to authorization_code, restrict access to userinfo to scope openid and only return id_token if scope contains openid.'
                      default: false
                    skipAuthorizationForOpenIdScopeAndPairwiseId:
                      type: boolean
                      description: 'If a client has only openid scope and pairwise id, person should not have to authorize.'
                      default: false
                    allowPostLogoutRedirectWithoutValidation:
                      type: boolean
                      description: Allows post logout redirect without validation for End Session Endpoint.
                      default: false
                    httpLoggingEnabled:
                      type: boolean
                      description: Enable/Disable request/response logging filter.
                      default: false
                    httpLoggingExludePaths:
                      type: array
                      description: List of base URI for which request/response logging filter should not record activity.
                      minItems: 0
                      uniqueItems: true
                      items:
                        type: string
                      example: '\"/oxauth/img\", \"/oxauth/stylesheet\"'
                    externalLoggerConfiguration:
                      type: string
                      description: Path to external log4j2 logging configuration.
                      minLength: 1
                      example: /identity/logviewer/configure
                    disableU2fEndpoint:
                      type: boolean
                      description: Path to external log4j2 logging configuration.
                      default: false
                    disableJdkLogger:
                      type: boolean
                      description: Boolean value specifying whether to enable JDK Loggers.
                      default: true
                    jmsUserName:
                      type: string
                      description: JMS UserName.
                      minLength: 1
                    jmsPassword:
                      type: string
                      description: JMS Password.
                      minLength: 1
                    jmsBrokerURISetjmsBrokerURISet:
                      type: array
                      description: JMS Broker URI Set.
                      format: select
                      items:
                        type: string
                    oxElevenTestModeToken:
                      type: string
                      description: oxEleven Test Mode Token.
                      minLength: 1
                    enabledOAuthAuditLogging:
                      type: boolean
                      description: enabled OAuth Audit Logging.
                    authenticationProtectionConfiguration:
                      type: object
                      description: Authentication Brute Force Protection Configuration.
                      properties:
                        attemptExpiration:
                          type: integer
                          multipleOf: 1
                          minimum: 1
                          maximum: 2147483647
                          exclusiveMinimum: false
                          exclusiveMaximum: false
                        maximumAllowedAttemptsWithoutDelay:
                          type: integer
                          multipleOf: 1
                          minimum: 1
                          maximum: 2147483647
                          exclusiveMinimum: false
                          exclusiveMaximum: false
                        delayTime:
                          type: integer
                          multipleOf: 1
                          minimum: 1
                          maximum: 2147483647
                          exclusiveMinimum: false
                          exclusiveMaximum: false
                        bruteForceProtectionEnabled:
                          type: boolean
                    errorHandlingMethod:
                      type: string
                      description: A list of possible error handling methods.
                      format: enum - internal - remote
                    useLocalCache:
                      type: boolean
                      description: 'Boolean value specifying whether to enable local in-memory cache for attributes, scopes, clients and organization configuration.'
                      default: false
                    spontaneousScopeLifetime:
                      type: integer
                      description: The lifetime of spontaneous scope in seconds.
                      multipleOf: 1
                      minimum: 1
                      maximum: 2147483647
                      exclusiveMinimum: false
                      exclusiveMaximum: false
                    jwksAlgorithmsSupported:
                      type: array
                      description: A list of algorithms that will be used in JWKS endpoint.
                      minItems: 1
                      uniqueItems: true
                      items:
                        type: string
                      format: select - RS256 - RS384 - RS512 - ES256 - ES384 - ES512 - PS256 - PS384 - PS512 - RSA1_5 - RSA-OAEP
                    dynamicRegistrationPasswordGrantTypeEnabled:
                      type: boolean
                      description: Boolean value specifying whether to enable Password Grant Type during Dynamic Registration.
                      default: false
                    returnClientSecretOnRead:
                      type: boolean
                      description: Boolean value specifying whether a client_secret is returned on client GET or PUT. Set to false by default which means to not return secret.
                      default: false
                    rejectJwtWithNoneAlg:
                      type: boolean
                      description: Boolean value specifying whether reject JWT requested or validated with algorithm None. Default value is true.
                      default: true
                    expirationNotificatorEnabled:
                      type: boolean
                      description: 'Boolean value specifying whether expiration notificator is enabled (used to identify expiration for persistence that support TTL, like Couchbase).'
                      default: true
                    expirationNotificatorMapSizeLimit:
                      type: integer
                      description: The expiration notificator maximum size limit.
                      default: 100000
                    expirationNotificatorIntervalInSeconds:
                      type: integer
                      description: The expiration notificator interval in seconds.
                      default: 600
                    clientRegDefaultToCodeFlowWithRefresh:
                      type: boolean
                      description: Boolean value specifying whether to add Authorization Code Flow with Refresh grant during client registration.
                    sessionIdRequestParameterEnabled:
                      type: boolean
                      description: Boolean value specifying whether to enable session_id HTTP request parameter.
                      default: false
                    changeSessionIdOnAuthentication:
                      type: boolean
                      description: Boolean value specifying whether to enable session_id HTTP request parameter.
                      default: true
                    serverSessionIdLifetime:
                      type: integer
                      description: The sessionId lifetime in seconds for sessionId.
                      default: 86400
                    cookieDomain:
                      type: string
                      description: Sets cookie domain for all cookies created by OP.
                    loggingLayout:
                      type: string
                      description: Sets the layout of logging.
                    fapiCompatibility:
                      type: boolean
                      description: Boolean value specifying whether turn on FAPI compatibility mode. If true AS behaves in more strict mode.
                      default: false
                    forceIdTokenHintPrecense:
                      type: boolean
                      description: Boolean value specifying whether force id_token_hint parameter presence (false by default).
                      default: false
                    forceOfflineAccessScopeToEnableRefreshToken:
                      type: boolean
                      description: Boolean value specifying whether force offline_access scope to enable refresh_token grant type. Default value is true.
                      default: true
                    errorReasonEnabled:
                      type: boolean
                      description: Boolean value specifying whether to return detailed reason of the error from AS. Default value is false.
                      default: false
                    removeRefreshTokensForClientOnLogout:
                      type: boolean
                      description: Boolean value specifying whether to remove refresh tokens on logout. Default value is true.
                      default: true
                    consentGatheringScriptBackwardCompatibility:
                      type: boolean
                      description: Boolean value specifying whether turn on Consent Gathering Script backward compatibility mode. If true AS will pick up script with higher level globally. If false (default) AS will pick up script based on client configuration.
                      default: false
                    introspectionScriptBackwardCompatibility:
                      type: boolean
                      description: Boolean value specifying whether switch off client's introspection scripts (true value) and run all scripts that exists on server. Default value is false.
                      default: false
                    keepAuthenticatorAttributesOnAcrChange:
                      type: boolean
                      description: Boolean value specifying whether to keep authenticator attributes on ACR change.
                      default: false
                    backchannelClientId:
                      type: string
                      description: Backchannel Client Id.
                      minLength: 0
                    backchannelRedirectUri:
                      type: string
                      description: Backchannel Redirect Uri.
                      minLength: 0
                      example: 'https://server.example.com/oxeleven/rest/backchannel/backchannelRedirectUri'
                    backchannelAuthenticationEndpoint:
                      type: string
                      description: Backchannel Authentication Endpoint.
                      minLength: 0
                      example: 'https://server.example.com/oxeleven/rest/backchannel/backchannelAuthenticationEndpoint()'
                    backchannelDeviceRegistrationEndpoint:
                      type: string
                      description: Backchannel Device Registration Endpoint.
                      minLength: 0
                      example: 'https://server.example.com/oxeleven/rest/backchannel/backchannelDeviceRegistrationEndpoint'
                    backchannelTokenDeliveryModesSupported:
                      type: array
                      description: Backchannel Token Delivery Modes Supported.
                      minItems: 0
                      uniqueItems: true
                      items:
                        type: string
                      format: select - poll - ping - push
                    backchannelAuthenticationRequestSigningAlgValuesSupported:
                      type: array
                      description: Backchannel Authentication Request Signing Alg Values Supported.
                      minItems: 0
                      uniqueItems: true
                      items:
                        type: string
                      format: select - RS512 - ES256 - ES384 - ES512 - PS256 - PS384 - PS512
                    backchannelUserCodeParameterSupported:
                      type: boolean
                      description: Backchannel User Code Parameter Supported
                    backchannelBindingMessagePattern:
                      type: string
                      description: Backchannel Binding Message Pattern.
                      minLength: 0
                    backchannelAuthenticationResponseExpiresIn:
                      type: integer
                      description: Backchannel Authentication Response Expires In.
                      multipleOf: 1
                      minimum: 1
                      maximum: 2147483647
                      exclusiveMinimum: false
                      exclusiveMaximum: false
                    backchannelAuthenticationResponseInterval:
                      type: integer
                      description: Backchannel Authentication Response Interval.
                      multipleOf: 1
                      minimum: 1
                      maximum: 2147483647
                      exclusiveMinimum: false
                      exclusiveMaximum: false
                    backchannelLoginHintClaims:
                      type: array
                      description: Backchannel Login Hint Claims.
                      minItems: 0
                      uniqueItems: true
                      items:
                        type: string
                    cibaEndUserNotificationConfig:
                      type: object
                      description: CIBA End User Notification Config.
                      required:
                        - apiKey
                        - authDomain
                        - databaseURL
                        - projectId
                        - storageBucket
                        - messagingSenderId
                        - appId
                        - notificationUrl
                        - notificationKey
                        - publicVapidKey
                      properties:
                        apiKey:
                          type: string
                          minLength: 1
                        authDomain:
                          type: string
                          minLength: 1
                        databaseURL:
                          type: string
                          minLength: 1
                        projectId:
                          type: string
                          minLength: 1
                        storageBucket:
                          type: string
                          minLength: 1
                        messagingSenderId:
                          type: string
                          minLength: 1
                        appId:
                          type: string
                          minLength: 1
                        notificationUrl:
                          type: string
                          minLength: 1
                        notificationKey:
                          type: string
                          minLength: 1
                        publicVapidKey:
                          type: string
                          minLength: 1
                    backchannelRequestsProcessorJobIntervalSec:
                      type: integer
                      description: Specifies the allowable elapsed time in seconds backchannel request processor executes.
                    backchannelRequestsProcessorJobChunkSize:
                      type: integer
                      description: Each backchannel request processor iteration fetches chunk of data to be processed.
                    cibaGrantLifeExtraTimeSec:
                      type: integer
                      description: Specifies the CIBA Grant life extra time in seconds.
                    cibaMaxExpirationTimeAllowedSec:
                      type: integer
                      description: Specifies the CIBA token expiration time in seconds.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /config/properties/backchannel:
    get:
      summary: Gets oxAuth backchannel configuration properties.
      description: Gets oxAuth backchannel configuration properties.
      operationId: get-properties-backchannel
      tags:
        - Configuration – Backchannel
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: BackchannelConfiguration
                items:
                  type: object
                  title: BackchannelConfiguration
                  description: Backchannel configuration properties.
                  required:
                    - backchannelClientId
                    - backchannelRedirectUri
                    - backchannelAuthenticationEndpoint
                    - backchannelDeviceRegistrationEndpoint
                    - backchannelTokenDeliveryModesSupported
                    - backchannelAuthenticationRequestSigningAlgValuesSupported
                    - backchannelUserCodeParameterSupported
                  properties:
                    backchannelClientId:
                      type: string
                      description: Backchannel Client Id.
                      minLength: 0
                    backchannelRedirectUri:
                      type: string
                      description: Backchannel Redirect Uri.
                      minLength: 0
                      example: 'https://server.example.com/oxeleven/rest/backchannel/backchannelRedirectUri'
                    backchannelAuthenticationEndpoint:
                      type: string
                      description: Backchannel Authentication Endpoint.
                      minLength: 0
                      example: 'https://server.example.com/oxeleven/rest/backchannel/backchannelAuthenticationEndpoint()'
                    backchannelDeviceRegistrationEndpoint:
                      type: string
                      description: Backchannel Device Registration Endpoint.
                      minLength: 0
                      example: 'https://server.example.com/oxeleven/rest/backchannel/backchannelDeviceRegistrationEndpoint'
                    backchannelTokenDeliveryModesSupported:
                      type: array
                      description: Backchannel Token Delivery Modes Supported.
                      minItems: 0
                      uniqueItems: true
                      items:
                        type: string
                      format: select - poll - ping - push
                    backchannelAuthenticationRequestSigningAlgValuesSupported:
                      type: array
                      description: Backchannel Authentication Request Signing Alg Values Supported.
                      minItems: 0
                      uniqueItems: true
                      items:
                        type: string
                      format: select - RS512 - ES256 - ES384 - ES512 - PS256 - PS384 - PS512
                    backchannelUserCodeParameterSupported:
                      type: boolean
                      description: Backchannel User Code Parameter Supported
                    backchannelBindingMessagePattern:
                      type: string
                      description: Backchannel Binding Message Pattern.
                      minLength: 0
                    backchannelAuthenticationResponseExpiresIn:
                      type: integer
                      description: Backchannel Authentication Response Expires In.
                      multipleOf: 1
                      minimum: 1
                      maximum: 2147483647
                      exclusiveMinimum: false
                      exclusiveMaximum: false
                    backchannelAuthenticationResponseInterval:
                      type: integer
                      description: Backchannel Authentication Response Interval.
                      multipleOf: 1
                      minimum: 1
                      maximum: 2147483647
                      exclusiveMinimum: false
                      exclusiveMaximum: false
                    backchannelLoginHintClaims:
                      type: array
                      description: Backchannel Login Hint Claims.
                      minItems: 0
                      uniqueItems: true
                      items:
                        type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
    put:
      summary: Updates oxAuth backchannel configuration properties.
      description: Updates oxAuth backchannel configuration properties.
      operationId: put-properties-backchannel
      tags:
        - Configuration – Backchannel
      requestBody:
        content:
          application/json:
            schema:
              title: BackchannelConfiguration
              items:
                type: object
                title: BackchannelConfiguration
                description: Backchannel configuration properties.
                required:
                  - backchannelClientId
                  - backchannelRedirectUri
                  - backchannelAuthenticationEndpoint
                  - backchannelDeviceRegistrationEndpoint
                  - backchannelTokenDeliveryModesSupported
                  - backchannelAuthenticationRequestSigningAlgValuesSupported
                  - backchannelUserCodeParameterSupported
                properties:
                  backchannelClientId:
                    type: string
                    description: Backchannel Client Id.
                    minLength: 0
                  backchannelRedirectUri:
                    type: string
                    description: Backchannel Redirect Uri.
                    minLength: 0
                    example: 'https://server.example.com/oxeleven/rest/backchannel/backchannelRedirectUri'
                  backchannelAuthenticationEndpoint:
                    type: string
                    description: Backchannel Authentication Endpoint.
                    minLength: 0
                    example: 'https://server.example.com/oxeleven/rest/backchannel/backchannelAuthenticationEndpoint()'
                  backchannelDeviceRegistrationEndpoint:
                    type: string
                    description: Backchannel Device Registration Endpoint.
                    minLength: 0
                    example: 'https://server.example.com/oxeleven/rest/backchannel/backchannelDeviceRegistrationEndpoint'
                  backchannelTokenDeliveryModesSupported:
                    type: array
                    description: Backchannel Token Delivery Modes Supported.
                    minItems: 0
                    uniqueItems: true
                    items:
                      type: string
                    format: select - poll - ping - push
                  backchannelAuthenticationRequestSigningAlgValuesSupported:
                    type: array
                    description: Backchannel Authentication Request Signing Alg Values Supported.
                    minItems: 0
                    uniqueItems: true
                    items:
                      type: string
                    format: select - RS512 - ES256 - ES384 - ES512 - PS256 - PS384 - PS512
                  backchannelUserCodeParameterSupported:
                    type: boolean
                    description: Backchannel User Code Parameter Supported
                  backchannelBindingMessagePattern:
                    type: string
                    description: Backchannel Binding Message Pattern.
                    minLength: 0
                  backchannelAuthenticationResponseExpiresIn:
                    type: integer
                    description: Backchannel Authentication Response Expires In.
                    multipleOf: 1
                    minimum: 1
                    maximum: 2147483647
                    exclusiveMinimum: false
                    exclusiveMaximum: false
                  backchannelAuthenticationResponseInterval:
                    type: integer
                    description: Backchannel Authentication Response Interval.
                    multipleOf: 1
                    minimum: 1
                    maximum: 2147483647
                    exclusiveMinimum: false
                    exclusiveMaximum: false
                  backchannelLoginHintClaims:
                    type: array
                    description: Backchannel Login Hint Claims.
                    minItems: 0
                    uniqueItems: true
                    items:
                      type: string
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  /config/properties/dyn_registration:
    get:
      summary: Gets oxAuth dynamic configuration properties.
      description: Gets oxAuth dynamic configuration properties.
      operationId: get-properties-dyn_registration
      tags:
        - Configuration – Dynamic Registration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: Dynamic Configuration
                items:
                  type: object
                  title: Dynamic Configuration
                  description: Dynamic Configuration properties.
                  properties:
                    dynamicRegistrationEnabled:
                      type: boolean
                      description: Boolean value specifying whether to enable Dynamic Registration.
                      default: null
                    dynamicRegistrationPasswordGrantTypeEnabled:
                      type: boolean
                      description: Boolean value specifying whether to enable Password Grant Type during Dynamic Registration.
                      default: false
                    dynamicRegistrationPersistClientAuthorizations:
                      type: boolean
                      description: Boolean value specifying whether to persist client authorizations.
                      default: false
                    dynamicRegistrationScopesParamEnabled:
                      type: boolean
                      description: Boolean value specifying whether to enable scopes parameter in dynamic registration.
                      default: false
                    dynamicRegistrationExpirationTime:
                      type: integer
                      description: 'Expiration time in seconds for clients created with dynamic registration, -1 means never expire.'
                      multipleOf: 1
                      minimum: 0
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      default: -1
                    legacyDynamicRegistrationScopeParam:
                      type: boolean
                      description: Legacy Dynamic Registration Scopes JSON Array Param.
                    dynamicRegistrationCustomAttributes:
                      type: array
                      description: Custom attributes for the Dynamic registration.
                      items:
                        type: string
                      enum:
                        - oxAuthTrustedClient
                    dynamicRegistrationCustomObjectClass:
                      type: string
                      description: LDAP custom object class for dynamic registration.
                      minLength: 1
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
    put:
      summary: Updates oxAuth dynamic configuration properties.
      description: Updates oxAuth dynamic configuration properties.
      operationId: put-properties-dyn_registration
      tags:
        - Configuration – Dynamic Registration
      requestBody:
        content:
          application/json:
            schema:
              title: Dynamic Configuration
              items:
                type: object
                title: Dynamic Configuration
                description: Dynamic Configuration properties.
                properties:
                  dynamicRegistrationEnabled:
                    type: boolean
                    description: Boolean value specifying whether to enable Dynamic Registration.
                    default: null
                  dynamicRegistrationPasswordGrantTypeEnabled:
                    type: boolean
                    description: Boolean value specifying whether to enable Password Grant Type during Dynamic Registration.
                    default: false
                  dynamicRegistrationPersistClientAuthorizations:
                    type: boolean
                    description: Boolean value specifying whether to persist client authorizations.
                    default: false
                  dynamicRegistrationScopesParamEnabled:
                    type: boolean
                    description: Boolean value specifying whether to enable scopes parameter in dynamic registration.
                    default: false
                  dynamicRegistrationExpirationTime:
                    type: integer
                    description: 'Expiration time in seconds for clients created with dynamic registration, -1 means never expire.'
                    multipleOf: 1
                    minimum: 0
                    exclusiveMinimum: false
                    maximum: 2147483647
                    exclusiveMaximum: false
                    default: -1
                  legacyDynamicRegistrationScopeParam:
                    type: boolean
                    description: Legacy Dynamic Registration Scopes JSON Array Param.
                  dynamicRegistrationCustomAttributes:
                    type: array
                    description: Custom attributes for the Dynamic registration.
                    items:
                      type: string
                    enum:
                      - oxAuthTrustedClient
                  dynamicRegistrationCustomObjectClass:
                    type: string
                    description: LDAP custom object class for dynamic registration.
                    minLength: 1
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  /config/properties/idtoken:
    get:
      summary: Gets oxAuth IdToken configuration properties.
      description: Gets oxAuth IdToken configuration properties.
      operationId: get-properties-idtoken
      tags:
        - Configuration – IdToken
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: IdToken Configuration
                items:
                  type: object
                  title: IdToken
                  description: IdToken configuration properties.
                  properties:
                    idTokenSigningAlgValuesSupported:
                      type: array
                      description: A list of the JWS signing algorithms (alg values) supported by the OP for the ID Token to encode the Claims in a JWT.
                      items:
                        type: string
                      enum:
                        - none
                        - HS256
                        - HS384
                        - HS512
                        - RS256
                        - RS384
                        - RS512
                        - ES256
                        - ES384
                        - ES512
                        - PS256
                        - PS384
                        - PS512
                    idTokenEncryptionAlgValuesSupported:
                      type: array
                      description: A list of the JWE encryption algorithms (alg values) supported by the OP for the ID Token to encode the Claims in a JWT.
                      items:
                        type: string
                      enum:
                        - RSA1_5
                        - RSA-OAEP
                        - A128KW
                        - A256KW
                    idTokenEncryptionEncValuesSupported:
                      type: array
                      description: A list of the JWE encryption algorithms (enc values) supported by the OP for the ID Token to encode the Claims in a JWT.
                      items:
                        type: string
                      enum:
                        - A128CBC+HS256
                        - A256CBC+HS512
                        - A128GCM
                        - A256GCM
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
    put:
      summary: Updates oxAuth IdToken configuration properties.
      description: Updates oxAuth IdToken configuration properties.
      operationId: put-properties-idtoken
      tags:
        - Configuration – IdToken
      requestBody:
        content:
          application/json:
            schema:
              title: IdToken Configuration
              items:
                type: object
                title: IdToken
                description: IdToken configuration properties.
                properties:
                  idTokenSigningAlgValuesSupported:
                    type: array
                    description: A list of the JWS signing algorithms (alg values) supported by the OP for the ID Token to encode the Claims in a JWT.
                    items:
                      type: string
                    enum:
                      - none
                      - HS256
                      - HS384
                      - HS512
                      - RS256
                      - RS384
                      - RS512
                      - ES256
                      - ES384
                      - ES512
                      - PS256
                      - PS384
                      - PS512
                  idTokenEncryptionAlgValuesSupported:
                    type: array
                    description: A list of the JWE encryption algorithms (alg values) supported by the OP for the ID Token to encode the Claims in a JWT.
                    items:
                      type: string
                    enum:
                      - RSA1_5
                      - RSA-OAEP
                      - A128KW
                      - A256KW
                  idTokenEncryptionEncValuesSupported:
                    type: array
                    description: A list of the JWE encryption algorithms (enc values) supported by the OP for the ID Token to encode the Claims in a JWT.
                    items:
                      type: string
                    enum:
                      - A128CBC+HS256
                      - A256CBC+HS512
                      - A128GCM
                      - A256GCM
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  /config/properties/ox-eleven:
    get:
      summary: Gets oxAuth oxEleven configuration properties.
      description: Gets oxAuth oxEleven configuration properties.
      operationId: get-properties-ox-eleven
      tags:
        - Configuration – oxEleven
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: oxEleven Configuration
                items:
                  type: object
                  title: oxEleven
                  description: oxEleven configuration properties.
                  properties:
                    oxElevenGenerateKeyEndpoint:
                      type: string
                      description: URL for the oxEleven Generate Key Endpoint.
                      example: 'https://server.example.com/oxeleven/rest/oxeleven/generateKey'
                    oxElevenSignEndpoint:
                      type: string
                      description: URL for the oxEleven Sign Endpoint.
                      example: 'https://server.example.com/oxeleven/rest/oxeleven/sign'
                    oxElevenVerifySignatureEndpoint:
                      type: string
                      description: URL for the oxEleven Verify Signature Endpoint.
                      example: 'https://server.example.com/oxeleven/rest/oxeleven/verifySignature'
                    oxElevenDeleteKeyEndpoint:
                      type: string
                      description: URL for the oxEleven Delete Key Endpoint.
                      example: 'https://server.example.com/oxeleven/rest/oxeleven/deleteKey'
                    oxElevenJwksEndpoint:
                      type: string
                      description: URL for the oxEleven JWKS Endpoint.
                      example: null
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
    put:
      summary: Updates oxAuth oxEleven configuration properties.
      description: Updates oxAuth oxEleven configuration properties.
      operationId: put-properties-ox-eleven
      tags:
        - Configuration – oxEleven
      requestBody:
        content:
          application/json:
            schema:
              title: oxEleven Configuration
              items:
                type: object
                title: oxEleven
                description: oxEleven configuration properties.
                properties:
                  oxElevenGenerateKeyEndpoint:
                    type: string
                    description: URL for the oxEleven Generate Key Endpoint.
                    example: 'https://server.example.com/oxeleven/rest/oxeleven/generateKey'
                  oxElevenSignEndpoint:
                    type: string
                    description: URL for the oxEleven Sign Endpoint.
                    example: 'https://server.example.com/oxeleven/rest/oxeleven/sign'
                  oxElevenVerifySignatureEndpoint:
                    type: string
                    description: URL for the oxEleven Verify Signature Endpoint.
                    example: 'https://server.example.com/oxeleven/rest/oxeleven/verifySignature'
                  oxElevenDeleteKeyEndpoint:
                    type: string
                    description: URL for the oxEleven Delete Key Endpoint.
                    example: 'https://server.example.com/oxeleven/rest/oxeleven/deleteKey'
                  oxElevenJwksEndpoint:
                    type: string
                    description: URL for the oxEleven JWKS Endpoint.
                    example: null
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  /config/properties/request-object:
    get:
      summary: Gets oxAuth Request object configuration properties.
      description: Gets oxAuth Request object configuration properties.
      operationId: get-properties-request-object
      tags:
        - Configuration – Request Object
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: Request object configuration
                items:
                  type: object
                  description: Request object configuration properties.
                  properties:
                    requestObjectSigningAlgValuesSupported:
                      type: array
                      description: A list of the JWS signing algorithms (alg values) supported by the OP for Request Objects.
                      items:
                        type: string
                      enum:
                        - none
                        - HS256
                        - HS384
                        - HS512
                        - RS256
                        - RS384
                        - RS512
                        - ES256
                        - ES384
                        - ES512
                        - PS256
                        - PS384
                        - PS512
                    requestObjectEncryptionAlgValuesSupported:
                      type: array
                      description: A list of the JWE encryption algorithms (alg values) supported by the OP for Request Objects.
                      items:
                        type: string
                      enum:
                        - RSA1_5
                        - RSA-OAEP
                        - A128KW
                        - A256KW
                    requestObjectEncryptionEncValuesSupported:
                      type: array
                      description: A list of the JWE encryption algorithms (enc values) supported by the OP for Request Objects.
                      items:
                        type: string
                      enum:
                        - A128CBC+HS256
                        - A256CBC+HS512
                        - A128GCM
                        - A256GCM
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
    put:
      summary: Updates oxAuth Request object configuration properties.
      description: Updates oxAuth Request object configuration properties.
      operationId: put-properties-request-object
      tags:
        - Configuration – Request Object
      requestBody:
        content:
          application/json:
            schema:
              title: Request object configuration
              items:
                type: object
                description: Request object configuration properties.
                properties:
                  requestObjectSigningAlgValuesSupported:
                    type: array
                    description: A list of the JWS signing algorithms (alg values) supported by the OP for Request Objects.
                    items:
                      type: string
                    enum:
                      - none
                      - HS256
                      - HS384
                      - HS512
                      - RS256
                      - RS384
                      - RS512
                      - ES256
                      - ES384
                      - ES512
                      - PS256
                      - PS384
                      - PS512
                  requestObjectEncryptionAlgValuesSupported:
                    type: array
                    description: A list of the JWE encryption algorithms (alg values) supported by the OP for Request Objects.
                    items:
                      type: string
                    enum:
                      - RSA1_5
                      - RSA-OAEP
                      - A128KW
                      - A256KW
                  requestObjectEncryptionEncValuesSupported:
                    type: array
                    description: A list of the JWE encryption algorithms (enc values) supported by the OP for Request Objects.
                    items:
                      type: string
                    enum:
                      - A128CBC+HS256
                      - A256CBC+HS512
                      - A128GCM
                      - A256GCM
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  /config/properties/response-type:
    get:
      summary: Gets oxAuth Response Type configuration properties.
      description: Gets oxAuth Response Type configuration properties.
      operationId: get-properties-response-type
      tags:
        - Configuration – Responses Types
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: Response Type configuration
                items:
                  type: object
                  description: Response Type configuration properties.
                  properties:
                    responseTypesSupported:
                      type: array
                      description: A list of the OAuth 2.0 response_type values that this OP supports.
                      minItems: 1
                      items:
                        type: string
                      enum:
                        - code
                        - token
                        - id_token
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
    put:
      summary: Updates oxAuth Response Type configuration properties.
      description: Updates oxAuth Response Type configuration properties.
      operationId: put-properties-response-type
      tags:
        - Configuration – Responses Types
      requestBody:
        content:
          application/json:
            schema:
              title: Response Type configuration
              items:
                type: object
                description: Response Type configuration properties.
                properties:
                  responseTypesSupported:
                    type: array
                    description: A list of the OAuth 2.0 response_type values that this OP supports.
                    minItems: 1
                    items:
                      type: string
                    enum:
                      - code
                      - token
                      - id_token
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  /config/properties/response-mode:
    get:
      summary: Gets oxAuth Response Mode configuration properties.
      description: Gets oxAuth Response Mode configuration properties.
      operationId: get-properties-response-mode
      tags:
        - Configuration – Responses Modes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: Response Mode configuration
                items:
                  type: object
                  description: Response Mode configuration properties.
                  properties:
                    responseModesSupported:
                      type: array
                      description: A list of the OAuth 2.0 Response Mode values that this OP supports.
                      items:
                        type: string
                      enum:
                        - query
                        - fragment
                        - form_post
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
    put:
      summary: Updates oxAuth Response Mode configuration properties.
      description: Updates oxAuth Response Mode configuration properties.
      operationId: put-properties-response-mode
      tags:
        - Configuration – Responses Modes
      requestBody:
        content:
          application/json:
            schema:
              title: Response Mode configuration
              items:
                type: object
                description: Response Mode configuration properties.
                properties:
                  responseModesSupported:
                    type: array
                    description: A list of the OAuth 2.0 Response Mode values that this OP supports.
                    items:
                      type: string
                    enum:
                      - query
                      - fragment
                      - form_post
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  /config/properties/user-info:
    get:
      summary: Gets oxAuth User Info configuration properties.
      description: Gets oxAuth User Info configuration properties.
      operationId: get-properties-user-info
      tags:
        - Configuration – User Info
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: User Info configuration
                items:
                  type: object
                  description: User Info configuration properties.
                  properties:
                    userInfoEndpoint:
                      type: string
                      description: The User Info endpoint URL.
                      example: 'https://server.example.com/oxauth/restv1/userinfo'
                    userInfoSigningAlgValuesSupported:
                      type: array
                      description: A list of the JWS signing algorithms (alg values) JWA supported by the UserInfo Endpoint to encode the Claims in a JWT.
                      items:
                        type: string
                      enum:
                        - HS256
                        - HS384
                        - HS512
                        - RS256
                        - RS384
                        - RS512
                        - ES256
                        - ES384
                        - ES512
                        - PS256
                        - PS384
                        - PS512
                    userInfoEncryptionAlgValuesSupported:
                      type: array
                      description: A list of the JWE encryption algorithms (alg values) JWA supported by the UserInfo Endpoint to encode the Claims in a JWT.
                      items:
                        type: string
                      enum:
                        - RSA1_5
                        - RSA-OAEP
                        - A128KW
                        - A256KW
                    userInfoEncryptionEncValuesSupported:
                      type: array
                      description: A list of the JWE encryption algorithms (enc values) JWA supported by the UserInfo Endpoint to encode the Claims in a JWT.
                      items:
                        type: string
                      enum:
                        - A128CBC+HS256
                        - A256CBC+HS512
                        - A128GCM
                        - A256GCM
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
    put:
      summary: Updates oxAuth User Info configuration properties.
      description: Updates oxAuth User Info configuration properties.
      operationId: put-properties-user-info
      tags:
        - Configuration – User Info
      requestBody:
        content:
          application/json:
            schema:
              title: User Info configuration
              items:
                type: object
                description: User Info configuration properties.
                properties:
                  userInfoEndpoint:
                    type: string
                    description: The User Info endpoint URL.
                    example: 'https://server.example.com/oxauth/restv1/userinfo'
                  userInfoSigningAlgValuesSupported:
                    type: array
                    description: A list of the JWS signing algorithms (alg values) JWA supported by the UserInfo Endpoint to encode the Claims in a JWT.
                    items:
                      type: string
                    enum:
                      - HS256
                      - HS384
                      - HS512
                      - RS256
                      - RS384
                      - RS512
                      - ES256
                      - ES384
                      - ES512
                      - PS256
                      - PS384
                      - PS512
                  userInfoEncryptionAlgValuesSupported:
                    type: array
                    description: A list of the JWE encryption algorithms (alg values) JWA supported by the UserInfo Endpoint to encode the Claims in a JWT.
                    items:
                      type: string
                    enum:
                      - RSA1_5
                      - RSA-OAEP
                      - A128KW
                      - A256KW
                  userInfoEncryptionEncValuesSupported:
                    type: array
                    description: A list of the JWE encryption algorithms (enc values) JWA supported by the UserInfo Endpoint to encode the Claims in a JWT.
                    items:
                      type: string
                    enum:
                      - A128CBC+HS256
                      - A256CBC+HS512
                      - A128GCM
                      - A256GCM
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  /config/properties/uma:
    get:
      summary: Gets oxAuth UMA configuration properties.
      description: Gets oxAuth UMA configuration properties.
      operationId: get-properties-uma
      tags:
        - Configuration – UMA
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: UMA configuration
                items:
                  type: object
                  description: UMA configuration properties.
                  properties:
                    umaConfigurationEndpoint:
                      type: string
                      description: URL for the UMA Configuration Endpoint.
                      example: 'https://server.example.com/oxauth/restv1/uma2-configuration'
                    umaRptLifetime:
                      type: integer
                      description: UMA RPT lifetime.
                      multipleOf: 1
                      minimum: 1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      example: 3600
                    umaTicketLifetime:
                      type: integer
                      description: UMA ticket lifetime.
                      multipleOf: 1
                      minimum: 1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      example: 3600
                    umaPctLifetime:
                      type: integer
                      description: UMA PCT lifetime.
                      multipleOf: 1
                      minimum: 1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      example: 3600
                    umaResourceLifetime:
                      type: integer
                      description: UMA PCT lifetime.
                      multipleOf: 1
                      minimum: 1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      example: 3600
                    umaAddScopesAutomatically:
                      type: boolean
                      description: Add UMA scopes automatically if it is not registered yet.
                      default: false
                    umaValidateClaimToken:
                      type: boolean
                      description: Validate claim_token as id_token assuming it is issued by local idp.
                      default: false
                    umaGrantAccessIfNoPolicies:
                      type: boolean
                      description: Specifies whether to grant access to resources if there are no any policies associated with scopes.
                      default: false
                    umaRestrictResourceToAssociatedClient:
                      type: boolean
                      description: Restrict access to resource by associated client.
                      default: false
                    umaKeepClientDuringResourceSetRegistration:
                      type: boolean
                      description: Save client information during resource registration.
                      default: false
                    umaRptAsJwt:
                      type: boolean
                      description: Issue RPT as JWT or as random string.
                      default: false
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
    put:
      summary: Updates oxAuth UMA configuration properties.
      description: Updates oxAuth UMA configuration properties.
      operationId: put-properties-uma
      tags:
        - Configuration – UMA
      requestBody:
        content:
          application/json:
            schema:
              title: UMA configuration
              items:
                type: object
                description: UMA configuration properties.
                properties:
                  umaConfigurationEndpoint:
                    type: string
                    description: URL for the UMA Configuration Endpoint.
                    example: 'https://server.example.com/oxauth/restv1/uma2-configuration'
                  umaRptLifetime:
                    type: integer
                    description: UMA RPT lifetime.
                    multipleOf: 1
                    minimum: 1
                    exclusiveMinimum: false
                    maximum: 2147483647
                    exclusiveMaximum: false
                    example: 3600
                  umaTicketLifetime:
                    type: integer
                    description: UMA ticket lifetime.
                    multipleOf: 1
                    minimum: 1
                    exclusiveMinimum: false
                    maximum: 2147483647
                    exclusiveMaximum: false
                    example: 3600
                  umaPctLifetime:
                    type: integer
                    description: UMA PCT lifetime.
                    multipleOf: 1
                    minimum: 1
                    exclusiveMinimum: false
                    maximum: 2147483647
                    exclusiveMaximum: false
                    example: 3600
                  umaResourceLifetime:
                    type: integer
                    description: UMA PCT lifetime.
                    multipleOf: 1
                    minimum: 1
                    exclusiveMinimum: false
                    maximum: 2147483647
                    exclusiveMaximum: false
                    example: 3600
                  umaAddScopesAutomatically:
                    type: boolean
                    description: Add UMA scopes automatically if it is not registered yet.
                    default: false
                  umaValidateClaimToken:
                    type: boolean
                    description: Validate claim_token as id_token assuming it is issued by local idp.
                    default: false
                  umaGrantAccessIfNoPolicies:
                    type: boolean
                    description: Specifies whether to grant access to resources if there are no any policies associated with scopes.
                    default: false
                  umaRestrictResourceToAssociatedClient:
                    type: boolean
                    description: Restrict access to resource by associated client.
                    default: false
                  umaKeepClientDuringResourceSetRegistration:
                    type: boolean
                    description: Save client information during resource registration.
                    default: false
                  umaRptAsJwt:
                    type: boolean
                    description: Issue RPT as JWT or as random string.
                    default: false
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  /config/properties/sessionid:
    get:
      summary: Gets oxAuth SessionId configuration properties.
      description: Gets oxAuth SessionId configuration properties.
      operationId: get-properties-sessionid
      tags:
        - Configuration – Session ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SessionId configuration
                items:
                  type: object
                  description: SessionId configuration properties.
                  properties:
                    sessionIdUnusedLifetime:
                      type: integer
                      description: The lifetime for unused session states.
                      multipleOf: 1
                      minimum: 1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      example: 86400
                    sessionIdUnauthenticatedUnusedLifetime:
                      type: integer
                      description: The lifetime for unused unauthenticated session states.
                      multipleOf: 1
                      minimum: 1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      default: 120
                      example: 800
                    sessionIdLifetime:
                      type: integer
                      description: The lifetime of session id in seconds. If 0 or -1 then expiration is not set. `session_id` cookie expires when browser session ends.
                      multipleOf: 1
                      minimum: -1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      default: 86400
                      example: 86400
                    sessionIdEnabled:
                      type: boolean
                      description: Boolean value specifying whether to enable authentication by session_id.
                      default: false
                    changeSessionIdOnAuthentication:
                      type: boolean
                      description: Boolean value specifying whether to enable session_id HTTP request parameter.
                      default: true
                    sessionIdRequestParameterEnabled:
                      type: boolean
                      description: Boolean value specifying whether to enable session_id HTTP request parameter.
                      default: false
                    sessionIdPersistOnPromptNone:
                      type: boolean
                      description: Boolean value specifying whether to persist session ID on prompt none.
                      default: false
                    serverSessionIdLifetime:
                      type: integer
                      description: The sessionId lifetime in seconds for sessionId.
                      default: 86400
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
    put:
      summary: Updates oxAuth SessionId configuration properties.
      description: Updates oxAuth SessionId configuration properties.
      operationId: put-properties-sessionid
      tags:
        - Configuration – Session ID
      requestBody:
        content:
          application/json:
            schema:
              title: SessionId configuration
              items:
                type: object
                description: SessionId configuration properties.
                properties:
                  sessionIdUnusedLifetime:
                    type: integer
                    description: The lifetime for unused session states.
                    multipleOf: 1
                    minimum: 1
                    exclusiveMinimum: false
                    maximum: 2147483647
                    exclusiveMaximum: false
                    example: 86400
                  sessionIdUnauthenticatedUnusedLifetime:
                    type: integer
                    description: The lifetime for unused unauthenticated session states.
                    multipleOf: 1
                    minimum: 1
                    exclusiveMinimum: false
                    maximum: 2147483647
                    exclusiveMaximum: false
                    default: 120
                    example: 800
                  sessionIdLifetime:
                    type: integer
                    description: The lifetime of session id in seconds. If 0 or -1 then expiration is not set. `session_id` cookie expires when browser session ends.
                    multipleOf: 1
                    minimum: -1
                    exclusiveMinimum: false
                    maximum: 2147483647
                    exclusiveMaximum: false
                    default: 86400
                    example: 86400
                  sessionIdEnabled:
                    type: boolean
                    description: Boolean value specifying whether to enable authentication by session_id.
                    default: false
                  changeSessionIdOnAuthentication:
                    type: boolean
                    description: Boolean value specifying whether to enable session_id HTTP request parameter.
                    default: true
                  sessionIdRequestParameterEnabled:
                    type: boolean
                    description: Boolean value specifying whether to enable session_id HTTP request parameter.
                    default: false
                  sessionIdPersistOnPromptNone:
                    type: boolean
                    description: Boolean value specifying whether to persist session ID on prompt none.
                    default: false
                  serverSessionIdLifetime:
                    type: integer
                    description: The sessionId lifetime in seconds for sessionId.
                    default: 86400
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  /config/properties/pairwise:
    get:
      summary: Gets oxAuth Pairwise configuration properties.
      description: Gets oxAuth Pairwise configuration properties.
      operationId: get-properties-pairwise
      tags:
        - Configuration – Pairwise
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: Pairwise configuration
                items:
                  type: object
                  description: Pairwise configuration properties.
                  properties:
                    pairwiseIdType:
                      type: string
                      description: The pairwise ID type.
                      items:
                        type: string
                      enum:
                        - persistent
                        - algorithmic
                    pairwiseCalculationKey:
                      type: string
                      description: Key to calculate algorithmic pairwise IDs.
                      minLength: 1
                    pairwiseCalculationSalt:
                      type: string
                      description: Salt to calculate algorithmic pairwise IDs.
                      minLength: 1
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
    put:
      summary: Updates oxAuth Pairwise configuration properties.
      description: Updates oxAuth Pairwise configuration properties.
      operationId: put-properties-pairwise
      tags:
        - Configuration – Pairwise
      requestBody:
        content:
          application/json:
            schema:
              title: Pairwise configuration
              items:
                type: object
                description: Pairwise configuration properties.
                properties:
                  pairwiseIdType:
                    type: string
                    description: The pairwise ID type.
                    items:
                      type: string
                    enum:
                      - persistent
                      - algorithmic
                  pairwiseCalculationKey:
                    type: string
                    description: Key to calculate algorithmic pairwise IDs.
                    minLength: 1
                  pairwiseCalculationSalt:
                    type: string
                    description: Salt to calculate algorithmic pairwise IDs.
                    minLength: 1
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  /config/properties/fido2:
    get:
      summary: Gets oxAuth Fido2 configuration properties.
      description: Gets oxAuth Fido2 configuration properties.
      operationId: get-properties-fido2
      tags:
        - Configuration – Fido2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: Fido2 configuration
                items:
                  type: object
                  description: Fido2 configuration properties.
                  properties:
                    authenticatorCertsFolder:
                      description: Authenticators certificates fodler.
                      type: string
                      minLength: 1
                    mdsAccessToken:
                      description: MDS Access token.
                      type: string
                      minLength: 1
                    mdsCertsFolder:
                      description: MDS TOC root certificates folder.
                      type: string
                      minLength: 1
                    mdsTocsFolder:
                      description: MDS TOC files folder.
                      type: string
                      minLength: 1
                    userAutoEnrollment:
                      description: Allow to enroll users on enrollment/authentication requests.
                      type: boolean
                    unfinishedRequestExpiration:
                      description: Expiration time in seconds for pending enrollment/authentication requests
                      type: integer
                      multipleOf: 1
                      maximum: 2147483647
                      minimum: 0
                      exclusiveMaximum: false
                      exclusiveMinimum: false
                    authenticationHistoryExpiration:
                      description: Expiration time in seconds for approved authentication requests.
                      type: integer
                      multipleOf: 1
                      maximum: 2147483647
                      minimum: 0
                      exclusiveMaximum: false
                      exclusiveMinimum: false
                    serverMetadataFolder:
                      description: Authenticators metadata in json format.
                      type: string
                      minLength: 1
                      example: virtual devices
                    disableFido2:
                      description: Enable/Disable Fido2 endpoints.
                      type: boolean
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
    put:
      summary: Updates oxAuth Fido2 configuration properties.
      description: Updates oxAuth Fido2 configuration properties.
      operationId: put-properties-fido2
      tags:
        - Configuration – Fido2
      requestBody:
        content:
          application/json:
            schema:
              title: Fido2 configuration
              items:
                type: object
                description: Fido2 configuration properties.
                properties:
                  authenticatorCertsFolder:
                    description: Authenticators certificates fodler.
                    type: string
                    minLength: 1
                  mdsAccessToken:
                    description: MDS Access token.
                    type: string
                    minLength: 1
                  mdsCertsFolder:
                    description: MDS TOC root certificates folder.
                    type: string
                    minLength: 1
                  mdsTocsFolder:
                    description: MDS TOC files folder.
                    type: string
                    minLength: 1
                  userAutoEnrollment:
                    description: Allow to enroll users on enrollment/authentication requests.
                    type: boolean
                  unfinishedRequestExpiration:
                    description: Expiration time in seconds for pending enrollment/authentication requests
                    type: integer
                    multipleOf: 1
                    maximum: 2147483647
                    minimum: 0
                    exclusiveMaximum: false
                    exclusiveMinimum: false
                  authenticationHistoryExpiration:
                    description: Expiration time in seconds for approved authentication requests.
                    type: integer
                    multipleOf: 1
                    maximum: 2147483647
                    minimum: 0
                    exclusiveMaximum: false
                    exclusiveMinimum: false
                  serverMetadataFolder:
                    description: Authenticators metadata in json format.
                    type: string
                    minLength: 1
                    example: virtual devices
                  disableFido2:
                    description: Enable/Disable Fido2 endpoints.
                    type: boolean
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  /config/properties/ciba:
    get:
      summary: Gets oxAuth CIBA configuration properties.
      description: Gets oxAuth CIBA configuration properties.
      operationId: get-properties-ciba
      tags:
        - Configuration – CIBA
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: CIBA configuration
                items:
                  type: object
                  description: CIBA configuration properties.
                  properties:
                    backchannelClientId:
                      type: string
                      description: Backchannel Client Id.
                      minLength: 0
                    backchannelRedirectUri:
                      type: string
                      description: Backchannel Redirect Uri.
                      minLength: 0
                      example: 'https://server.example.com/oxeleven/rest/backchannel/backchannelRedirectUri'
                    backchannelAuthenticationEndpoint:
                      type: string
                      description: Backchannel Authentication Endpoint.
                      minLength: 0
                      example: 'https://server.example.com/oxeleven/rest/backchannel/backchannelAuthenticationEndpoint()'
                    backchannelDeviceRegistrationEndpoint:
                      type: string
                      description: Backchannel Device Registration Endpoint.
                      minLength: 0
                      example: 'https://server.example.com/oxeleven/rest/backchannel/backchannelDeviceRegistrationEndpoint'
                    backchannelTokenDeliveryModesSupported:
                      type: array
                      description: Backchannel Token Delivery Modes Supported.
                      minItems: 0
                      uniqueItems: true
                      items:
                        type: string
                      format: select
                      enum:
                        - poll
                        - ping
                        - push
                    backchannelAuthenticationRequestSigningAlgValuesSupported:
                      type: array
                      description: Backchannel Authentication Request Signing Alg Values Supported.
                      minItems: 0
                      uniqueItems: true
                      items:
                        type: string
                      format: select
                      enum:
                        - RS512
                        - ES256
                        - ES384
                        - ES512
                        - PS256
                        - PS384
                        - PS512
                    backchannelUserCodeParameterSupported:
                      type: boolean
                      description: Backchannel User Code Parameter Supported
                    backchannelBindingMessagePattern:
                      type: string
                      description: Backchannel Binding Message Pattern.
                      minLength: 0
                    backchannelAuthenticationResponseExpiresIn:
                      type: integer
                      description: Backchannel Authentication Response Expires In.
                      multipleOf: 1
                      minimum: 1
                      maximum: 2147483647
                      exclusiveMinimum: false
                      exclusiveMaximum: false
                    backchannelAuthenticationResponseInterval:
                      type: integer
                      description: Backchannel Authentication Response Interval.
                      multipleOf: 1
                      minimum: 1
                      maximum: 2147483647
                      exclusiveMinimum: false
                      exclusiveMaximum: false
                    backchannelLoginHintClaims:
                      type: array
                      description: Backchannel Login Hint Claims.
                      minItems: 0
                      uniqueItems: true
                      items:
                        type: string
                    cibaEndUserNotificationConfig:
                      type: object
                      description: CIBA End User Notification Config.
                      required:
                        - apiKey
                        - authDomain
                        - databaseURL
                        - projectId
                        - storageBucket
                        - messagingSenderId
                        - appId
                        - notificationUrl
                        - notificationKey
                        - publicVapidKey
                      properties:
                        apiKey:
                          type: string
                          minLength: 1
                        authDomain:
                          type: string
                          minLength: 1
                        databaseURL:
                          type: string
                          minLength: 1
                        projectId:
                          type: string
                          minLength: 1
                        storageBucket:
                          type: string
                          minLength: 1
                        messagingSenderId:
                          type: string
                          minLength: 1
                        appId:
                          type: string
                          minLength: 1
                        notificationUrl:
                          type: string
                          minLength: 1
                        notificationKey:
                          type: string
                          minLength: 1
                        publicVapidKey:
                          type: string
                          minLength: 1
                    backchannelRequestsProcessorJobIntervalSec:
                      type: integer
                      description: Specifies the allowable elapsed time in seconds backchannel request processor executes.
                    backchannelRequestsProcessorJobChunkSize:
                      type: integer
                      description: Each backchannel request processor iteration fetches chunk of data to be processed.
                    cibaGrantLifeExtraTimeSec:
                      type: integer
                      description: Specifies the CIBA Grant life extra time in seconds.
                    cibaMaxExpirationTimeAllowedSec:
                      type: integer
                      description: Specifies the CIBA token expiration time in seconds.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
    put:
      summary: Updates oxAuth CIBA configuration properties.
      description: Updates oxAuth CIBA configuration properties.
      operationId: put-properties-ciba
      tags:
        - Configuration – CIBA
      requestBody:
        content:
          application/json:
            schema:
              title: CIBA configuration
              items:
                type: object
                description: CIBA configuration properties.
                properties:
                  backchannelClientId:
                    type: string
                    description: Backchannel Client Id.
                    minLength: 0
                  backchannelRedirectUri:
                    type: string
                    description: Backchannel Redirect Uri.
                    minLength: 0
                    example: 'https://server.example.com/oxeleven/rest/backchannel/backchannelRedirectUri'
                  backchannelAuthenticationEndpoint:
                    type: string
                    description: Backchannel Authentication Endpoint.
                    minLength: 0
                    example: 'https://server.example.com/oxeleven/rest/backchannel/backchannelAuthenticationEndpoint()'
                  backchannelDeviceRegistrationEndpoint:
                    type: string
                    description: Backchannel Device Registration Endpoint.
                    minLength: 0
                    example: 'https://server.example.com/oxeleven/rest/backchannel/backchannelDeviceRegistrationEndpoint'
                  backchannelTokenDeliveryModesSupported:
                    type: array
                    description: Backchannel Token Delivery Modes Supported.
                    minItems: 0
                    uniqueItems: true
                    items:
                      type: string
                    format: select
                    enum:
                      - poll
                      - ping
                      - push
                  backchannelAuthenticationRequestSigningAlgValuesSupported:
                    type: array
                    description: Backchannel Authentication Request Signing Alg Values Supported.
                    minItems: 0
                    uniqueItems: true
                    items:
                      type: string
                    format: select
                    enum:
                      - RS512
                      - ES256
                      - ES384
                      - ES512
                      - PS256
                      - PS384
                      - PS512
                  backchannelUserCodeParameterSupported:
                    type: boolean
                    description: Backchannel User Code Parameter Supported
                  backchannelBindingMessagePattern:
                    type: string
                    description: Backchannel Binding Message Pattern.
                    minLength: 0
                  backchannelAuthenticationResponseExpiresIn:
                    type: integer
                    description: Backchannel Authentication Response Expires In.
                    multipleOf: 1
                    minimum: 1
                    maximum: 2147483647
                    exclusiveMinimum: false
                    exclusiveMaximum: false
                  backchannelAuthenticationResponseInterval:
                    type: integer
                    description: Backchannel Authentication Response Interval.
                    multipleOf: 1
                    minimum: 1
                    maximum: 2147483647
                    exclusiveMinimum: false
                    exclusiveMaximum: false
                  backchannelLoginHintClaims:
                    type: array
                    description: Backchannel Login Hint Claims.
                    minItems: 0
                    uniqueItems: true
                    items:
                      type: string
                  cibaEndUserNotificationConfig:
                    type: object
                    description: CIBA End User Notification Config.
                    required:
                      - apiKey
                      - authDomain
                      - databaseURL
                      - projectId
                      - storageBucket
                      - messagingSenderId
                      - appId
                      - notificationUrl
                      - notificationKey
                      - publicVapidKey
                    properties:
                      apiKey:
                        type: string
                        minLength: 1
                      authDomain:
                        type: string
                        minLength: 1
                      databaseURL:
                        type: string
                        minLength: 1
                      projectId:
                        type: string
                        minLength: 1
                      storageBucket:
                        type: string
                        minLength: 1
                      messagingSenderId:
                        type: string
                        minLength: 1
                      appId:
                        type: string
                        minLength: 1
                      notificationUrl:
                        type: string
                        minLength: 1
                      notificationKey:
                        type: string
                        minLength: 1
                      publicVapidKey:
                        type: string
                        minLength: 1
                  backchannelRequestsProcessorJobIntervalSec:
                    type: integer
                    description: Specifies the allowable elapsed time in seconds backchannel request processor executes.
                  backchannelRequestsProcessorJobChunkSize:
                    type: integer
                    description: Each backchannel request processor iteration fetches chunk of data to be processed.
                  cibaGrantLifeExtraTimeSec:
                    type: integer
                    description: Specifies the CIBA Grant life extra time in seconds.
                  cibaMaxExpirationTimeAllowedSec:
                    type: integer
                    description: Specifies the CIBA token expiration time in seconds.
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  /config/properties/cors:
    get:
      summary: Gets oxAuth Cors configuration filter properties.
      description: Gets oxAuth Cors configuration filter properties.
      operationId: get-properties-cors
      tags:
        - Configuration – Cors Configuration Filter
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: Cors configuration filter
                items:
                  type: object
                  description: Cors configuration filter properties.
                  properties:
                    filterName:
                      type: string
                      minLength: 1
                    corsEnabled:
                      type: boolean
                      default: true
                    corsAllowedOrigins:
                      type: string
                      minLength: 1
                      default: \*
                    corsAllowedMethods:
                      type: string
                      default: 'GET, POST, HEAD, OPTIONS'
                    corsAllowedHeaders:
                      type: string
                      minLength: 1
                      default: 'Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers'
                    corsExposedHeaders:
                      type: string
                      minLength: 1
                    corsSupportCredentials:
                      type: boolean
                      default: true
                    corsLoggingEnabled:
                      type: boolean
                      default: false
                    corsPreflightMaxAge:
                      type: integer
                      multipleOf: 1
                      minimum: 1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      default: 1800
                    corsRequestDecorate:
                      type: boolean
                      default: true
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
    put:
      summary: Updates oxAuth Cors configuration filter properties.
      description: Updates oxAuth Cors configuration filter properties.
      operationId: put-properties-cors
      tags:
        - Configuration – Cors Configuration Filter
      requestBody:
        content:
          application/json:
            schema:
              title: Cors configuration filter
              items:
                type: object
                description: Cors configuration filter properties.
                properties:
                  filterName:
                    type: string
                    minLength: 1
                  corsEnabled:
                    type: boolean
                    default: true
                  corsAllowedOrigins:
                    type: string
                    minLength: 1
                    default: \*
                  corsAllowedMethods:
                    type: string
                    default: 'GET, POST, HEAD, OPTIONS'
                  corsAllowedHeaders:
                    type: string
                    minLength: 1
                    default: 'Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers'
                  corsExposedHeaders:
                    type: string
                    minLength: 1
                  corsSupportCredentials:
                    type: boolean
                    default: true
                  corsLoggingEnabled:
                    type: boolean
                    default: false
                  corsPreflightMaxAge:
                    type: integer
                    multipleOf: 1
                    minimum: 1
                    exclusiveMinimum: false
                    maximum: 2147483647
                    exclusiveMaximum: false
                    default: 1800
                  corsRequestDecorate:
                    type: boolean
                    default: true
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  /config/graphics:
    get:
      summary: Retrieves organization graphic configuration.
      description: Retrieves organization graphic configuration.
      operationId: get-organization-graphics
      tags:
        - Graphics
      responses:
        '200':
          description: OK
          content:
            image/x-icon:
              schema:
                title: Organization Configuration
                description: Organization graphic configuration details.
                type: object
                required:
                  - logoLocation
                  - faviconPath
                properties:
                  logoLocation:
                    type: string
                    format: binary
                    description: Logo image that is used.
                  faviconPath:
                    type: string
                    format: binary
                    description: Favicon image that is used.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
    post:
      summary: Adds organization graphic configuration.
      description: Adds organization graphic configuration.
      operationId: post-organization-graphics
      tags:
        - Graphics
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              title: Organization Configuration
              description: Organization graphic configuration details.
              type: object
              required:
                - logoLocation
                - faviconPath
              properties:
                logoLocation:
                  type: string
                  format: binary
                  description: Logo image that is used.
                faviconPath:
                  type: string
                  format: binary
                  description: Favicon image that is used.
            encoding:
              logoLocation:
                contentType: image/x-icon
              faviconPath:
                contentType: image/x-icon
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
    put:
      summary: Updates organization graphic configuration.
      description: Updates organization graphic configuration.
      operationId: put-organization-graphics
      tags:
        - Graphics
      parameters: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              title: Organization Configuration
              description: Organization graphic configuration details.
              type: object
              required:
                - logoLocation
                - faviconPath
              properties:
                logoLocation:
                  type: string
                  format: binary
                  description: Logo image that is used.
                faviconPath:
                  type: string
                  format: binary
                  description: Favicon image that is used.
            encoding:
              logoLocation:
                contentType: image/x-icon
              faviconPath:
                contentType: image/x-icon
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  '/config/graphics/{name}':
    parameters:
      - schema:
          type: string
          minLength: 1
        name: name
        in: path
        description: Name of the graphic.
        required: true
    delete:
      summary: Deletes organization graphic configuration by name.
      description: Deletes organization graphic configuration by name.
      operationId: delete-organization-graphics-by-name
      tags:
        - Graphics
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  /config/graphics/logo:
    get:
      summary: Retrieves organization logo graphic details.
      description: Retrieves organization logo graphic details.
      operationId: get-config-graphics-logo
      tags:
        - Graphics - Logo
      responses:
        '200':
          description: OK
          headers: {}
          content:
            image/x-icon:
              schema:
                type: object
                required:
                  - logoLocation
                properties:
                  logoLocation:
                    type: string
                    format: binary
                    description: Logo image that is used.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - read
    post:
      summary: Adds organization logo graphic details.
      description: Adds organization logo graphic details.
      operationId: post-config-graphics-logo
      tags:
        - Graphics - Logo
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - logoLocation
              properties:
                logoLocation:
                  type: string
                  format: binary
                  description: Logo image that is used.
            encoding:
              logoLocation:
                contentType: image/x-icon
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - write
    put:
      summary: Updates organization logo graphic details.
      description: Updates organization logo graphic details.
      operationId: put-config-graphics-logo
      tags:
        - Graphics - Logo
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - logoLocation
              properties:
                logoLocation:
                  type: string
                  format: binary
                  description: Logo image that is used.
            encoding:
              logoLocation:
                contentType: image/x-icon
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - write
    patch:
      summary: Patches organization logo graphic details.
      description: Patches organization logo graphic details.
      operationId: patch-config-graphics-logo
      tags:
        - Graphics - Logo
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - logoLocation
              properties:
                logoLocation:
                  type: string
                  format: binary
                  description: Logo image that is used.
            encoding:
              logoLocation:
                contentType: image/x-icon
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - write
    delete:
      summary: Deletes organization logo graphic details.
      description: Deletes organization logo graphic details.
      operationId: delete-config-graphics-logo
      tags:
        - Graphics - Logo
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - write
  /config/graphics/favicon:
    get:
      summary: Gets organization favicon graphic details.
      description: Gets organization favicon graphic details.
      operationId: get-config-graphics-favicon
      tags:
        - Graphics - Favicon
      responses:
        '200':
          description: OK
          content:
            image/x-icon:
              schema:
                type: object
                required:
                  - faviconPath
                properties:
                  faviconPath:
                    type: string
                    format: binary
                    description: Favicon image that is used.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - read
    post:
      summary: Adds organization favicon graphic details.
      description: Adds organization favicon graphic details.
      operationId: post-config-graphics-favicon
      tags:
        - Graphics - Favicon
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - faviconPath
              properties:
                faviconPath:
                  type: string
                  format: binary
                  description: Favicon image that is used.
            encoding:
              faviconPath:
                contentType: image/x-icon
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - write
    put:
      summary: Updates organization favicon graphic details.
      description: Updates organization favicon graphic details.
      operationId: put-config-graphics-favicon
      tags:
        - Graphics - Favicon
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              description: Details of organization favicon to be updated.
              required:
                - faviconPath
              properties:
                faviconPath:
                  type: string
                  format: binary
                  description: Favicon image that is used.
            encoding:
              faviconPath:
                contentType: image/x-icon
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - write
    patch:
      summary: Patches organization favicon graphic details.
      description: Patches organization favicon graphic details.
      operationId: patch-config-graphics-favicon
      tags:
        - Graphics - Favicon
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              description: Details of organization favicon to be updated.
              required:
                - faviconPath
              properties:
                faviconPath:
                  type: string
                  format: binary
                  description: Favicon image that is used.
            encoding:
              faviconPath:
                contentType: image/x-icon
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - write
    delete:
      summary: Deletes organization favicon graphic details.
      description: Deletes organization favicon graphic details.
      operationId: delete-config-graphics-favicon
      tags:
        - Graphics - Favicon
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - write
  /attributes:
    get:
      summary: 'Gets all Gluu attributes, active as well as inactive.'
      description: 'Gets all Gluu attributes, active as well as inactive.'
      operationId: get-attributes
      tags:
        - Attribute
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: Gluu Attributes
                description: List of all attribute.
                type: array
                items:
                  type: object
                  title: Gluu Attribute
                  required:
                    - inum
                    - name
                    - displayName
                    - dataType
                    - status
                  properties:
                    inum:
                      type: string
                      description: Unique id identifying the attribute.
                    name:
                      type: string
                      description: Name of the attribute.
                      example: 'name, displayName, birthdate, email'
                    displayName:
                      type: string
                    description:
                      type: string
                      description: User friendly descriptive detail of attribute.
                    dataType:
                      type: string
                      description: Data Type of attribute.
                      enum:
                        - STRING
                        - NUMERIC
                        - BOOLEAN
                        - BINARY
                        - DATE
                    status:
                      type: string
                      description: Distinguished Name
                    oxMultiValuedAttribute:
                      type: boolean
                      description: Boolean value indicating if the attribute is multi-value
                    lifetime:
                      type: string
                    sourceAttribute:
                      type: string
                    salt:
                      type: string
                    nameIdType:
                      type: string
                    origin:
                      type: string
                    editType:
                      type: array
                      description: GluuUserRole
                      items:
                        type: string
                    viewType:
                      type: array
                      description: GluuUserRole
                      items:
                        type: string
                    usageType:
                      type: object
                      description: GluuAttributeUsageType
                      items:
                        type: string
                    oxAuthClaimName:
                      type: string
                    seeAlso:
                      type: string
                    saml1Uri:
                      type: string
                    saml2Uri:
                      type: string
                    urn:
                      type: string
                    oxSCIMCustomAttribute:
                      type: boolean
                      description: Boolean value indicating if the attribute is a SCIM custom attribute
                    custom:
                      type: boolean
                      description: Boolean value indicating if the attribute is a custom attribute
                    requred:
                      type: boolean
                      description: Boolean value indicating is a mandatory attribute
                    attributeValidation:
                      type: object
                      description: Details of validations to be applied on the attribute
                      properties:
                        regexp:
                          type: string
                          description: Reguar expression to be used to validate the dataType.
                        minLength:
                          type: integer
                        maxLength:
                          type: integer
                    gluuTooltip:
                      type: string
        '401':
          description: Unauthorized
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
    post:
      summary: Adds a new Gluu attribute.
      description: Adds a new Gluu attribute.
      operationId: post-attributes
      tags:
        - Attribute
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              title: GluuAttribute
              description: New attribute.
              type: object
              required:
                - name
                - displayName
                - dataType
                - status
              properties:
                name:
                  type: string
                  description: Name of the attribute.
                  example: 'name, displayName, birthdate, email'
                displayName:
                  type: string
                  items:
                    type: string
                description:
                  type: string
                  description: User friendly descriptive detail of attribute.
                dataType:
                  type: string
                  description: Data Type of attribute.
                  enum:
                    - STRING
                    - NUMERIC
                    - BOOLEAN
                    - BINARY
                    - DATE
                status:
                  type: string
                  description: Distinguished Name
                oxMultiValuedAttribute:
                  type: boolean
                  description: Boolean value indicating if the attribute is multi-value
                lifetime:
                  type: string
                sourceAttribute:
                  type: string
                salt:
                  type: string
                nameIdType:
                  type: string
                origin:
                  type: string
                editType:
                  type: array
                  description: GluuUserRole
                  items:
                    type: string
                viewType:
                  type: array
                  description: GluuUserRole
                  items:
                    type: string
                usageType:
                  type: object
                  description: GluuAttributeUsageType
                  items:
                    type: string
                oxAuthClaimName:
                  type: string
                seeAlso:
                  type: string
                saml1Uri:
                  type: string
                saml2Uri:
                  type: string
                urn:
                  type: string
                oxSCIMCustomAttribute:
                  type: boolean
                  description: Boolean value indicating if the attribute is a SCIM custom attribute
                custom:
                  type: boolean
                  description: Boolean value indicating if the attribute is a custom attribute
                requred:
                  type: boolean
                  description: Boolean value indicating is a mandatory attribute
                attributeValidation:
                  type: object
                  description: Details of validations to be applied on the attribute
                  properties:
                    regexp:
                      type: string
                      description: Reguar expression to be used to validate the dataType.
                    minLength:
                      type: integer
                    maxLength:
                      type: integer
                gluuTooltip:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: GluuAttribute
                type: object
                required:
                  - inum
                  - name
                  - displayName
                  - dataType
                  - status
                properties:
                  inum:
                    type: string
                    description: Unique id identifying the attribute
                  name:
                    type: string
                    description: Name of the attribute.
                    example: 'name, displayName, birthdate, email'
                  displayName:
                    type: string
                    items:
                      type: string
                  description:
                    type: string
                    description: User friendly descriptive detail of attribute.
                  dataType:
                    type: string
                    description: Data Type of attribute.
                    enum:
                      - STRING
                      - NUMERIC
                      - BOOLEAN
                      - BINARY
                      - DATE
                  status:
                    type: string
                    description: Distinguished Name
                  oxMultiValuedAttribute:
                    type: boolean
                    description: Boolean value indicating if the attribute is multi-value
                  lifetime:
                    type: string
                  sourceAttribute:
                    type: string
                  salt:
                    type: string
                  nameIdType:
                    type: string
                  origin:
                    type: string
                  editType:
                    type: array
                    description: GluuUserRole
                    items:
                      type: string
                  viewType:
                    type: array
                    description: GluuUserRole
                    items:
                      type: string
                  usageType:
                    type: object
                    description: GluuAttributeUsageType
                    items:
                      type: string
                  oxAuthClaimName:
                    type: string
                  seeAlso:
                    type: string
                  saml1Uri:
                    type: string
                  saml2Uri:
                    type: string
                  urn:
                    type: string
                  oxSCIMCustomAttribute:
                    type: boolean
                    description: Boolean value indicating if the attribute is a SCIM custom attribute
                  custom:
                    type: boolean
                    description: Boolean value indicating if the attribute is a custom attribute
                  requred:
                    type: boolean
                    description: Boolean value indicating is a mandatory attribute
                  attributeValidation:
                    type: object
                    description: Details of validations to be applied on the attribute
                    properties:
                      regexp:
                        type: string
                        description: Reguar expression to be used to validate the dataType.
                      minLength:
                        type: integer
                      maxLength:
                        type: integer
                  gluuTooltip:
                    type: string
        '401':
          description: Unauthorized
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
    put:
      summary: Updates an existing attribute.
      description: Updates an existing attribute.
      operationId: put-attributes
      tags:
        - Attribute
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: GluuAttribute
              description: Attribute details
              type: object
              required:
                - inum
                - name
                - displayName
                - dataType
                - status
              properties:
                inum:
                  type: string
                  description: Unique id identifying the attribute
                name:
                  type: string
                  description: Name of the attribute.
                  example: 'name, displayName, birthdate, email'
                displayName:
                  type: string
                  items:
                    type: string
                description:
                  type: string
                  description: User friendly descriptive detail of attribute.
                dataType:
                  type: string
                  description: Data Type of attribute.
                  enum:
                    - STRING
                    - NUMERIC
                    - BOOLEAN
                    - BINARY
                    - DATE
                status:
                  type: string
                  description: Distinguished Name
                oxMultiValuedAttribute:
                  type: boolean
                  description: Boolean value indicating if the attribute is multi-value
                lifetime:
                  type: string
                sourceAttribute:
                  type: string
                salt:
                  type: string
                nameIdType:
                  type: string
                origin:
                  type: string
                editType:
                  type: array
                  description: GluuUserRole
                  items:
                    type: string
                viewType:
                  type: array
                  description: GluuUserRole
                  items:
                    type: string
                usageType:
                  type: object
                  description: GluuAttributeUsageType
                  items:
                    type: string
                oxAuthClaimName:
                  type: string
                seeAlso:
                  type: string
                saml1Uri:
                  type: string
                saml2Uri:
                  type: string
                urn:
                  type: string
                oxSCIMCustomAttribute:
                  type: boolean
                  description: Boolean value indicating if the attribute is a SCIM custom attribute
                custom:
                  type: boolean
                  description: Boolean value indicating if the attribute is a custom attribute
                requred:
                  type: boolean
                  description: Boolean value indicating is a mandatory attribute
                attributeValidation:
                  type: object
                  description: Details of validations to be applied on the attribute
                  properties:
                    regexp:
                      type: string
                      description: Reguar expression to be used to validate the dataType.
                    minLength:
                      type: integer
                    maxLength:
                      type: integer
                gluuTooltip:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: GluuAttribute
                type: object
                required:
                  - inum
                  - name
                  - displayName
                  - dataType
                  - status
                properties:
                  inum:
                    type: string
                    description: Unique id identifying the attribute
                  name:
                    type: string
                    description: Name of the attribute.
                    example: 'name, displayName, birthdate, email'
                  displayName:
                    type: string
                    items:
                      type: string
                  description:
                    type: string
                    description: User friendly descriptive detail of attribute.
                  dataType:
                    type: string
                    description: Data Type of attribute.
                    enum:
                      - STRING
                      - NUMERIC
                      - BOOLEAN
                      - BINARY
                      - DATE
                  status:
                    type: string
                    description: Distinguished Name
                  oxMultiValuedAttribute:
                    type: boolean
                    description: Boolean value indicating if the attribute is multi-value
                  lifetime:
                    type: string
                  sourceAttribute:
                    type: string
                  salt:
                    type: string
                  nameIdType:
                    type: string
                  origin:
                    type: string
                  editType:
                    type: array
                    description: GluuUserRole
                    items:
                      type: string
                  viewType:
                    type: array
                    description: GluuUserRole
                    items:
                      type: string
                  usageType:
                    type: object
                    description: GluuAttributeUsageType
                    items:
                      type: string
                  oxAuthClaimName:
                    type: string
                  seeAlso:
                    type: string
                  saml1Uri:
                    type: string
                  saml2Uri:
                    type: string
                  urn:
                    type: string
                  oxSCIMCustomAttribute:
                    type: boolean
                    description: Boolean value indicating if the attribute is a SCIM custom attribute
                  custom:
                    type: boolean
                    description: Boolean value indicating if the attribute is a custom attribute
                  requred:
                    type: boolean
                    description: Boolean value indicating is a mandatory attribute
                  attributeValidation:
                    type: object
                    description: Details of validations to be applied on the attribute
                    properties:
                      regexp:
                        type: string
                        description: Reguar expression to be used to validate the dataType.
                      minLength:
                        type: integer
                      maxLength:
                        type: integer
                  gluuTooltip:
                    type: string
        '401':
          description: Unauthorized
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  '/attributes/{inum}':
    parameters:
      - name: inum
        in: path
        required: true
        description: Attribute ID.
        schema:
          type: string
    get:
      summary: Gets attribute by inum.
      description: Gets attribute based on inum.
      operationId: get-attributes-by-inum
      tags:
        - Attribute
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: GluuAttribute
                description: 'Gluu Server attribute corresponding to the identifier{inum}'
                type: object
                required:
                  - inum
                  - name
                  - displayName
                  - dataType
                  - status
                properties:
                  inum:
                    type: string
                    description: Unique id identifying the attribute
                  name:
                    type: string
                    description: Name of the attribute.
                    example: 'name, displayName, birthdate, email'
                  displayName:
                    type: string
                    items:
                      type: string
                  description:
                    type: string
                    description: User friendly descriptive detail of attribute.
                  dataType:
                    type: string
                    description: Data Type of attribute.
                    enum:
                      - STRING
                      - NUMERIC
                      - BOOLEAN
                      - BINARY
                      - DATE
                  status:
                    type: string
                    description: Distinguished Name
                  oxMultiValuedAttribute:
                    type: boolean
                    description: Boolean value indicating if the attribute is multi-value
                  lifetime:
                    type: string
                  sourceAttribute:
                    type: string
                  salt:
                    type: string
                  nameIdType:
                    type: string
                  origin:
                    type: string
                  editType:
                    type: array
                    description: GluuUserRole
                    items:
                      type: string
                  viewType:
                    type: array
                    description: GluuUserRole
                    items:
                      type: string
                  usageType:
                    type: object
                    description: GluuAttributeUsageType
                    items:
                      type: string
                  oxAuthClaimName:
                    type: string
                  seeAlso:
                    type: string
                  saml1Uri:
                    type: string
                  saml2Uri:
                    type: string
                  urn:
                    type: string
                  oxSCIMCustomAttribute:
                    type: boolean
                    description: Boolean value indicating if the attribute is a SCIM custom attribute
                  custom:
                    type: boolean
                    description: Boolean value indicating if the attribute is a custom attribute
                  requred:
                    type: boolean
                    description: Boolean value indicating is a mandatory attribute
                  attributeValidation:
                    type: object
                    description: Details of validations to be applied on the attribute
                    properties:
                      regexp:
                        type: string
                        description: Reguar expression to be used to validate the dataType.
                      minLength:
                        type: integer
                      maxLength:
                        type: integer
                  gluuTooltip:
                    type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
    delete:
      summary: Deletes an attribute identified by inum.
      description: Deletes an attribute identified based on inum.
      operationId: delete-attributes-by-inum
      tags:
        - Attribute
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  /attributes/active:
    get:
      summary: Gets all active attributes.
      description: Gets all active attributes.
      operationId: get-attributes-active
      tags:
        - Attribute
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: GluuAttributes
                description: List of active attributes.
                type: array
                items:
                  type: object
                  title: GluuAttribute
                  required:
                    - inum
                    - name
                    - displayName
                    - dataType
                    - status
                  properties:
                    inum:
                      type: string
                      description: Unique id identifying the attribute
                    name:
                      type: string
                      description: Name of the attribute.
                      example: 'name, displayName, birthdate, email'
                    displayName:
                      type: string
                      items:
                        type: string
                    description:
                      type: string
                      description: User friendly descriptive detail of attribute.
                    dataType:
                      type: string
                      description: Data Type of attribute.
                      enum:
                        - STRING
                        - NUMERIC
                        - BOOLEAN
                        - BINARY
                        - DATE
                    status:
                      type: string
                      description: Distinguished Name
                    oxMultiValuedAttribute:
                      type: boolean
                      description: Boolean value indicating if the attribute is multi-value
                    lifetime:
                      type: string
                    sourceAttribute:
                      type: string
                    salt:
                      type: string
                    nameIdType:
                      type: string
                    origin:
                      type: string
                    editType:
                      type: array
                      description: GluuUserRole
                      items:
                        type: string
                    viewType:
                      type: array
                      description: GluuUserRole
                      items:
                        type: string
                    usageType:
                      type: object
                      description: GluuAttributeUsageType
                      items:
                        type: string
                    oxAuthClaimName:
                      type: string
                    seeAlso:
                      type: string
                    saml1Uri:
                      type: string
                    saml2Uri:
                      type: string
                    urn:
                      type: string
                    oxSCIMCustomAttribute:
                      type: boolean
                      description: Boolean value indicating if the attribute is a SCIM custom attribute
                    custom:
                      type: boolean
                      description: Boolean value indicating if the attribute is a custom attribute
                    requred:
                      type: boolean
                      description: Boolean value indicating is a mandatory attribute
                    attributeValidation:
                      type: object
                      description: Details of validations to be applied on the attribute
                      properties:
                        regexp:
                          type: string
                          description: Reguar expression to be used to validate the dataType.
                        minLength:
                          type: integer
                        maxLength:
                          type: integer
                    gluuTooltip:
                      type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
  /attributes/inactive:
    get:
      summary: Gets all inactive attributes.
      description: Gets all inactive attributes.
      operationId: get-attributes-inactive
      tags:
        - Attribute
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: GluuAttributes
                description: List of inactive attributes.
                type: array
                items:
                  type: object
                  title: GluuAttribute
                  required:
                    - inum
                    - name
                    - displayName
                    - dataType
                    - status
                  properties:
                    inum:
                      type: string
                      description: Unique id identifying the attribute
                    name:
                      type: string
                      description: Name of the attribute.
                      example: 'name, displayName, birthdate, email'
                    displayName:
                      type: string
                      items:
                        type: string
                    description:
                      type: string
                      description: User friendly descriptive detail of attribute.
                    dataType:
                      type: string
                      description: Data Type of attribute.
                      enum:
                        - STRING
                        - NUMERIC
                        - BOOLEAN
                        - BINARY
                        - DATE
                    status:
                      type: string
                      description: Distinguished Name
                    oxMultiValuedAttribute:
                      type: boolean
                      description: Boolean value indicating if the attribute is multi-value
                    lifetime:
                      type: string
                    sourceAttribute:
                      type: string
                    salt:
                      type: string
                    nameIdType:
                      type: string
                    origin:
                      type: string
                    editType:
                      type: array
                      description: GluuUserRole
                      items:
                        type: string
                    viewType:
                      type: array
                      description: GluuUserRole
                      items:
                        type: string
                    usageType:
                      type: object
                      description: GluuAttributeUsageType
                      items:
                        type: string
                    oxAuthClaimName:
                      type: string
                    seeAlso:
                      type: string
                    saml1Uri:
                      type: string
                    saml2Uri:
                      type: string
                    urn:
                      type: string
                    oxSCIMCustomAttribute:
                      type: boolean
                      description: Boolean value indicating if the attribute is a SCIM custom attribute
                    custom:
                      type: boolean
                      description: Boolean value indicating if the attribute is a custom attribute
                    requred:
                      type: boolean
                      description: Boolean value indicating is a mandatory attribute
                    attributeValidation:
                      type: object
                      description: Details of validations to be applied on the attribute
                      properties:
                        regexp:
                          type: string
                          description: Reguar expression to be used to validate the dataType.
                        minLength:
                          type: integer
                        maxLength:
                          type: integer
                    gluuTooltip:
                      type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
  /attributes/search:
    parameters:
      - name: pattern
        in: query
        required: true
        description: Search pattern.
        schema:
          type: string
      - name: size
        in: query
        required: false
        description: Search size - max size of the results to return.
        schema:
          type: integer
    get:
      summary: Searches attributes by pattern.
      description: Searches attributes by pattern.
      operationId: get-attributes-search-by-pattern
      tags:
        - Attribute
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: GluuAttributes
                description: 'List of attributes with either of \"displayName\", \"description\" and \"gluuAttribute\" matching the specified partner.'
                type: array
                items:
                  type: object
                  title: GluuAttribute
                  description: Attribute details
                  required:
                    - inum
                    - name
                    - displayName
                    - dataType
                    - status
                  properties:
                    inum:
                      type: string
                      description: Unique id identifying the attribute
                    name:
                      type: string
                      description: Name of the attribute.
                      example: 'name, displayName, birthdate, email'
                    displayName:
                      type: string
                      items:
                        type: string
                    description:
                      type: string
                      description: User friendly descriptive detail of attribute.
                    dataType:
                      type: string
                      description: Data Type of attribute.
                      enum:
                        - STRING
                        - NUMERIC
                        - BOOLEAN
                        - BINARY
                        - DATE
                    status:
                      type: string
                      description: Distinguished Name
                    oxMultiValuedAttribute:
                      type: boolean
                      description: Boolean value indicating if the attribute is multi-value
                    lifetime:
                      type: string
                    sourceAttribute:
                      type: string
                    salt:
                      type: string
                    nameIdType:
                      type: string
                    origin:
                      type: string
                    editType:
                      type: array
                      description: GluuUserRole
                      items:
                        type: string
                    viewType:
                      type: array
                      description: GluuUserRole
                      items:
                        type: string
                    usageType:
                      type: object
                      description: GluuAttributeUsageType
                      items:
                        type: string
                    oxAuthClaimName:
                      type: string
                    seeAlso:
                      type: string
                    saml1Uri:
                      type: string
                    saml2Uri:
                      type: string
                    urn:
                      type: string
                    oxSCIMCustomAttribute:
                      type: boolean
                      description: Boolean value indicating if the attribute is a SCIM custom attribute
                    custom:
                      type: boolean
                      description: Boolean value indicating if the attribute is a custom attribute
                    requred:
                      type: boolean
                      description: Boolean value indicating is a mandatory attribute
                    attributeValidation:
                      type: object
                      description: Details of validations to be applied on the attribute
                      properties:
                        regexp:
                          type: string
                          description: Reguar expression to be used to validate the dataType.
                        minLength:
                          type: integer
                        maxLength:
                          type: integer
                    gluuTooltip:
                      type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
  /acrs:
    get:
      summary: Gets default authentication method.
      description: Gets default authentication method.
      operationId: get-acrs
      tags:
        - Authentication
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: AuthenticationMethod
                description: Default authentication method.
                type: object
                properties:
                  defaultAcr:
                    type: string
                  oxtrustAcr:
                    type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
    post:
      summary: Adds authentication method.
      description: Adds default authentication method.
      operationId: post-acrs
      tags:
        - Authentication
      requestBody:
        content:
          application/json:
            schema:
              title: AuthenticationMethod
              description: Authentication method to be added as default.
              type: object
              properties:
                defaultAcr:
                  type: string
                oxtrustAcr:
                  type: string
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
    put:
      summary: Updates default authentication method.
      description: Updates default authentication method.
      operationId: put-acrs
      tags:
        - Authentication
      requestBody:
        content:
          application/json:
            schema:
              title: AuthenticationMethod
              description: Authentication method to be updated as default.
              type: object
              properties:
                defaultAcr:
                  type: string
                oxtrustAcr:
                  type: string
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  /config/database/ldap:
    get:
      summary: Gets existing LDAP configuration.
      description: Gets existing LDAP configuration.
      operationId: get-config-database-ldap
      tags:
        - Database - LDAP configuration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: LdapConfiguration
                description: List of configured LDAP configuration.
                type: array
                items:
                  $ref: '#/components/schemas/LdapConfiguration'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
    post:
      summary: Adds a new LDAP configuration.
      description: Adds a new LDAP configuration.
      operationId: post-config-database-ldap
      tags:
        - Database - LDAP configuration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LdapConfiguration'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
    put:
      summary: Updates LDAP configuration.
      description: Updates LDAP configuration.
      operationId: put-config-database-ldap
      tags:
        - Database - LDAP configuration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LdapConfiguration'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  '/config/database/ldap/{name}':
    parameters:
      - name: name
        in: path
        required: true
        description: Name of LDAP configuration.
        schema:
          type: string
    get:
      summary: Gets LDAP configuration by name.
      description: Gets LDAP configuration by name.
      operationId: get-config-database-ldap-by-name
      tags:
        - Database - LDAP configuration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: LdapConfiguration
                $ref: '#/components/schemas/LdapConfiguration'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
    delete:
      summary: Deletes LDAP configuration by name.
      description: Deletes LDAP configuration by name.
      operationId: delete-config-database-ldap
      tags:
        - Database - LDAP configuration
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  /config/database/ldap/status:
    get:
      summary: Gets LDAP connection status.
      description: Gets LDAP connection status.
      operationId: get-config-database-ldap-status
      tags:
        - Database - LDAP configuration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ConnectionStatusDTO
                description: LDAP Connection Status object.
                type: object
                required:
                  - isUp
                properties:
                  isUp:
                    type: boolean
                    description: 'Boolean value indicating the status of LDAP connection, true for connection up and running'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
  '/config/database/ldap/{name}/status':
    parameters:
      - name: name
        in: path
        required: true
        description: Name of LDAP configuration.
        schema:
          type: string
    get:
      summary: Gets LDAP connection status based on name.
      description: Gets LDAP connection status based on name.
      operationId: get-config-database-ldap-status-by-name
      tags:
        - Database - LDAP configuration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ConnectionStatusDTO
                description: LDAP Connection Status object.
                type: object
                required:
                  - isUp
                properties:
                  isUp:
                    type: boolean
                    description: 'Boolean value indicating the status of LDAP connection, true for connection up and running'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
  /config/database/couchbase:
    get:
      summary: Gets Couchbase configuration.
      description: Gets Couchbase configuration.
      operationId: get-config-database-couchbase
      tags:
        - Database - Couchbase
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: CouchbaseConfiguration
                description: List of configured Couchbase configuration.
                type: array
                items:
                  $ref: '#/components/schemas/CouchbaseConfiguration'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
    post:
      summary: Adds Couchbase configuration.
      description: Adds Couchbase configuration.
      operationId: post-config-database-couchbase
      tags:
        - Database - Couchbase
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CouchbaseConfiguration'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
    put:
      summary: Updates Couchbase configuration.
      description: Updates Couchbase configuration.
      operationId: put-config-database-couchbase
      tags:
        - Database - Couchbase
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CouchbaseConfiguration'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
    delete:
      summary: Deletes Couchbase configuration.
      description: Deletes Couchbase configuration.
      operationId: delete-config-database-couchbase
      tags:
        - Database - Couchbase
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  /config/library:
    get:
      summary: Gets custom library.
      description: Gets custom library.
      operationId: get-config-library
      tags:
        - Configuration – Library
      responses:
        '200':
          description: OK
          content:
            multipart/form-data:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - file
                  properties:
                    file:
                      format: binary
                      type: string
                      description: List of custom libraries.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - read
    post:
      summary: Uploads custom library.
      description: Uploads custom library.
      operationId: post-config-library
      tags:
        - Configuration – Library
      parameters: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: File to upload.
              required:
                - file
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/config/library/{name}':
    parameters:
      - schema:
          type: string
          minLength: 1
        name: name
        in: path
        description: Name of the library.
        required: true
    get:
      summary: Gets custom library by name.
      description: Gets custom library by name.
      operationId: get-config-library-by-name
      tags:
        - Configuration – Library
      responses:
        '200':
          description: OK
          content:
            multipart/form-data:
              schema:
                type: object
                properties:
                  file:
                    type: string
                    format: binary
                required:
                  - file
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
    delete:
      summary: Deletes custom library by name.
      description: Deletes custom library by name.
      operationId: delete-config-library-by-name
      tags:
        - Configuration – Library
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  /scripts/person_authn:
    get:
      summary: Gets all person authentication script.
      description: Gets all person authentication script.
      operationId: get-scripts-person_authn
      tags:
        - Custom Scripts - Person Authentication
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - read
    post:
      summary: Adds a new person authentication script.
      description: Adds a new custom person authentication script.
      operationId: post-scripts-person_authn
      tags:
        - Custom Scripts - Person Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - write
    put:
      summary: Updates person authentication script.
      description: Updates person authentication script.
      operationId: put-scripts-person_authn
      tags:
        - Custom Scripts - Person Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  '/scripts/person_authn/{inum}':
    parameters:
      - schema:
          type: string
        name: inum
        in: path
        description: Script identifier
        required: true
    delete:
      summary: Deletes person authentication script.
      description: Deletes person authentication script.
      operationId: delete-scripts-person_authn-by-inum
      tags:
        - Custom Scripts - Person Authentication
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
    get:
      summary: Gets person authentication script by inum.
      description: Gets person authentication script identified by inum.
      operationId: get-scripts-person_authn-by-inum
      tags:
        - Custom Scripts - Person Authentication
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomScript'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - read
  '/scripts/person_authn/{type}':
    parameters:
      - schema:
          type: string
        name: type
        in: path
        required: true
        description: Script type.
    get:
      summary: Gets all person authentication scripts by type.
      description: Gets all person authentication scripts based on type.
      operationId: get-scripts-person_authn-by-type
      tags:
        - Custom Scripts - Person Authentication
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - read
  /scripts/consent:
    get:
      summary: Gets all consent gathering script.
      description: Gets all custom consent gathering script.
      operationId: get-scripts-consent
      tags:
        - Custom Scripts - Consent Gathering
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - read
    post:
      summary: Adds a new consent gathering script.
      description: Adds a new custom consent gathering script.
      operationId: post-scripts-consent
      tags:
        - Custom Scripts - Consent Gathering
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - write
    put:
      summary: Updates consent gathering script.
      description: Updates consent gathering script.
      operationId: put-scripts-consent
      tags:
        - Custom Scripts - Consent Gathering
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  '/scripts/consent/{inum}':
    parameters:
      - schema:
          type: string
        name: inum
        in: path
        description: Script identifier
        required: true
    delete:
      summary: Deletes consent gathering script by inum.
      description: Deletes consent gathering script by inum.
      operationId: delete-scripts-consent-by-inum
      tags:
        - Custom Scripts - Consent Gathering
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
    get:
      summary: Gets consent gathering script by inum.
      description: Gets consent gathering script identified by inum.
      operationId: get-scripts-consent-by-inum
      tags:
        - Custom Scripts - Consent Gathering
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomScript'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - read
  '/scripts/consent/{type}':
    parameters:
      - schema:
          type: string
        name: type
        in: path
        required: true
        description: Script type.
    get:
      summary: Gets all consent gathering scripts by type.
      description: Gets all consent gathering scripts based on type.
      operationId: get-scripts-consent-by-type
      tags:
        - Custom Scripts - Consent Gathering
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - read
  /scripts/client_reg:
    get:
      summary: Gets all client registration script.
      description: Gets all custom client registration script.
      operationId: get-scripts-client_reg
      tags:
        - Custom Scripts - Client Registration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: CustomScript
                description: Provides list of client custom scripts.
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
    post:
      summary: Adds a new client registration script.
      description: Adds a new custom client registration script.
      operationId: post-scripts-client_reg
      tags:
        - Custom Scripts - Client Registration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomScript'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
    put:
      summary: Updates client registration script.
      description: Updates custom client registration script.
      operationId: put-scripts-client_reg
      tags:
        - Custom Scripts - Client Registration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  '/scripts/client_reg/{type}':
    get:
      summary: Gets client registration script by type.
      description: Gets client registration script by type.
      operationId: get-scripts-client_reg-by-type
      tags:
        - Custom Scripts - Client Registration
      parameters:
        - name: type
          in: path
          required: true
          description: Resource description ID.
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: CustomScript
                description: Provides list of client custom scripts.
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
  '/scripts/client_reg/{inum}':
    parameters:
      - name: inum
        in: path
        required: true
        description: Authentication script ID.
        schema:
          type: string
    get:
      summary: Gets client registration script by inum.
      description: Gets custom client registration script by inum.
      operationId: get-scripts-client_reg-by-inum
      tags:
        - Custom Scripts - Client Registration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: CustomScript
                description: Provides list of client custom scripts.
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
    delete:
      summary: Deletes client registration script by inum.
      description: Deletes custom client registration script by inum.
      operationId: delete-scripts-client_reg
      tags:
        - Custom Scripts - Client Registration
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  /scripts/dyn_scopes:
    get:
      summary: Gets all dynamic scope scripts.
      description: Gets all custom dynamic scope scripts.
      operationId: get-scripts-dyn_scopes
      tags:
        - Custom Scripts - Dynamic Scopes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - read
    post:
      summary: Adds a new dynamic scope script.
      description: Adds a new custom dynamic scope script.
      operationId: post-scripts-dyn_scopes
      tags:
        - Custom Scripts - Dynamic Scopes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - write
    put:
      summary: Updates dynamic scope script.
      description: Updates dynamic scope script.
      operationId: put-scripts-dyn_scopes
      tags:
        - Custom Scripts - Dynamic Scopes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  '/scripts/dyn_scopes/{inum}':
    parameters:
      - schema:
          type: string
        name: inum
        in: path
        description: Script identifier
        required: true
    delete:
      summary: Deletes dynamic scope script by inum.
      description: Deletes dynamic scope script by inum.
      operationId: delete-scripts-dyn_scopes-by-inum
      tags:
        - Custom Scripts - Dynamic Scopes
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
    get:
      summary: Gets dynamic scope script by inum.
      description: Gets dynamic scope script identified by inum.
      operationId: get-scripts-dyn_scopes-by-inum
      tags:
        - Custom Scripts - Dynamic Scopes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomScript'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
    put:
      summary: Updates dynamic scope script by inum.
      description: Updates dynamic scope script based on inum.
      operationId: put-scripts-dyn_scopes-by-inum
      tags:
        - Custom Scripts - Dynamic Scopes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  '/scripts/dyn_scopes/{type}':
    parameters:
      - schema:
          type: string
        name: type
        in: path
        required: true
        description: Script type.
    get:
      summary: Gets all dynamic scope scripts by type.
      description: Gets all dynamic scope scripts based on type.
      operationId: get-scripts-dyn_scopes-by-type
      tags:
        - Custom Scripts - Dynamic Scopes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - read
  /scripts/uma_rpt:
    get:
      summary: Gets all UMA RPT Policy scripts.
      description: Gets all custom UMA RPT policy scripts.
      operationId: get-scripts-uma_rpt
      tags:
        - Custom Scripts - UMA RPT Policies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - read
    post:
      summary: Adds a new UMA RPT policy script.
      description: Adds a new custom UMA RPT policy script.
      operationId: post-scripts-uma_rpt
      tags:
        - Custom Scripts - UMA RPT Policies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - write
    put:
      summary: Updates UMA RPT policy script.
      description: Updates UMA RPT policy script.
      operationId: put-scripts-uma_rpt
      tags:
        - Custom Scripts - UMA RPT Policies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  '/scripts/uma_rpt/{inum}':
    parameters:
      - schema:
          type: string
        name: inum
        in: path
        description: Script identifier
        required: true
    delete:
      summary: Deletes UMA RPT policy script.
      description: Deletes UMA RPT policy script.
      operationId: delete-scripts-uma_rpt-by-inum
      tags:
        - Custom Scripts - UMA RPT Policies
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
    get:
      summary: Gets UMA RPT policy script by inum.
      description: Gets UMA RPT policy script identified by inum.
      operationId: get-scripts-uma_rpt-by-inum
      tags:
        - Custom Scripts - UMA RPT Policies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomScript'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
    put:
      summary: Updates UMA RPT policy script based on inum.
      description: Updates UMA RPT policy script based on inum.
      operationId: put-scripts-uma_rpt-by-inum
      tags:
        - Custom Scripts - UMA RPT Policies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  '/scripts/uma_rpt/{type}':
    parameters:
      - schema:
          type: string
        name: type
        in: path
        required: true
        description: Script type.
    get:
      summary: Gets all UMA RPT policy scripts by type.
      description: Gets all UMA RPT policy scripts based on type.
      operationId: get-scripts-uma_rpt-by-type
      tags:
        - Custom Scripts - UMA RPT Policies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
  '/scripts/uma_rpt/{name}':
    parameters:
      - schema:
          type: string
        name: name
        in: path
        required: true
        description: Script name.
    get:
      summary: Gets UMA RPT policy scripts by name.
      description: Gets UMA RPT policy script based on name.
      operationId: get-scripts-uma_rpt-by-name
      tags:
        - Custom Scripts - UMA RPT Policies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
        - oxAuth: []
  /scripts/uma_gather:
    get:
      summary: Gets all UMA claims gathering scripts.
      description: Gets all custom UMA claims gathering scripts.
      operationId: get-scripts-uma_gather
      tags:
        - Custom Scripts - UMA Claims Gathering
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
    post:
      summary: Adds a new UMA claims gathering script.
      description: Adds a new custom UMA claims gathering script.
      operationId: post-scripts-uma_gather
      tags:
        - Custom Scripts - UMA Claims Gathering
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
    put:
      summary: Updates UMA claims gathering script.
      description: Updates UMA claims gathering script.
      operationId: put-scripts-uma_gather
      tags:
        - Custom Scripts - UMA Claims Gathering
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  '/scripts/uma_gather/{inum}':
    parameters:
      - schema:
          type: string
        name: inum
        in: path
        description: Script identifier
        required: true
    delete:
      summary: Deletes UMA claims gathering script.
      description: Deletes UMA claims gathering script.
      operationId: delete-scripts-uma_gather-by-inum
      tags:
        - Custom Scripts - UMA Claims Gathering
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
    get:
      summary: Gets UMA claims gathering script by inum.
      description: Gets UMA claims gathering script identified by inum.
      operationId: get-scripts-uma_gather-by-inum
      tags:
        - Custom Scripts - UMA Claims Gathering
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomScript'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
    put:
      summary: Updates UMA claims gathering script.
      description: Updates UMA claims gathering script based on inum.
      operationId: put-scripts-uma_gather-by-inum
      tags:
        - Custom Scripts - UMA Claims Gathering
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  '/scripts/uma_gather/{type}':
    parameters:
      - schema:
          type: string
        name: type
        in: path
        required: true
        description: Script type.
    get:
      summary: Gets all UMA claims gathering scripts by type.
      description: Gets all UMA claims gathering scripts based on type.
      operationId: get-scripts-uma_gather-by-type
      tags:
        - Custom Scripts - UMA Claims Gathering
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
  '/scripts/uma_gather/{name}':
    parameters:
      - schema:
          type: string
        name: name
        in: path
        required: true
        description: Script name.
    get:
      summary: Gets UMA claims gathering scripts by name.
      description: Gets UMA claims gathering script based on name.
      operationId: get-scripts-uma_gather-by-name
      tags:
        - Custom Scripts - UMA Claims Gathering
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
  /scripts/introspection:
    get:
      summary: Gets all introspection scripts.
      description: Gets all custom introspection scripts.
      operationId: get-scripts-introspection
      tags:
        - Custom Scripts - Introspection
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
    post:
      summary: Adds a new introspection script.
      description: Adds a new custom introspection script.
      operationId: post-scripts-introspection
      tags:
        - Custom Scripts - Introspection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
    put:
      summary: Updates introspection script.
      description: Updates introspection script.
      operationId: put-scripts-introspection
      tags:
        - Custom Scripts - Introspection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  '/scripts/introspection/{inum}':
    parameters:
      - schema:
          type: string
        name: inum
        in: path
        description: Script identifier
        required: true
    delete:
      summary: Deletes introspection script.
      description: Deletes introspection script.
      operationId: delete-scripts-introspection-by-inum
      tags:
        - Custom Scripts - Introspection
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
    get:
      summary: Gets introspection script by inum.
      description: Gets introspection script identified by inum.
      operationId: get-scripts-introspection-by-inum
      tags:
        - Custom Scripts - Introspection
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomScript'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
    put:
      summary: Updates introspection script.
      description: Updates introspection script based on inum.
      operationId: put-scripts-introspection-by-inum
      tags:
        - Custom Scripts - Introspection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  '/scripts/introspection/{type}':
    parameters:
      - schema:
          type: string
        name: type
        in: path
        required: true
        description: Script type.
    get:
      summary: Gets all introspection scripts by type.
      description: Gets all introspection scripts based on type.
      operationId: get-scripts-introspection-by-type
      tags:
        - Custom Scripts - Introspection
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
  '/scripts/introspection/{name}':
    parameters:
      - schema:
          type: string
        name: name
        in: path
        required: true
        description: Script name.
    get:
      summary: Gets introspection scripts by name.
      description: Gets introspection script based on name.
      operationId: get-scripts-introspection-by-name
      tags:
        - Custom Scripts - Introspection
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
  /scripts/ropw:
    get:
      summary: Gets all Resource Owner Password Credentials scripts.
      description: Gets all custom Resource Owner Password Credentials scripts.
      operationId: get-scripts-ropw
      tags:
        - Custom Scripts - Resource Owner Password Credentials
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
    post:
      summary: Adds a new Resource Owner Password Credentials script.
      description: Adds a new custom Resource Owner Password Credentials script.
      operationId: post-scripts-ropw
      tags:
        - Custom Scripts - Resource Owner Password Credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
    put:
      summary: Updates Resource Owner Password Credentials script.
      description: Updates Resource Owner Password Credentials script.
      operationId: put-scripts-ropw
      tags:
        - Custom Scripts - Resource Owner Password Credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  '/scripts/ropw/{inum}':
    parameters:
      - schema:
          type: string
        name: inum
        in: path
        description: Script identifier
        required: true
    delete:
      summary: Deletes Resource Owner Password Credentials script.
      description: Deletes Resource Owner Password Credentials script.
      operationId: delete-scripts-ropw-by-inum
      tags:
        - Custom Scripts - Resource Owner Password Credentials
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
    get:
      summary: Gets Resource Owner Password Credentials script by inum.
      description: Gets Resource Owner Password Credentials script identified by inum.
      operationId: get-scripts-ropw-by-inum
      tags:
        - Custom Scripts - Resource Owner Password Credentials
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomScript'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
    put:
      summary: Updates Resource Owner Password Credentials script.
      description: Updates Resource Owner Password Credentials script based on inum.
      operationId: put-scripts-ropw-by-inum
      tags:
        - Custom Scripts - Resource Owner Password Credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  '/scripts/ropw/{type}':
    parameters:
      - schema:
          type: string
        name: type
        in: path
        required: true
        description: Script type.
    get:
      summary: Gets all Resource Owner Password Credentials scripts by type.
      description: Gets all Resource Owner Password Credentials scripts based on type.
      operationId: get-scripts-ropw-by-type
      tags:
        - Custom Scripts - Resource Owner Password Credentials
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
  '/scripts/ropw/{name}':
    parameters:
      - schema:
          type: string
        name: name
        in: path
        required: true
        description: Script name.
    get:
      summary: Gets Resource Owner Password Credentials scripts by name.
      description: Gets Resource Owner Password Credentials script based on name.
      operationId: get-scripts-ropw-by-name
      tags:
        - Custom Scripts - Resource Owner Password Credentials
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
  /scripts/app_session:
    get:
      summary: Gets all Application session scripts.
      description: Gets all custom Application session scripts.
      operationId: get-scripts-app_session
      tags:
        - Custom Scripts - Application Session
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
    post:
      summary: Adds a new Application session script.
      description: Adds a new custom Application session script.
      operationId: post-scripts-app_session
      tags:
        - Custom Scripts - Application Session
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
    put:
      summary: Updates Application session script.
      description: Updates Application session script.
      operationId: put-scripts-app_session
      tags:
        - Custom Scripts - Application Session
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  '/scripts/app_session/{inum}':
    parameters:
      - schema:
          type: string
        name: inum
        in: path
        description: Script identifier
        required: true
    delete:
      summary: Deletes Application session script.
      description: Deletes Application session script.
      operationId: delete-scripts-app_session-by-inum
      tags:
        - Custom Scripts - Application Session
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
    get:
      summary: Gets Application session script by inum.
      description: Gets Application session script identified by inum.
      operationId: get-scripts-app_session-by-inum
      tags:
        - Custom Scripts - Application Session
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomScript'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
    put:
      summary: Updates Application session script.
      description: Updates Application session script based on inum.
      operationId: put-scripts-app_session-by-inum
      tags:
        - Custom Scripts - Application Session
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  '/scripts/app_session/{type}':
    parameters:
      - schema:
          type: string
        name: type
        in: path
        required: true
        description: Script type.
    get:
      summary: Gets all Application session scripts by type.
      description: Gets all Application session scripts based on type.
      operationId: get-scripts-app_session-by-type
      tags:
        - Custom Scripts - Application Session
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
  '/scripts/app_session/{name}':
    parameters:
      - schema:
          type: string
        name: name
        in: path
        required: true
        description: Script name.
    get:
      summary: Gets Application session scripts by name.
      description: Gets Application session script based on name.
      operationId: get-scripts-app_session-by-name
      tags:
        - Custom Scripts - Application Session
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
  '/config/scripts/{name}':
    parameters:
      - schema:
          type: string
        name: name
        in: path
        required: true
        description: Script name.
    get:
      summary: Gets script details by name.
      description: Gets script details based on name.
      operationId: get-config-scripts-by-name
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
  '/config/scripts/{name}/property':
    parameters:
      - schema:
          type: string
        name: name
        in: path
        required: true
        description: Script name.
    get:
      summary: Gets script property by name.
      description: Gets script property based on name.
      operationId: get-config-scripts-property-by-name
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
    post:
      summary: Adds script property by name.
      description: Adds script property by name.
      operationId: post-config-scripts-property-by-name
      tags:
        - Custom Scripts
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
    put:
      summary: Updates script property by name.
      description: Updates script property by name.
      operationId: put-config-scripts-property-by-name
      tags:
        - Custom Scripts
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
    delete:
      summary: Deletes script property by name.
      description: Deletes script property by name.
      operationId: delete-config-scripts-property-by-name
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  /config/cache:
    get:
      summary: Returns cache configuration.
      description: Returns cache configuration.
      operationId: get-config-cache
      tags:
        - Cache Configuration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Cache Configuration.
                properties:
                  cacheProviderType:
                    description: The cache Provider Type.
                    type: string
                    enum:
                      - IN_MEMORY
                      - MEMCACHED
                      - REDIS
                      - NATIVE_PERSISTENCE
                  memcachedConfiguration:
                    description: Memcached cache configuration.
                    type: object
                    required:
                      - servers
                      - maxOperationQueueLength
                      - bufferSize
                      - defaultPutExpiration
                      - memcachedConnectionFactoryType
                    properties:
                      servers:
                        type: string
                        description: Server details separated by spaces.
                        format: url
                        minLength: 1
                      maxOperationQueueLength:
                        type: integer
                        description: Maximum operation Queue Length.
                        default: 99999999
                        multipleOf: 1
                        maximum: 2147483647
                        minimum: 1
                        exclusiveMaximum: false
                        exclusiveMinimum: false
                      bufferSize:
                        type: integer
                        description: Buffer Size.
                        default: 32768
                        multipleOf: 1
                        maximum: 2147483647
                        minimum: 1
                        exclusiveMaximum: false
                        exclusiveMinimum: false
                      defaultPutExpiration:
                        type: integer
                        description: Expiration timeout value.
                        default: 60
                        multipleOf: 1
                        maximum: 2147483647
                        minimum: 1
                        exclusiveMaximum: false
                        exclusiveMinimum: false
                      memcachedConnectionFactoryType:
                        type: string
                        description: The MemcachedConnectionFactoryType Type.
                        enum:
                          - DEFAULT
                          - BINARY
                  redisConfiguration:
                    type: object
                    description: Cache Configuration
                    properties:
                      redisProviderType:
                        description: Type of connection.
                        type: string
                        enum:
                          - STANDALONE
                          - CLUSTER
                          - SHARDED
                          - SENTINEL
                      servers:
                        description: 'server details separated by comma e.g. ''server1:8080server2:8081''.'
                        type: string
                        title: servers
                        format: url
                        minLength: 3
                      password:
                        description: Redis password.
                        type: string
                        minLength: 0
                      defaultPutExpiration:
                        description: defaultPutExpiration timeout value.
                        type: integer
                        multipleOf: 1
                        maximum: 2147483647
                        minimum: 1
                        exclusiveMaximum: false
                        exclusiveMinimum: false
                      sentinelMasterGroupName:
                        description: Sentinel Master Group Name (required if SENTINEL type of connection is selected).
                        type: string
                        minLength: 1
                      useSSL:
                        description: Enable SSL communication between Gluu Server and Redis cache.
                        type: boolean
                      sslTrustStoreFilePath:
                        description: Directory Path to Trust Store.
                        type: string
                        format: url
                        minLength: 1
                      maxIdleConnections:
                        description: The cap on the number of \idle\ instances in the pool. If max idle is set too low on heavily loaded systems it is possible you will see objects being destroyed and almost immediately new objects being created. This is a result of the active threads momentarily returning objects faster than they are requesting them causing the number of idle objects to rise above max idle. The best value for max idle for heavily loaded system will vary but the default is a good starting point.
                        type: integer
                        multipleOf: 1
                        maximum: 2147483647
                        minimum: 1
                        exclusiveMaximum: false
                        exclusiveMinimum: false
                      maxTotalConnections:
                        description: The number of maximum connection instances in the pool.
                        type: integer
                        multipleOf: 1
                        maximum: 2147483647
                        minimum: 1
                        exclusiveMaximum: false
                        exclusiveMinimum: false
                      connectionTimeout:
                        description: Connection time out.
                        type: integer
                        multipleOf: 1
                        maximum: 2147483647
                        minimum: 1
                        exclusiveMaximum: false
                        exclusiveMinimum: false
                      soTimeout:
                        description: With this option set to a non-zero timeout a read() call on the InputStream associated with this Socket will block for only this amount of time. If the timeout expires a java.net.SocketTimeoutException is raised though the Socket is still valid. The option must be enabled prior to entering the blocking operation to have effect. The timeout must be > 0. A timeout of zero is interpreted as an infinite timeout.
                        type: integer
                        multipleOf: 1
                        maximum: 2147483647
                        minimum: 1
                        exclusiveMaximum: false
                        exclusiveMinimum: false
                      maxRetryAttempts:
                        description: Maximum retry attempts in case of failure.
                        type: integer
                        multipleOf: 1
                        maximum: 2147483647
                        minimum: 1
                        exclusiveMaximum: false
                        exclusiveMinimum: false
                  inMemoryConfiguration:
                    type: object
                    description: Cache configuration.
                    properties:
                      defaultPutExpiration:
                        description: defaultPutExpiration timeout value.
                        type: integer
                        multipleOf: 1
                        maximum: 2147483647
                        minimum: 1
                        exclusiveMaximum: false
                        exclusiveMinimum: false
                  nativePersistenceConfiguration:
                    type: object
                    description: Cache configuration.
                    properties:
                      defaultPutExpiration:
                        description: defaultPutExpiration timeout value.
                        type: integer
                        multipleOf: 1
                        maximum: 2147483647
                        minimum: 1
                        default: 60
                        exclusiveMaximum: false
                        exclusiveMinimum: false
                      defaultCleanupBatchSize:
                        description: defaultCleanupBatchSize page size.
                        type: integer
                        multipleOf: 1
                        maximum: 2147483647
                        minimum: 25
                        default: 25
                        exclusiveMaximum: false
                        exclusiveMinimum: false
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - read
    post:
      summary: Adds cache configuration.
      description: Adds cache configuration.
      operationId: post-config-cache
      tags:
        - Cache Configuration
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Cache Configuration.
              properties:
                cacheProviderType:
                  description: The cacheProvider Type.
                  type: string
                  enum:
                    - IN_MEMORY
                    - MEMCACHED
                    - REDIS
                    - NATIVE_PERSISTENCE
                memcachedConfiguration:
                  description: Memcached cache configuration.
                  type: object
                  required:
                    - servers
                    - maxOperationQueueLength
                    - bufferSize
                    - defaultPutExpiration
                    - memcachedConnectionFactoryType
                  properties:
                    servers:
                      type: string
                      description: Server details separated by spaces.
                      format: url
                      minLength: 1
                    maxOperationQueueLength:
                      type: integer
                      description: Maximum operation Queue Length.
                      default: 99999999
                      multipleOf: 1
                      maximum: 2147483647
                      minimum: 1
                      exclusiveMaximum: false
                      exclusiveMinimum: false
                    bufferSize:
                      type: integer
                      description: Buffer Size.
                      default: 32768
                      multipleOf: 1
                      maximum: 2147483647
                      minimum: 1
                      exclusiveMaximum: false
                      exclusiveMinimum: false
                    defaultPutExpiration:
                      type: integer
                      description: Expiration timeout value.
                      default: 60
                      multipleOf: 1
                      maximum: 2147483647
                      minimum: 1
                      exclusiveMaximum: false
                      exclusiveMinimum: false
                    memcachedConnectionFactoryType:
                      type: string
                      description: The MemcachedConnectionFactoryType Type.
                      enum:
                        - DEFAULT
                        - BINARY
                redisConfiguration:
                  type: object
                  description: Cache Configuration
                  properties:
                    redisProviderType:
                      description: Type of connection.
                      type: string
                      enum:
                        - STANDALONE
                        - CLUSTER
                        - SHARDED
                        - SENTINEL
                    servers:
                      description: 'server details separated by comma e.g. ''server1:8080server2:8081''.'
                      type: string
                      title: servers
                      format: url
                      minLength: 3
                    password:
                      description: Redis password.
                      type: string
                      minLength: 0
                    defaultPutExpiration:
                      description: defaultPutExpiration timeout value.
                      type: integer
                      multipleOf: 1
                      maximum: 2147483647
                      minimum: 1
                      exclusiveMaximum: false
                      exclusiveMinimum: false
                    sentinelMasterGroupName:
                      description: Sentinel Master Group Name (required if SENTINEL type of connection is selected).
                      type: string
                      minLength: 1
                    useSSL:
                      description: Enable SSL communication between Gluu Server and Redis cache.
                      type: boolean
                    sslTrustStoreFilePath:
                      description: Directory Path to Trust Store.
                      type: string
                      format: url
                      minLength: 1
                    maxIdleConnections:
                      description: The cap on the number of \idle\ instances in the pool. If max idle is set too low on heavily loaded systems it is possible you will see objects being destroyed and almost immediately new objects being created. This is a result of the active threads momentarily returning objects faster than they are requesting them causing the number of idle objects to rise above max idle. The best value for max idle for heavily loaded system will vary but the default is a good starting point.
                      type: integer
                      multipleOf: 1
                      maximum: 2147483647
                      minimum: 1
                      exclusiveMaximum: false
                      exclusiveMinimum: false
                    maxTotalConnections:
                      description: The number of maximum connection instances in the pool.
                      type: integer
                      multipleOf: 1
                      maximum: 2147483647
                      minimum: 1
                      exclusiveMaximum: false
                      exclusiveMinimum: false
                    connectionTimeout:
                      description: Connection time out.
                      type: integer
                      multipleOf: 1
                      maximum: 2147483647
                      minimum: 1
                      exclusiveMaximum: false
                      exclusiveMinimum: false
                    soTimeout:
                      description: With this option set to a non-zero timeout a read() call on the InputStream associated with this Socket will block for only this amount of time. If the timeout expires a java.net.SocketTimeoutException is raised though the Socket is still valid. The option must be enabled prior to entering the blocking operation to have effect. The timeout must be > 0. A timeout of zero is interpreted as an infinite timeout.
                      type: integer
                      multipleOf: 1
                      maximum: 2147483647
                      minimum: 1
                      exclusiveMaximum: false
                      exclusiveMinimum: false
                    maxRetryAttempts:
                      description: Maximum retry attempts in case of failure.
                      type: integer
                      multipleOf: 1
                      maximum: 2147483647
                      minimum: 1
                      exclusiveMaximum: false
                      exclusiveMinimum: false
                inMemoryConfiguration:
                  type: object
                  description: Cache configuration.
                  properties:
                    defaultPutExpiration:
                      description: defaultPutExpiration timeout value.
                      type: integer
                      multipleOf: 1
                      maximum: 2147483647
                      minimum: 1
                      exclusiveMaximum: false
                      exclusiveMinimum: false
                nativePersistenceConfiguration:
                  type: object
                  description: Cache configuration.
                  properties:
                    defaultPutExpiration:
                      description: defaultPutExpiration timeout value.
                      type: integer
                      multipleOf: 1
                      maximum: 2147483647
                      minimum: 1
                      default: 60
                      exclusiveMaximum: false
                      exclusiveMinimum: false
                    defaultCleanupBatchSize:
                      description: defaultCleanupBatchSize page size.
                      type: integer
                      multipleOf: 1
                      maximum: 2147483647
                      minimum: 25
                      default: 25
                      exclusiveMaximum: false
                      exclusiveMinimum: false
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - write
    put:
      summary: Updates cache configuration.
      description: Updates cache configuration.
      operationId: put-config-cache
      tags:
        - Cache Configuration
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Cache Configuration.
              properties:
                cacheProviderType:
                  description: The cacheProvider Type.
                  type: string
                  enum:
                    - IN_MEMORY
                    - MEMCACHED
                    - REDIS
                    - NATIVE_PERSISTENCE
                memcachedConfiguration:
                  description: Memcached cache configuration.
                  type: object
                  required:
                    - servers
                    - maxOperationQueueLength
                    - bufferSize
                    - defaultPutExpiration
                    - memcachedConnectionFactoryType
                  properties:
                    servers:
                      type: string
                      description: Server details separated by spaces.
                      format: url
                      minLength: 1
                    maxOperationQueueLength:
                      type: integer
                      description: Maximum operation Queue Length.
                      default: 99999999
                      multipleOf: 1
                      maximum: 2147483647
                      minimum: 1
                      exclusiveMaximum: false
                      exclusiveMinimum: false
                    bufferSize:
                      type: integer
                      description: Buffer Size.
                      default: 32768
                      multipleOf: 1
                      maximum: 2147483647
                      minimum: 1
                      exclusiveMaximum: false
                      exclusiveMinimum: false
                    defaultPutExpiration:
                      type: integer
                      description: Expiration timeout value.
                      default: 60
                      multipleOf: 1
                      maximum: 2147483647
                      minimum: 1
                      exclusiveMaximum: false
                      exclusiveMinimum: false
                    memcachedConnectionFactoryType:
                      type: string
                      description: The MemcachedConnectionFactoryType Type.
                      enum:
                        - DEFAULT
                        - BINARY
                redisConfiguration:
                  type: object
                  description: Cache Configuration
                  properties:
                    redisProviderType:
                      description: Type of connection.
                      type: string
                      enum:
                        - STANDALONE
                        - CLUSTER
                        - SHARDED
                        - SENTINEL
                    servers:
                      description: 'server details separated by comma e.g. ''server1:8080server2:8081''.'
                      type: string
                      title: servers
                      format: url
                      minLength: 3
                    password:
                      description: Redis password.
                      type: string
                      minLength: 0
                    defaultPutExpiration:
                      description: defaultPutExpiration timeout value.
                      type: integer
                      multipleOf: 1
                      maximum: 2147483647
                      minimum: 1
                      exclusiveMaximum: false
                      exclusiveMinimum: false
                    sentinelMasterGroupName:
                      description: Sentinel Master Group Name (required if SENTINEL type of connection is selected).
                      type: string
                      minLength: 1
                    useSSL:
                      description: Enable SSL communication between Gluu Server and Redis cache.
                      type: boolean
                    sslTrustStoreFilePath:
                      description: Directory Path to Trust Store.
                      type: string
                      format: url
                      minLength: 1
                    maxIdleConnections:
                      description: The cap on the number of \idle\ instances in the pool. If max idle is set too low on heavily loaded systems it is possible you will see objects being destroyed and almost immediately new objects being created. This is a result of the active threads momentarily returning objects faster than they are requesting them causing the number of idle objects to rise above max idle. The best value for max idle for heavily loaded system will vary but the default is a good starting point.
                      type: integer
                      multipleOf: 1
                      maximum: 2147483647
                      minimum: 1
                      exclusiveMaximum: false
                      exclusiveMinimum: false
                    maxTotalConnections:
                      description: The number of maximum connection instances in the pool.
                      type: integer
                      multipleOf: 1
                      maximum: 2147483647
                      minimum: 1
                      exclusiveMaximum: false
                      exclusiveMinimum: false
                    connectionTimeout:
                      description: Connection time out.
                      type: integer
                      multipleOf: 1
                      maximum: 2147483647
                      minimum: 1
                      exclusiveMaximum: false
                      exclusiveMinimum: false
                    soTimeout:
                      description: With this option set to a non-zero timeout a read() call on the InputStream associated with this Socket will block for only this amount of time. If the timeout expires a java.net.SocketTimeoutException is raised though the Socket is still valid. The option must be enabled prior to entering the blocking operation to have effect. The timeout must be > 0. A timeout of zero is interpreted as an infinite timeout.
                      type: integer
                      multipleOf: 1
                      maximum: 2147483647
                      minimum: 1
                      exclusiveMaximum: false
                      exclusiveMinimum: false
                    maxRetryAttempts:
                      description: Maximum retry attempts in case of failure.
                      type: integer
                      multipleOf: 1
                      maximum: 2147483647
                      minimum: 1
                      exclusiveMaximum: false
                      exclusiveMinimum: false
                inMemoryConfiguration:
                  type: object
                  description: Cache configuration.
                  properties:
                    defaultPutExpiration:
                      description: defaultPutExpiration timeout value.
                      type: integer
                      multipleOf: 1
                      maximum: 2147483647
                      minimum: 1
                      exclusiveMaximum: false
                      exclusiveMinimum: false
                nativePersistenceConfiguration:
                  type: object
                  description: Cache configuration.
                  properties:
                    defaultPutExpiration:
                      description: defaultPutExpiration timeout value.
                      type: integer
                      multipleOf: 1
                      maximum: 2147483647
                      minimum: 1
                      default: 60
                      exclusiveMaximum: false
                      exclusiveMinimum: false
                    defaultCleanupBatchSize:
                      description: defaultCleanupBatchSize page size.
                      type: integer
                      multipleOf: 1
                      maximum: 2147483647
                      minimum: 25
                      default: 25
                      exclusiveMaximum: false
                      exclusiveMinimum: false
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - write
  /config/cache/memcached:
    get:
      summary: Returns Memcached cache configuration.
      description: Returns Memcached cache configuration.
      operationId: get-config-cache-memcached
      tags:
        - Cache Configuration – Memcached
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Memcached cache configuration.
                required:
                  - servers
                  - maxOperationQueueLength
                  - bufferSize
                  - defaultPutExpiration
                  - memcachedConnectionFactoryType
                properties:
                  servers:
                    type: string
                    description: Server details separated by spaces.
                    format: url
                    minLength: 1
                  maxOperationQueueLength:
                    type: integer
                    description: Maximum operation Queue Length.
                    default: 99999999
                    multipleOf: 1
                    maximum: 2147483647
                    minimum: 1
                    exclusiveMaximum: false
                    exclusiveMinimum: false
                  bufferSize:
                    type: integer
                    description: Buffer Size.
                    default: 32768
                    multipleOf: 1
                    maximum: 2147483647
                    minimum: 1
                    exclusiveMaximum: false
                    exclusiveMinimum: false
                  defaultPutExpiration:
                    type: integer
                    description: Expiration timeout value.
                    default: 60
                    multipleOf: 1
                    maximum: 2147483647
                    minimum: 1
                    exclusiveMaximum: false
                    exclusiveMinimum: false
                  memcachedConnectionFactoryType:
                    type: string
                    description: The MemcachedConnectionFactoryType Type.
                    enum:
                      - DEFAULT
                      - BINARY
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - read
    post:
      summary: Adds Memcached cache configuration.
      description: Adds Memcached cache configuration.
      operationId: post-config-cache-memcached
      tags:
        - Cache Configuration – Memcached
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Memcached cache configuration.
              required:
                - servers
                - maxOperationQueueLength
                - bufferSize
                - defaultPutExpiration
                - memcachedConnectionFactoryType
              properties:
                servers:
                  type: string
                  description: Server details separated by spaces.
                  format: url
                  minLength: 1
                maxOperationQueueLength:
                  type: integer
                  description: Maximum operation Queue Length.
                  default: 99999999
                  multipleOf: 1
                  maximum: 2147483647
                  minimum: 1
                  exclusiveMaximum: false
                  exclusiveMinimum: false
                bufferSize:
                  type: integer
                  description: Buffer Size.
                  default: 32768
                  multipleOf: 1
                  maximum: 2147483647
                  minimum: 1
                  exclusiveMaximum: false
                  exclusiveMinimum: false
                defaultPutExpiration:
                  type: integer
                  description: Expiration timeout value.
                  default: 60
                  multipleOf: 1
                  maximum: 2147483647
                  minimum: 1
                  exclusiveMaximum: false
                  exclusiveMinimum: false
                memcachedConnectionFactoryType:
                  type: string
                  description: The MemcachedConnectionFactoryType Type.
                  enum:
                    - DEFAULT
                    - BINARY
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
    put:
      summary: Updates Memcached cache configuration.
      description: Updates Memcached cache configuration.
      operationId: put-config-cache-memcached
      tags:
        - Cache Configuration – Memcached
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Memcached cache configuration.
              required:
                - servers
                - maxOperationQueueLength
                - bufferSize
                - defaultPutExpiration
                - memcachedConnectionFactoryType
              properties:
                servers:
                  type: string
                  description: Server details separated by spaces.
                  format: url
                  minLength: 1
                maxOperationQueueLength:
                  type: integer
                  description: Maximum operation Queue Length.
                  default: 99999999
                  multipleOf: 1
                  maximum: 2147483647
                  minimum: 1
                  exclusiveMaximum: false
                  exclusiveMinimum: false
                bufferSize:
                  type: integer
                  description: Buffer Size.
                  default: 32768
                  multipleOf: 1
                  maximum: 2147483647
                  minimum: 1
                  exclusiveMaximum: false
                  exclusiveMinimum: false
                defaultPutExpiration:
                  type: integer
                  description: Expiration timeout value.
                  default: 60
                  multipleOf: 1
                  maximum: 2147483647
                  minimum: 1
                  exclusiveMaximum: false
                  exclusiveMinimum: false
                memcachedConnectionFactoryType:
                  type: string
                  description: The MemcachedConnectionFactoryType Type.
                  enum:
                    - DEFAULT
                    - BINARY
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  /config/cache/redis:
    get:
      summary: Returns Redis cache configuration.
      description: Returns Redis cache configuration.
      operationId: get-config-cache-redis
      tags:
        - Cache Configuration – Redis
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Cache Configuration
                properties:
                  redisProviderType:
                    description: Type of connection.
                    type: string
                    enum:
                      - STANDALONE
                      - CLUSTER
                      - SHARDED
                      - SENTINEL
                  servers:
                    description: 'server details separated by comma e.g. ''server1:8080server2:8081''.'
                    type: string
                    title: servers
                    format: url
                    minLength: 3
                  password:
                    description: Redis password.
                    type: string
                    minLength: 0
                  defaultPutExpiration:
                    description: defaultPutExpiration timeout value.
                    type: integer
                    multipleOf: 1
                    maximum: 2147483647
                    minimum: 1
                    exclusiveMaximum: false
                    exclusiveMinimum: false
                  sentinelMasterGroupName:
                    description: Sentinel Master Group Name (required if SENTINEL type of connection is selected).
                    type: string
                    minLength: 1
                  useSSL:
                    description: Enable SSL communication between Gluu Server and Redis cache.
                    type: boolean
                  sslTrustStoreFilePath:
                    description: Directory Path to Trust Store.
                    type: string
                    format: url
                    minLength: 1
                  maxIdleConnections:
                    description: The cap on the number of \idle\ instances in the pool. If max idle is set too low on heavily loaded systems it is possible you will see objects being destroyed and almost immediately new objects being created. This is a result of the active threads momentarily returning objects faster than they are requesting them causing the number of idle objects to rise above max idle. The best value for max idle for heavily loaded system will vary but the default is a good starting point.
                    type: integer
                    multipleOf: 1
                    maximum: 2147483647
                    minimum: 1
                    exclusiveMaximum: false
                    exclusiveMinimum: false
                  maxTotalConnections:
                    description: The number of maximum connection instances in the pool.
                    type: integer
                    multipleOf: 1
                    maximum: 2147483647
                    minimum: 1
                    exclusiveMaximum: false
                    exclusiveMinimum: false
                  connectionTimeout:
                    description: Connection time out.
                    type: integer
                    multipleOf: 1
                    maximum: 2147483647
                    minimum: 1
                    exclusiveMaximum: false
                    exclusiveMinimum: false
                  soTimeout:
                    description: With this option set to a non-zero timeout a read() call on the InputStream associated with this Socket will block for only this amount of time. If the timeout expires a java.net.SocketTimeoutException is raised though the Socket is still valid. The option must be enabled prior to entering the blocking operation to have effect. The timeout must be > 0. A timeout of zero is interpreted as an infinite timeout.
                    type: integer
                    multipleOf: 1
                    maximum: 2147483647
                    minimum: 1
                    exclusiveMaximum: false
                    exclusiveMinimum: false
                  maxRetryAttempts:
                    description: Maximum retry attempts in case of failure.
                    type: integer
                    multipleOf: 1
                    maximum: 2147483647
                    minimum: 1
                    exclusiveMaximum: false
                    exclusiveMinimum: false
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - read
    post:
      summary: Adds Redis cache configuration.
      description: Adds Redis cache configuration.
      operationId: post-config-cache-redis
      tags:
        - Cache Configuration – Redis
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Cache Configuration
              properties:
                redisProviderType:
                  description: Type of connection.
                  type: string
                  enum:
                    - STANDALONE
                    - CLUSTER
                    - SHARDED
                    - SENTINEL
                servers:
                  description: 'server details separated by comma e.g. ''server1:8080server2:8081''.'
                  type: string
                  title: servers
                  format: url
                  minLength: 3
                password:
                  description: Redis password.
                  type: string
                  minLength: 0
                defaultPutExpiration:
                  description: defaultPutExpiration timeout value.
                  type: integer
                  multipleOf: 1
                  maximum: 2147483647
                  minimum: 1
                  exclusiveMaximum: false
                  exclusiveMinimum: false
                sentinelMasterGroupName:
                  description: Sentinel Master Group Name (required if SENTINEL type of connection is selected).
                  type: string
                  minLength: 1
                useSSL:
                  description: Enable SSL communication between Gluu Server and Redis cache.
                  type: boolean
                sslTrustStoreFilePath:
                  description: Directory Path to Trust Store.
                  type: string
                  format: url
                  minLength: 1
                maxIdleConnections:
                  description: The cap on the number of \idle\ instances in the pool. If max idle is set too low on heavily loaded systems it is possible you will see objects being destroyed and almost immediately new objects being created. This is a result of the active threads momentarily returning objects faster than they are requesting them causing the number of idle objects to rise above max idle. The best value for max iIdle for heavily loaded system will vary but the default is a good starting point.
                  type: integer
                  multipleOf: 1
                  maximum: 2147483647
                  minimum: 1
                  exclusiveMaximum: false
                  exclusiveMinimum: false
                maxTotalConnections:
                  description: The number of maximum connection instances in the pool.
                  type: integer
                  multipleOf: 1
                  maximum: 2147483647
                  minimum: 1
                  exclusiveMaximum: false
                  exclusiveMinimum: false
                connectionTimeout:
                  description: Connection time out.
                  type: integer
                  multipleOf: 1
                  maximum: 2147483647
                  minimum: 1
                  exclusiveMaximum: false
                  exclusiveMinimum: false
                soTimeout:
                  description: With this option set to a non-zero timeout a read() call on the InputStream associated with this Socket will block for only this amount of time. If the timeout expires a java.net.SocketTimeoutException is raised though the Socket is still valid. The option must be enabled prior to entering the blocking operation to have effect. The timeout must be > 0. A timeout of zero is interpreted as an infinite timeout.
                  type: integer
                  multipleOf: 1
                  maximum: 2147483647
                  minimum: 1
                  exclusiveMaximum: false
                  exclusiveMinimum: false
                maxRetryAttempts:
                  description: Maximum retry attempts in case of failure.
                  type: integer
                  multipleOf: 1
                  maximum: 2147483647
                  minimum: 1
                  exclusiveMaximum: false
                  exclusiveMinimum: false
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - write
    put:
      summary: Updates Redis cache configuration.
      description: Updates Redis cache configuration.
      operationId: put-config-cache-redis
      tags:
        - Cache Configuration – Redis
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Cache Configuration
              properties:
                redisProviderType:
                  description: Type of connection.
                  type: string
                  enum:
                    - STANDALONE
                    - CLUSTER
                    - SHARDED
                    - SENTINEL
                servers:
                  description: 'server details separated by comma e.g. ''server1:8080server2:8081''.'
                  type: string
                  title: servers
                  format: url
                  minLength: 3
                password:
                  description: Redis password.
                  type: string
                  minLength: 0
                defaultPutExpiration:
                  description: defaultPutExpiration timeout value.
                  type: integer
                  multipleOf: 1
                  maximum: 2147483647
                  minimum: 1
                  exclusiveMaximum: false
                  exclusiveMinimum: false
                sentinelMasterGroupName:
                  description: Sentinel Master Group Name (required if SENTINEL type of connection is selected).
                  type: string
                  minLength: 1
                useSSL:
                  description: Enable SSL communication between Gluu Server and Redis cache.
                  type: boolean
                sslTrustStoreFilePath:
                  description: Directory Path to Trust Store.
                  type: string
                  format: url
                  minLength: 1
                maxIdleConnections:
                  description: The cap on the number of \idle\ instances in the pool. If max idle is set too low on heavily loaded systems it is possible you will see objects being destroyed and almost immediately new objects being created. This is a result of the active threads momentarily returning objects faster than they are requesting them causing the number of idle objects to rise above max idle. The best value for max idle for heavily loaded system will vary but the default is a good starting point.
                  type: integer
                  multipleOf: 1
                  maximum: 2147483647
                  minimum: 1
                  exclusiveMaximum: false
                  exclusiveMinimum: false
                maxTotalConnections:
                  description: The number of maximum connection instances in the pool.
                  type: integer
                  multipleOf: 1
                  maximum: 2147483647
                  minimum: 1
                  exclusiveMaximum: false
                  exclusiveMinimum: false
                connectionTimeout:
                  description: Connection time out.
                  type: integer
                  multipleOf: 1
                  maximum: 2147483647
                  minimum: 1
                  exclusiveMaximum: false
                  exclusiveMinimum: false
                soTimeout:
                  description: With this option set to a non-zero timeout a read() call on the InputStream associated with this Socket will block for only this amount of time. If the timeout expires a java.net.SocketTimeoutException is raised though the Socket is still valid. The option must be enabled prior to entering the blocking operation to have effect. The timeout must be > 0. A timeout of zero is interpreted as an infinite timeout.
                  type: integer
                  multipleOf: 1
                  maximum: 2147483647
                  minimum: 1
                  exclusiveMaximum: false
                  exclusiveMinimum: false
                maxRetryAttempts:
                  description: Maximum retry attempts in case of failure.
                  type: integer
                  multipleOf: 1
                  maximum: 2147483647
                  minimum: 1
                  exclusiveMaximum: false
                  exclusiveMinimum: false
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - write
  /config/cache/in-memory:
    get:
      summary: Returns in-Memory cache configuration.
      description: Returns in-Memory cache configuration.
      operationId: get-config-cache-in-memory
      tags:
        - Cache Configuration – in-Memory
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Cache configuration.
                properties:
                  defaultPutExpiration:
                    description: defaultPutExpiration timeout value.
                    type: integer
                    multipleOf: 1
                    maximum: 2147483647
                    minimum: 1
                    exclusiveMaximum: false
                    exclusiveMinimum: false
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - read
    post:
      summary: Adds in-Memory cache configuration.
      description: Adds in-Memory cache configuration.
      operationId: post-config-cache-in-memory
      tags:
        - Cache Configuration – in-Memory
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Cache configuration.
              properties:
                defaultPutExpiration:
                  description: defaultPutExpiration timeout value.
                  type: integer
                  multipleOf: 1
                  maximum: 2147483647
                  minimum: 1
                  exclusiveMaximum: false
                  exclusiveMinimum: false
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - write
    put:
      summary: Updates in-Memory cache configuration.
      description: Updates in-Memory cache configuration.
      operationId: put-config-cache-in-memory
      tags:
        - Cache Configuration – in-Memory
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Cache configuration.
              properties:
                defaultPutExpiration:
                  description: defaultPutExpiration timeout value.
                  type: integer
                  multipleOf: 1
                  maximum: 2147483647
                  minimum: 1
                  exclusiveMaximum: false
                  exclusiveMinimum: false
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - write
  /config/cache/native-persistence:
    get:
      summary: Returns native persistence cache configuration.
      description: Returns native persistence cache configuration.
      operationId: get-config-cache-native-persistence
      tags:
        - Cache Configuration – Native-Persistence
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Cache configuration.
                properties:
                  defaultPutExpiration:
                    description: defaultPutExpiration timeout value.
                    type: integer
                    multipleOf: 1
                    maximum: 2147483647
                    minimum: 1
                    default: 60
                    exclusiveMaximum: false
                    exclusiveMinimum: false
                  defaultCleanupBatchSize:
                    description: defaultCleanupBatchSize page size.
                    type: integer
                    multipleOf: 1
                    maximum: 2147483647
                    minimum: 25
                    default: 25
                    exclusiveMaximum: false
                    exclusiveMinimum: false
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - read
    post:
      summary: Adds native persistence cache configuration.
      description: Adds native persistence cache configuration.
      operationId: post-config-cache-native-persistence
      tags:
        - Cache Configuration – Native-Persistence
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Cache configuration.
              properties:
                defaultPutExpiration:
                  description: defaultPutExpiration timeout value.
                  type: integer
                  multipleOf: 1
                  maximum: 2147483647
                  minimum: 1
                  default: 60
                  exclusiveMaximum: false
                  exclusiveMinimum: false
                defaultCleanupBatchSize:
                  description: defaultCleanupBatchSize page size.
                  type: integer
                  multipleOf: 1
                  maximum: 2147483647
                  minimum: 25
                  default: 25
                  exclusiveMaximum: false
                  exclusiveMinimum: false
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - write
    put:
      summary: Updates native persistence cache configuration.
      description: Updates native persistence cache configuration.
      operationId: put-config-cache-native-persistence
      tags:
        - Cache Configuration – Native-Persistence
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Cache configuration.
              properties:
                defaultPutExpiration:
                  description: defaultPutExpiration timeout value.
                  type: integer
                  multipleOf: 1
                  maximum: 2147483647
                  minimum: 1
                  default: 60
                  exclusiveMaximum: false
                  exclusiveMinimum: false
                defaultCleanupBatchSize:
                  description: defaultCleanupBatchSize page size.
                  type: integer
                  multipleOf: 1
                  maximum: 2147483647
                  minimum: 25
                  default: 25
                  exclusiveMaximum: false
                  exclusiveMinimum: false
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - write
  /config/smtp:
    get:
      summary: Returns SMTP server configuration.
      description: Returns SMTP server configuration.
      operationId: get-config-smtp
      tags:
        - Configuration – SMTP
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: SMTP configuration.
                properties:
                  host:
                    description: Hostname of the SMTP server.
                    type: string
                    format: url
                  port:
                    description: Port number of the SMTP server.
                    type: integer
                    multipleOf: 1
                  requires-ssl:
                    description: 'Boolean value with default value false. If true, SSL will be enabled.'
                    type: boolean
                  trust-host:
                    type: boolean
                    description: Boolean value with default value false.
                  from-name:
                    description: Name of the sender.
                    type: string
                  from-email-address:
                    description: Email Address of the Sender.
                    type: string
                  requires-authentication:
                    description: Boolean value with default value false. It true it will enable sender authentication.
                    type: boolean
                  user-name:
                    description: Username of the SMTP.
                    type: string
                  password:
                    description: Password for the SMTP.
                    type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - read
    post:
      summary: Adds SMTP server configuration.
      description: Adds SMTP server configuration.
      operationId: post-config-smtp
      tags:
        - Configuration – SMTP
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SMTP configuration.
              properties:
                host:
                  description: Hostname of the SMTP server.
                  type: string
                  format: url
                port:
                  description: Port number of the SMTP server.
                  type: integer
                  multipleOf: 1
                requires-ssl:
                  description: 'Boolean value with default value false. If true, SSL will be enabled.'
                  type: boolean
                trust-host:
                  type: boolean
                  description: Boolean value with default value false.
                from-name:
                  description: Name of the sender.
                  type: string
                from-email-address:
                  description: Email Address of the Sender.
                  type: string
                requires-authentication:
                  description: Boolean value with default value false. It true it will enable sender authentication.
                  type: boolean
                user-name:
                  description: Username of the SMTP.
                  type: string
                password:
                  description: Password for the SMTP.
                  type: string
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - write
    put:
      summary: Updates SMTP server configuration.
      description: Updates SMTP server configuration.
      operationId: put-config-smtp
      tags:
        - Configuration – SMTP
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SMTP configuration.
              properties:
                host:
                  description: Hostname of the SMTP server.
                  type: string
                  format: url
                port:
                  description: Port number of the SMTP server.
                  type: integer
                  multipleOf: 1
                requires-ssl:
                  description: 'Boolean value with default value false. If true, SSL will be enabled.'
                  type: boolean
                trust-host:
                  type: boolean
                  description: Boolean value with default value false.
                from-name:
                  description: Name of the sender.
                  type: string
                from-email-address:
                  description: Email Address of the Sender.
                  type: string
                requires-authentication:
                  description: Boolean value with default value false. It true it will enable sender authentication.
                  type: boolean
                user-name:
                  description: Username of the SMTP.
                  type: string
                password:
                  description: Password for the SMTP.
                  type: string
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - write
    delete:
      summary: Deletes SMTP server configuration.
      description: Deletes SMTP server configuration.
      operationId: delete-config-smtp
      tags:
        - Configuration – SMTP
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - write
  /oauth/scopes:
    get:
      tags:
        - OAuth - OpenID Connect - Scopes
      summary: Gets list of scope description.
      description: Gets list of scope description.
      operationId: get-oauth-openid-scopes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: Scope description list.
                description: List of scope description.
                type: array
                items:
                  type: object
                  description: Scope
                  required:
                    - id
                    - name
                  properties:
                    dn:
                      type: string
                    id:
                      description: The base64url encoded id.
                      type: string
                    inum:
                      description: Unique id identifying the attribute
                      type: string
                    displayName:
                      description: A human-readable name of the scope.
                      type: string
                    description:
                      description: A human-readable string describing the scope.
                      type: string
                    defaultScope:
                      description: Boolean value to specify default scope.
                      type: boolean
                    scopeType:
                      description: The scopes type associated with Access Tokens determine what resources will.
                      type: string
                      enum:
                        - OpenID
                        - Dynamic
                        - OAuth
                    claims:
                      description: Claim attributes associated with the scope.
                      type: array
                      items:
                        type: object
                        title: GluuAttribute
                        properties:
                          inum:
                            description: Unique id identifying the attribute.
                            type: string
                          name:
                            description: Name of the attribute.
                            type: string
                            example: 'name, displayName, birthdate, email'
                          displayName:
                            description: A human-readable name of the attribute.
                            type: string
                          description:
                            description: User friendly descriptive detail of attribute.
                            type: string
                          origin:
                            description: Origin of claim attribute.
                            type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - read
    post:
      tags:
        - OAuth - OpenID Connect - Scopes
      summary: Adds new scope description.
      description: Adds new scope description.
      operationId: post-oauth-openid-scopes
      requestBody:
        content:
          application/json:
            schema:
              title: Scope
              required:
                - id
                - name
              properties:
                dn:
                  type: string
                id:
                  description: The base64url encoded id.
                  type: string
                inum:
                  description: Unique id identifying the attribute
                  type: string
                displayName:
                  description: A human-readable name of the scope.
                  type: string
                description:
                  description: A human-readable string describing the scope.
                  type: string
                defaultScope:
                  description: Boolean value to specify default scope.
                  type: boolean
                scopeType:
                  description: The scopes type associated with Access Tokens determine what resources will.
                  type: string
                  enum:
                    - OpenID
                    - Dynamic
                    - OAuth
                claims:
                  description: Claim attributes associated with the scope.
                  type: array
                  items:
                    type: object
                    title: GluuAttribute
                    properties:
                      inum:
                        description: Unique id identifying the attribute.
                        type: string
                      name:
                        description: Name of the attribute.
                        type: string
                        example: 'name, displayName, birthdate, email'
                      displayName:
                        description: A human-readable name of the attribute.
                        type: string
                      description:
                        description: User friendly descriptive detail of attribute.
                        type: string
                      origin:
                        description: Origin of claim attribute.
                        type: string
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - write
    put:
      tags:
        - OAuth - OpenID Connect - Scopes
      summary: Updates scope description.
      description: Updates scope description.
      operationId: put-oauth-openid-scopes
      requestBody:
        content:
          application/json:
            schema:
              title: Scope
              required:
                - id
                - name
              properties:
                dn:
                  type: string
                id:
                  description: The base64url encoded id.
                  type: string
                inum:
                  description: Unique id identifying the attribute
                  type: string
                displayName:
                  description: A human-readable name of the scope.
                  type: string
                description:
                  description: A human-readable string describing the scope.
                  type: string
                defaultScope:
                  description: Boolean value to specify default scope.
                  type: boolean
                scopeType:
                  description: The scopes type associated with Access Tokens determine what resources will.
                  type: string
                  enum:
                    - OpenID
                    - Dynamic
                    - OAuth
                claims:
                  description: Claim attributes associated with the scope.
                  type: array
                  items:
                    type: object
                    title: GluuAttribute
                    properties:
                      inum:
                        description: Unique id identifying the attribute.
                        type: string
                      name:
                        description: Name of the attribute.
                        type: string
                        example: 'name, displayName, birthdate, email'
                      displayName:
                        description: A human-readable name of the attribute.
                        type: string
                      description:
                        description: User friendly descriptive detail of attribute.
                        type: string
                      origin:
                        description: Origin of claim attribute.
                        type: string
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - write
  '/oauth/scopes/{id}':
    parameters:
      - name: id
        in: path
        required: true
        description: Scope ID.
        schema:
          type: string
    get:
      tags:
        - OAuth - OpenID Connect - Scopes
      summary: Gets scope description with specified id.
      description: Gets scope description with specified id.
      operationId: get-oauth-openid-scopes-by-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: Scope
                required:
                  - id
                  - name
                properties:
                  dn:
                    type: string
                  id:
                    description: The base64url encoded id.
                    type: string
                  inum:
                    description: Unique id identifying the attribute
                    type: string
                  displayName:
                    description: A human-readable name of the scope.
                    type: string
                  description:
                    description: A human-readable string describing the scope.
                    type: string
                  defaultScope:
                    description: Boolean value to specify default scope.
                    type: boolean
                  scopeType:
                    description: The scopes type associated with Access Tokens determine what resources will.
                    type: string
                    enum:
                      - OpenID
                      - Dynamic
                      - OAuth
                  claims:
                    description: Claim attributes associated with the scope.
                    type: array
                    items:
                      type: object
                      title: GluuAttribute
                      properties:
                        inum:
                          description: Unique id identifying the attribute.
                          type: string
                        name:
                          description: Name of the attribute.
                          type: string
                          example: 'name, displayName, birthdate, email'
                        displayName:
                          description: A human-readable name of the attribute.
                          type: string
                        description:
                          description: User friendly descriptive detail of attribute.
                          type: string
                        origin:
                          description: Origin of claim attribute.
                          type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - read
    delete:
      tags:
        - OAuth - OpenID Connect - Scopes
      summary: Deletes scope description with specified id.
      description: Deletes scope description with specified id.
      operationId: delete-oauth-openid-scopes-by-id
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - write
  /oauth/scopes/search:
    parameters:
      - name: pattern
        in: query
        required: true
        description: Search pattern.
        schema:
          type: string
      - name: size
        in: query
        required: false
        description: Search size - max size of the results to return.
        schema:
          type: integer
    get:
      tags:
        - OAuth - OpenID Connect - Scopes
      summary: Searches scope description by pattern.
      description: Searches scope description by pattern.
      operationId: get-oauth-openid-scopes-search-by-pattern
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: Scope description list.
                description: List of scope description.
                type: array
                items:
                  type: object
                  description: Scope
                  required:
                    - id
                    - name
                  properties:
                    dn:
                      type: string
                    id:
                      description: The base64url encoded id.
                      type: string
                    inum:
                      description: Unique id identifying the attribute
                      type: string
                    displayName:
                      description: A human-readable name of the scope.
                      type: string
                    description:
                      description: A human-readable string describing the scope.
                      type: string
                    defaultScope:
                      description: Boolean value to specify default scope.
                      type: boolean
                    scopeType:
                      description: The scopes type associated with Access Tokens determine what resources will.
                      type: string
                      enum:
                        - OpenID
                        - Dynamic
                        - OAuth
                    claims:
                      description: Claim attributes associated with the scope.
                      type: array
                      items:
                        type: object
                        title: GluuAttribute
                        properties:
                          inum:
                            description: Unique id identifying the attribute.
                            type: string
                          name:
                            description: Name of the attribute.
                            type: string
                            example: 'name, displayName, birthdate, email'
                          displayName:
                            description: A human-readable name of the attribute.
                            type: string
                          description:
                            description: User friendly descriptive detail of attribute.
                            type: string
                          origin:
                            description: Origin of claim attribute.
                            type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - read
  /oauth/scopes/search-limit:
    parameters:
      - name: size
        in: query
        required: true
        description: Search size - max size of the results to return.
        schema:
          type: integer
    get:
      tags:
        - OAuth - OpenID Connect - Scopes
      summary: Gets scope description list with search result limited with specified max size.
      description: Gets scope description list with search result limited with specified max size.
      operationId: get-oauth-openid-scopes-search-limit
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: Scope description list.
                description: List of scope description.
                type: array
                items:
                  type: object
                  description: Scope
                  required:
                    - id
                    - name
                  properties:
                    dn:
                      type: string
                    id:
                      description: The base64url encoded id.
                      type: string
                    inum:
                      description: Unique id identifying the attribute
                      type: string
                    displayName:
                      description: A human-readable name of the scope.
                      type: string
                    description:
                      description: A human-readable string describing the scope.
                      type: string
                    defaultScope:
                      description: Boolean value to specify default scope.
                      type: boolean
                    scopeType:
                      description: The scopes type associated with Access Tokens determine what resources will.
                      type: string
                      enum:
                        - OpenID
                        - Dynamic
                        - OAuth
                    claims:
                      description: Claim attributes associated with the scope.
                      type: array
                      items:
                        type: object
                        title: GluuAttribute
                        properties:
                          inum:
                            description: Unique id identifying the attribute.
                            type: string
                          name:
                            description: Name of the attribute.
                            type: string
                            example: 'name, displayName, birthdate, email'
                          displayName:
                            description: A human-readable name of the attribute.
                            type: string
                          description:
                            description: User friendly descriptive detail of attribute.
                            type: string
                          origin:
                            description: Origin of claim attribute.
                            type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - read
  /config/logs:
    get:
      tags:
        - Configuration – Logs
      summary: Returns oxAuth Log configuration.
      description: Returns oxAuth Log configuration.
      operationId: get-config-logs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  type: object
                  description: Log configuration.
                  properties:
                    log_location:
                      description: External log location.
                      type: string
                    log_level:
                      description: Allows to filter the category of messages to be logged.
                      type: string
                      enum:
                        - Trace - All messages
                        - Debug - Debug level and above
                        - Info - Informational level and above
                        - Warn - Warning level and above
                        - Error - Error level and above
                        - Fatal - Only fatal errors
                        - off - Logging is disabled
                    log_layout:
                      description: Defines the pattern of log format.
                      type: string
                      example: 'Date, time, spacing, line number, etc.'
                    http_logging_enabled:
                      description: To enable/disable http logging.
                      type: boolean
                    jdk_logging_enabled:
                      description: To enable/disable Jdk logging.
                      type: boolean
                    oauth_audit_logging_enabled:
                      description: To enable/disable OAuth audit logging.
                      type: boolean
                    log_templates:
                      description: Defines the log template to apply.
                      type: array
                      items:
                        type: object
                        properties:
                          value1:
                            type: string
                          value2:
                            type: string
                          description:
                            type: string
                          hide:
                            type: boolean
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - read
    post:
      tags:
        - Configuration – Logs
      summary: Adds oxAuth Log configuration.
      description: Adds oxAuth Log configuration.
      operationId: post-config-logs
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: object
                description: Log configuration.
                properties:
                  log_location:
                    description: External log location.
                    type: string
                  log_level:
                    description: Allows to filter the category of messages to be logged.
                    type: string
                    enum:
                      - Trace - All messages
                      - Debug - Debug level and above
                      - Info - Informational level and above
                      - Warn - Warning level and above
                      - Error - Error level and above
                      - Fatal - Only fatal errors
                      - off - Logging is disabled
                  log_layout:
                    description: Defines the pattern of log format.
                    type: string
                    example: 'Date, time, spacing, line number, etc.'
                  http_logging_enabled:
                    description: To enable/disable http logging.
                    type: boolean
                  jdk_logging_enabled:
                    description: To enable/disable Jdk logging.
                    type: boolean
                  oauth_audit_logging_enabled:
                    description: To enable/disable OAuth audit logging.
                    type: boolean
                  log_templates:
                    description: Defines the log template to apply.
                    type: array
                    items:
                      type: object
                      properties:
                        value1:
                          type: string
                        value2:
                          type: string
                        description:
                          type: string
                        hide:
                          type: boolean
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - write
    put:
      tags:
        - Configuration – Logs
      summary: Updates oxAuth Log configuration.
      description: Updates oxAuth Log configuration.
      operationId: put-config-logs
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: object
                description: Log configuration.
                properties:
                  log_location:
                    description: External log location.
                    type: string
                  log_level:
                    description: Allows to filter the category of messages to be logged.
                    type: string
                    enum:
                      - Trace - All messages
                      - Debug - Debug level and above
                      - Info - Informational level and above
                      - Warn - Warning level and above
                      - Error - Error level and above
                      - Fatal - Only fatal errors
                      - off - Logging is disabled
                  log_layout:
                    description: Defines the pattern of log format.
                    type: string
                    example: 'Date, time, spacing, line number, etc.'
                  http_logging_enabled:
                    description: To enable/disable http logging.
                    type: boolean
                  jdk_logging_enabled:
                    description: To enable/disable Jdk logging.
                    type: boolean
                  oauth_audit_logging_enabled:
                    description: To enable/disable OAuth audit logging.
                    type: boolean
                  log_templates:
                    description: Defines the log template to apply.
                    type: array
                    items:
                      type: object
                      properties:
                        value1:
                          type: string
                        value2:
                          type: string
                        description:
                          type: string
                        hide:
                          type: boolean
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - write
  /config/logs/all:
    get:
      tags:
        - Configuration – Logs
      summary: Gets all oxAuth log files.
      description: Gets all oxAuth log files.
      operationId: get-config-logs-all
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  type: array
                  items:
                    type: object
                    description: Log file.
                    properties:
                      log_file:
                        type: string
                        format: binary
                      log_location:
                        description: Log file location.
                        type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - read
  '/config/logs/{name}':
    parameters:
      - schema:
          type: string
          minLength: 1
        name: name
        in: path
        description: Name of the log file.
        required: true
    get:
      tags:
        - Configuration – Logs
      summary: Gets specified oxAuth log file by name.
      description: Gets specified oxAuth log file by name.
      operationId: get-config-logs-by-name
      responses:
        '200':
          description: OK
          content:
            image/x-icon:
              schema:
                items:
                  type: object
                  description: Log file.
                  properties:
                    log_file:
                      type: string
                      format: binary
                    log_location:
                      description: Log file location.
                      type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - read
  /config/jwks:
    get:
      tags:
        - Configuration – JWK - JSON Web Key Set (JWKs)
      summary: Gets list of JSON Web Key (JWK) used by server.
      description: 'Gets list of JSON Web Key (JWK) used by server. JWK is a JSON data structure that represents a set of public keys as a JSON object [RFC4627].'
      operationId: get-config-jwks
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: WebKeysConfiguration
                required:
                  - keys
                type: object
                description: 'JSON Web Key Set (JWKS) - A JSON object that represents a set of JWKs. The JSON object MUST have a keys member, which is an array of JWKs.'
                properties:
                  keys:
                    type: array
                    description: 'List of JSON Web Key (JWK) - A JSON object that represents a cryptographic key. The members of the object represent properties of the key, including its value.'
                    items:
                      $ref: '#/components/schemas/JsonWebKey'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
    post:
      tags:
        - Configuration – JWK - JSON Web Key Set (JWKs)
      summary: Adds a new JSON Web Key (JWK).
      description: Adds a new JSON Web Key (JWK).
      operationId: post-config-jwks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonWebKey'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  '/config/jwks/{id}':
    parameters:
      - name: id
        in: path
        required: true
        description: Key ID.
        schema:
          type: string
    get:
      tags:
        - Configuration – JWK - JSON Web Key Set (JWKs)
      summary: Gets the specified JSON Web Key (JWK).
      description: Gets the specified JSON Web Key (JWK).
      operationId: get-config-jwks-by-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - read
    put:
      tags:
        - Configuration – JWK - JSON Web Key Set (JWKs)
      summary: Updates JSON Web Key (JWK).
      description: Updates JSON Web Key (JWK).
      operationId: put-config-jwks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonWebKey'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
    delete:
      tags:
        - Configuration – JWK - JSON Web Key Set (JWKs)
      summary: Deletes the specified JSON Web Key (JWK).
      description: Deletes the specified JSON Web Key (JWK).
      operationId: delete-config-jwks
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - oxAuth:
            - write
  /oauth/clients:
    get:
      tags:
        - OAuth - OpenID Connect - Clients
      summary: Gets list of OpenID connect clients.
      description: Gets list of OpenID connect clients.
      operationId: get-oauth-openid-clients
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: Clients.
                description: List of clients.
                type: array
                items:
                  type: object
                  description: Client Details.
                  properties:
                    inum:
                      description: XRI i-number. Client Identifier to uniquely identify the client.
                      type: string
                    display_Name:
                      description: A human-readable name of the client.
                      type: string
                    description:
                      description: A human-readable string describing the client.
                      type: string
                    application_type:
                      description: 'Kind of the application. The default, if omitted, is web. The defined values are native or web. Web Clients using the OAuth Implicit Grant Type must only register URLs using the HTTPS scheme as redirect_uris, they must not use localhost as the hostname. Native Clients must only register redirect_uris using custom URI schemes or URLs using the http scheme with localhost as the hostname.'
                      type: string
                      enum:
                        - Web
                        - Native
                    contacts:
                      description: e-mail addresses of people responsible for this Client.
                      type: array
                      items:
                        type: string
                    redirect_uris:
                      description: Redirection URI values used by the Client. One of these registered Redirection URI values must exactly match the redirect_uri parameter value used in each Authorization Request
                      type: array
                      items:
                        type: string
                      example:
                        - 'https://client.example.org/cb'
                    post_logout_redirect_uris:
                      description: Provide the URLs supplied by the RP to request that the user be redirected to this location after a logout has been performed.
                      type: array
                      items:
                        type: string
                      example:
                        - 'https://client.example.org/logout/page1'
                        - 'https://client.example.org/logout/page2'
                        - 'https://client.example.org/logout/page3'
                    scope:
                      description: Provide list of scopes granted to the client.
                      type: array
                      items:
                        type: string
                      example:
                        - read write dolphin
                    claims:
                      description: Provide list of claims granted to the client.
                      type: array
                      items:
                        type: string
                        description: String containing a space-separated list of claims that can be requested individually.
                    client_secret:
                      type: string
                      description: The client secret.  The client MAY omit the parameter if the client secret is an empty string.
                    password:
                      type: string
                      description: User password.
                    associated_persons:
                      description: List of associated persons.
                      type: array
                      items:
                        type: string
                        description: Reference the DN of a person.
                    trusted_client:
                      description: Attribute which corresponds to the "Pre-Authorization" property. Default value is false.
                      type: boolean
                    response_types:
                      description: 'A list of the OAuth 2.0 response_type values that the Client is declaring that it will restrict itself to using. If omitted, the default is that the Client will use only the code Response Type. Allowed values are code, token, id_token.'
                      type: array
                      items:
                        type: string
                        enum:
                          - CODE
                          - TOKEN
                          - ID_TOKEN
                    grant_types:
                      description: A list of the OAuth 2.0 Grant Types that the Client is declaring that it will restrict itself to using.
                      type: array
                      items:
                        type: string
                        enum:
                          - AUTHORIZATION_CODE
                          - IMPLICIT
                          - RESOURCE_OWNER_PASSWORD_CREDENTIALS
                          - CLIENT_CREDENTIALS
                          - REFRESH_TOKEN
                          - OXAUTH_UMA_TICKET
                          - CIBA
                          - DEVICE_CODE
                    logo_uri:
                      description: URL that references a logo for the Client application.
                      type: string
                    client_uri:
                      description: URL of the home page of the Client. The value of this field must point to a valid Web page.
                      type: string
                    policy_uri:
                      description: URL that the Relying Party Client provides to the End-User to read about the how the profile data will be used.
                      type: string
                    tos_uri:
                      description: URL that the Relying Party Client provides to the End-User to read about the Relying Party's terms of service.
                      type: string
                    jwks_uri:
                      description: 'URL for the Client''s JSON Web Key Set (JWK) document containing key(s) that are used for signing requests to the OP. The JWK Set may also contain the Client''s encryption keys(s) that are used by the OP to encrypt the responses to the Client. When both signing and encryption keys are made available, a use (Key Use) parameter value is required for all keys in the document to indicate each key''s intended usage.'
                      type: string
                    jwks:
                      description: 'List of JSON Web Key (JWK) - A JSON object that represents a cryptographic key. The members of the object represent properties of the key, including its value.'
                      type: array
                      items:
                        $ref: '#/components/schemas/JsonWebKey'
                      example: '{ "keys" : [ { "e" : "AQAB", "n" : "gmlDX_mgMcHX.." ] }'
                    sector_identifier_uri:
                      description: URL using the https scheme to be used in calculating Pseudonymous Identifiers by the OP.
                      type: string
                    subject_type:
                      description: Subject type requested for the Client ID. Valid types include pairwise and public.
                      type: string
                      enum:
                        - PAIRWISE
                        - PUBLIC
                    id_token_token_binding_cnf:
                      description: 'Specifies the JWT Confirmation Method member name (e.g. tbh) that the Relying Party expects when receiving Token Bound ID Tokens. The presence of this parameter indicates that the Relying Party supports Token Binding of ID Tokens. If omitted, the default is that the Relying Party does not support Token Binding of ID Tokens.'
                      type: string
                    rpt_as_jwt:
                      description: Specifies whether RPT should be return as signed JWT.
                      type: boolean
                    access_token_as_jwt:
                      description: Specifies whether access token as signed JWT.
                      type: boolean
                    access_token_signing_alg:
                      description: 'Specifies signing algorithm that has to be used during JWT signing. If it''s not specified, then the default OP signing algorithm will be used.'
                      type: string
                      enum:
                        - HS256
                        - HS384
                        - HS512
                        - RS256
                        - RS384
                        - RS512
                        - ES256
                        - ES384
                        - ES512
                        - PS256
                        - PS384
                        - PS512
                    id_token_signed_response_alg:
                      description: JWS alg algorithm (JWA) required for signing the ID Token issued to this Client.
                      type: string
                      enum:
                        - HS256 - HS384 - HS512 - RS256 - RS384 - RS512 - ES256 - ES384 - ES512 - PS256 - PS384 - PS512
                    id_token_encrypted_response_alg:
                      description: JWE alg algorithm (JWA) required for encrypting the ID Token issued to this Client.
                      type: string
                      enum:
                        - RSA1_5
                        - RSA-OAEP
                        - A128KW
                        - A256KW
                    id_token_encrypted_response_enc:
                      description: JWE enc algorithm (JWA) required for encrypting the ID Token issued to this Client.
                      type: string
                      enum:
                        - A128CBC+HS256
                        - A256CBC+HS512
                        - A128GCM
                        - A256GCM
                    userinfo_signed_response_alg:
                      description: JWS alg algorithm (JWA) required for signing UserInfo Responses.
                      type: string
                      enum:
                        - HS256
                        - HS384
                        - HS512
                        - RS256
                        - RS384
                        - RS512
                        - ES256
                        - ES384
                        - ES512
                        - PS256
                        - PS384
                        - PS512
                    userinfo_encrypted_response_alg:
                      description: JWE alg algorithm (JWA) required for encrypting UserInfo Responses.
                      type: string
                      enum:
                        - RSA1_5
                        - RSA-OAEP
                        - A128KW
                        - A256KW
                    userinfo_encrypted_response_enc:
                      description: JWE enc algorithm (JWA) required for encrypting UserInfo Responses.
                      type: string
                      enum:
                        - A128CBC+HS256
                        - A256CBC+HS512
                        - A128GCM
                        - A256GCM
                    request_object_signing_alg:
                      description: JWS alg algorithm (JWA) that must be used for signing Request Objects sent to the OP.
                      type: string
                      enum:
                        - HS256
                        - HS384
                        - HS512
                        - RS256
                        - RS384
                        - RS512
                        - ES256
                        - ES384
                        - ES512
                        - PS256
                        - PS384
                        - PS512
                    request_object_encryption_alg:
                      description: JWE alg algorithm (JWA) the RP is declaring that it may use for encrypting Request Objects sent to the OP.
                      type: string
                      enum:
                        - RSA1_5
                        - RSA-OAEP
                        - A128KW
                        - A256KW
                    request_object_encryption_enc:
                      description: JWE enc algorithm (JWA) the RP is declaring that it may use for encrypting Request Objects sent to the OP.
                      type: string
                      enum:
                        - A128CBC+HS256
                        - A256CBC+HS512
                        - A128GCM
                        - A256GCM
                    token_endpoint_auth_method:
                      description: Requested Client Authentication method for the Token Endpoint.
                      type: string
                      enum:
                        - client_secret_basic
                        - client_secret_post
                        - client_secret_jwt
                        - private_key_jwt
                        - none
                    token_endpoint_auth_signing_alg:
                      description: JWS alg algorithm (JWA) that must be used for signing the JWT used to authenticate the Client at the Token Endpoint for the private_key_jwt and client_secret_jwt authentication methods.
                      type: string
                      enum:
                        - HS256
                        - HS384
                        - HS512
                        - RS256
                        - RS384
                        - RS512
                        - ES256
                        - ES384
                        - ES512
                        - PS256
                        - PS384
                        - PS512
                    default_max_age:
                      description: Specifies the Default Maximum Authentication Age.
                      type: integer
                      format: int32
                      example: 1000000
                    require_auth_time:
                      description: Boolean value specifying whether the auth_time Claim in the ID Token is required. It is required when the value is true.
                      type: boolean
                    claims_redirect_uri:
                      description: Array of The Claims Redirect URIs to which the client wishes the authorization server to direct the requesting party's user agent after completing its interaction.
                      type: array
                      items:
                        type: string
                    logout_uri:
                      description: Specifies the URI using the https scheme that the authorization server can call to initiate a login at the client.
                      type: array
                      items:
                        type: string
                    logout_session_required:
                      description: 'Boolean value specifying whether the RP requires that a session ID query parameter be included to identify the RP session at the OP when the logout_uri is used. If omitted, the default value is false.'
                      type: boolean
                    persist_client_authorizations:
                      description: Specifies if the client authorization details are to be persisted. Default value is true.
                      type: boolean
                    include_claims_in_id_token:
                      description: 'If true then claims are included in token id, default value is false.'
                      type: boolean
                    refresh_token_lifetime:
                      description: Specifies the Client-specific refresh token expiration.
                      type: integer
                      format: int32
                      example: 100000000
                    access_token_lifetime:
                      description: Specifies the Client-specific access token expiration.
                      type: integer
                      format: int32
                      example: 100000000
                    default_acr_values:
                      description: Array of default requested Authentication Context Class Reference values that the Authorization Server must use for processing requests from the Client.
                      type: array
                      items:
                        type: string
                    initiate_login_uri:
                      description: Specifies the URI using the https scheme that the authorization server can call to initiate a login at the client.
                      type: string
                    exp:
                      description: 'Integer timestamp, measured in the number of seconds since January 1 1970 UTC, indicating when this permission will expire.'
                      type: string
                      format: date
                    request_uris:
                      description: Provide a list of requests_uri values that are pre-registered by the Client for use at the Authorization Server.
                      type: array
                      items:
                        type: string
                    authorized_origins:
                      description: Specifies authorized JavaScript origins.
                      type: array
                      items:
                        type: string
                    software_id:
                      description: Specifies a unique identifier string (UUID) assigned by the client developer or software publisher used by registration endpoints to identify the client software to be dynamically registered.
                      type: string
                      example: 4NRB1-0XZABZI9E6-5SM3R
                    software_version:
                      description: Specifies a version identifier string for the client software identified by 'software_id'. The value of the 'software_version' should change on any update to the client software identified by the same 'software_id'.
                      type: string
                      example: '2.1'
                    software_statement:
                      description: Specifies a software statement containing client metadata values about the client software as claims. This is a string value containing the entire signed JWT.
                      type: string
                    disabled:
                      description: Specifies whether client is disabled.
                      type: boolean
                    oxId:
                      description: oxAuth Attribute Scope Id.
                      type: string
                    deletable:
                      description: Specifies whether client is deletable.
                      type: boolean
                    client_attributes:
                      type: object
                      properties:
                        tlsClientAuthSubjectDn:
                          type: string
                        runIntrospectionScriptBeforeAccessTokenAsJwtCreationAndIncludeClaims:
                          description: Run Introspection Script Before Access Token as Jwt Creation and Include Claims. Default value is false.
                          type: boolean
                        keepClientAuthorizationAfterExpiration:
                          description: Keep Client Authorization After Expiration.
                          type: boolean
                    backchannel_authentication_request_signing_alg:
                      description: 'The JWS algorithm alg value that the Client will use for signing authentication request, as described in Section 7.1.1. of OAuth 2.0 [RFC6749]. When omitted, the Client will not send signed authentication requests.'
                      type: string
                      enum:
                        - RS256
                        - RS384
                        - RS512
                        - ES256
                        - ES384
                        - ES512
                        - PS256
                        - PS384
                        - PS512
                    backchannel_token_delivery_mode:
                      description: specifies how backchannel token will be delivered.
                      type: string
                    backchannel_client_notification_endpoint:
                      description: 'Client Initiated Backchannel Authentication (CIBA) enables a Client to initiate the authentication of an end-user by means of out-of-band mechanisms. Upon receipt of the notification, the Client makes a request to the token endpoint to obtain the tokens.'
                      type: string
                    backchannel_user_code_parameter:
                      description: 'Boolean value specifying whether the Client supports the user_code parameter. If omitted, the default value is false.'
                      type: boolean
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - read
    post:
      tags:
        - OAuth - OpenID Connect - Clients
      summary: Adds an OpenID connect client.
      description: Adds an OpenID connect client.
      operationId: post-oauth-openid-clients
      requestBody:
        content:
          application/json:
            schema:
              title: Client Details.
              description: List of clients.
              type: object
              properties:
                inum:
                  description: XRI i-number. Client Identifier to uniquely identify the client.
                  type: string
                display_Name:
                  description: A human-readable name of the client.
                  type: string
                description:
                  description: A human-readable string describing the client.
                  type: string
                application_type:
                  description: 'Kind of the application. The default, if omitted, is web. The defined values are native or web. Web Clients using the OAuth Implicit Grant Type must only register URLs using the HTTPS scheme as redirect_uris, they must not use localhost as the hostname. Native Clients must only register redirect_uris using custom URI schemes or URLs using the http scheme with localhost as the hostname.'
                  type: string
                  enum:
                    - Web
                    - Native
                contacts:
                  description: e-mail addresses of people responsible for this Client.
                  type: array
                  items:
                    type: string
                redirect_uris:
                  description: Redirection URI values used by the Client. One of these registered Redirection URI values must exactly match the redirect_uri parameter value used in each Authorization Request
                  type: array
                  items:
                    type: string
                  example:
                    - 'https://client.example.org/cb'
                post_logout_redirect_uris:
                  description: Provide the URLs supplied by the RP to request that the user be redirected to this location after a logout has been performed.
                  type: array
                  items:
                    type: string
                  example:
                    - 'https://client.example.org/logout/page1'
                    - 'https://client.example.org/logout/page2'
                    - 'https://client.example.org/logout/page3'
                scope:
                  description: Provide list of scopes granted to the client.
                  type: array
                  items:
                    type: string
                  example:
                    - read write dolphin
                claims:
                  description: Provide list of claims granted to the client.
                  type: array
                  items:
                    type: string
                    description: String containing a space-separated list of claims that can be requested individually.
                client_secret:
                  type: string
                  description: The client secret.  The client MAY omit the parameter if the client secret is an empty string.
                password:
                  type: string
                  description: User password.
                associated_persons:
                  description: List of associated persons.
                  type: array
                  items:
                    type: string
                    description: Reference the DN of a person.
                trusted_client:
                  description: Attribute which corresponds to the "Pre-Authorization" property. Default value is false.
                  type: boolean
                response_types:
                  description: 'A list of the OAuth 2.0 response_type values that the Client is declaring that it will restrict itself to using. If omitted, the default is that the Client will use only the code Response Type. Allowed values are code, token, id_token.'
                  type: array
                  items:
                    type: string
                    enum:
                      - CODE
                      - TOKEN
                      - ID_TOKEN
                grant_types:
                  description: A list of the OAuth 2.0 Grant Types that the Client is declaring that it will restrict itself to using.
                  type: array
                  items:
                    type: string
                    enum:
                      - AUTHORIZATION_CODE
                      - IMPLICIT
                      - RESOURCE_OWNER_PASSWORD_CREDENTIALS
                      - CLIENT_CREDENTIALS
                      - REFRESH_TOKEN
                      - OXAUTH_UMA_TICKET
                      - CIBA
                      - DEVICE_CODE
                logo_uri:
                  description: URL that references a logo for the Client application.
                  type: string
                client_uri:
                  description: URL of the home page of the Client. The value of this field must point to a valid Web page.
                  type: string
                policy_uri:
                  description: URL that the Relying Party Client provides to the End-User to read about the how the profile data will be used.
                  type: string
                tos_uri:
                  description: URL that the Relying Party Client provides to the End-User to read about the Relying Party's terms of service.
                  type: string
                jwks_uri:
                  description: 'URL for the Client''s JSON Web Key Set (JWK) document containing key(s) that are used for signing requests to the OP. The JWK Set may also contain the Client''s encryption keys(s) that are used by the OP to encrypt the responses to the Client. When both signing and encryption keys are made available, a use (Key Use) parameter value is required for all keys in the document to indicate each key''s intended usage.'
                  type: string
                jwks:
                  description: 'List of JSON Web Key (JWK) - A JSON object that represents a cryptographic key. The members of the object represent properties of the key, including its value.'
                  type: array
                  items:
                    $ref: '#/components/schemas/JsonWebKey'
                  example: '{ "keys" : [ { "e" : "AQAB", "n" : "gmlDX_mgMcHX.." ] }'
                sector_identifier_uri:
                  description: URL using the https scheme to be used in calculating Pseudonymous Identifiers by the OP.
                  type: string
                subject_type:
                  description: Subject type requested for the Client ID. Valid types include pairwise and public.
                  type: string
                  enum:
                    - PAIRWISE
                    - PUBLIC
                id_token_token_binding_cnf:
                  description: 'Specifies the JWT Confirmation Method member name (e.g. tbh) that the Relying Party expects when receiving Token Bound ID Tokens. The presence of this parameter indicates that the Relying Party supports Token Binding of ID Tokens. If omitted, the default is that the Relying Party does not support Token Binding of ID Tokens.'
                  type: string
                rpt_as_jwt:
                  description: Specifies whether RPT should be return as signed JWT.
                  type: boolean
                access_token_as_jwt:
                  description: Specifies whether access token as signed JWT.
                  type: boolean
                access_token_signing_alg:
                  description: 'Specifies signing algorithm that has to be used during JWT signing. If it''s not specified, then the default OP signing algorithm will be used.'
                  type: string
                  enum:
                    - HS256
                    - HS384
                    - HS512
                    - RS256
                    - RS384
                    - RS512
                    - ES256
                    - ES384
                    - ES512
                    - PS256
                    - PS384
                    - PS512
                id_token_signed_response_alg:
                  description: JWS alg algorithm (JWA) required for signing the ID Token issued to this Client.
                  type: string
                  enum:
                    - HS256 - HS384 - HS512 - RS256 - RS384 - RS512 - ES256 - ES384 - ES512 - PS256 - PS384 - PS512
                id_token_encrypted_response_alg:
                  description: JWE alg algorithm (JWA) required for encrypting the ID Token issued to this Client.
                  type: string
                  enum:
                    - RSA1_5
                    - RSA-OAEP
                    - A128KW
                    - A256KW
                id_token_encrypted_response_enc:
                  description: JWE enc algorithm (JWA) required for encrypting the ID Token issued to this Client.
                  type: string
                  enum:
                    - A128CBC+HS256
                    - A256CBC+HS512
                    - A128GCM
                    - A256GCM
                userinfo_signed_response_alg:
                  description: JWS alg algorithm (JWA) required for signing UserInfo Responses.
                  type: string
                  enum:
                    - HS256
                    - HS384
                    - HS512
                    - RS256
                    - RS384
                    - RS512
                    - ES256
                    - ES384
                    - ES512
                    - PS256
                    - PS384
                    - PS512
                userinfo_encrypted_response_alg:
                  description: JWE alg algorithm (JWA) required for encrypting UserInfo Responses.
                  type: string
                  enum:
                    - RSA1_5
                    - RSA-OAEP
                    - A128KW
                    - A256KW
                userinfo_encrypted_response_enc:
                  description: JWE enc algorithm (JWA) required for encrypting UserInfo Responses.
                  type: string
                  enum:
                    - A128CBC+HS256
                    - A256CBC+HS512
                    - A128GCM
                    - A256GCM
                request_object_signing_alg:
                  description: JWS alg algorithm (JWA) that must be used for signing Request Objects sent to the OP.
                  type: string
                  enum:
                    - HS256
                    - HS384
                    - HS512
                    - RS256
                    - RS384
                    - RS512
                    - ES256
                    - ES384
                    - ES512
                    - PS256
                    - PS384
                    - PS512
                request_object_encryption_alg:
                  description: JWE alg algorithm (JWA) the RP is declaring that it may use for encrypting Request Objects sent to the OP.
                  type: string
                  enum:
                    - RSA1_5
                    - RSA-OAEP
                    - A128KW
                    - A256KW
                request_object_encryption_enc:
                  description: JWE enc algorithm (JWA) the RP is declaring that it may use for encrypting Request Objects sent to the OP.
                  type: string
                  enum:
                    - A128CBC+HS256
                    - A256CBC+HS512
                    - A128GCM
                    - A256GCM
                token_endpoint_auth_method:
                  description: Requested Client Authentication method for the Token Endpoint.
                  type: string
                  enum:
                    - client_secret_basic
                    - client_secret_post
                    - client_secret_jwt
                    - private_key_jwt
                    - none
                token_endpoint_auth_signing_alg:
                  description: JWS alg algorithm (JWA) that must be used for signing the JWT used to authenticate the Client at the Token Endpoint for the private_key_jwt and client_secret_jwt authentication methods.
                  type: string
                  enum:
                    - HS256
                    - HS384
                    - HS512
                    - RS256
                    - RS384
                    - RS512
                    - ES256
                    - ES384
                    - ES512
                    - PS256
                    - PS384
                    - PS512
                default_max_age:
                  description: Specifies the Default Maximum Authentication Age.
                  type: integer
                  format: int32
                  example: 1000000
                require_auth_time:
                  description: Boolean value specifying whether the auth_time Claim in the ID Token is required. It is required when the value is true.
                  type: boolean
                claims_redirect_uri:
                  description: Array of The Claims Redirect URIs to which the client wishes the authorization server to direct the requesting party's user agent after completing its interaction.
                  type: array
                  items:
                    type: string
                logout_uri:
                  description: Specifies the URI using the https scheme that the authorization server can call to initiate a login at the client.
                  type: array
                  items:
                    type: string
                logout_session_required:
                  description: 'Boolean value specifying whether the RP requires that a session ID query parameter be included to identify the RP session at the OP when the logout_uri is used. If omitted, the default value is false.'
                  type: boolean
                persist_client_authorizations:
                  description: Specifies if the client authorization details are to be persisted. Default value is true.
                  type: boolean
                include_claims_in_id_token:
                  description: 'If true then claims are included in token id, default value is false.'
                  type: boolean
                refresh_token_lifetime:
                  description: Specifies the Client-specific refresh token expiration.
                  type: integer
                  format: int32
                  example: 100000000
                access_token_lifetime:
                  description: Specifies the Client-specific access token expiration.
                  type: integer
                  format: int32
                  example: 100000000
                default_acr_values:
                  description: Array of default requested Authentication Context Class Reference values that the Authorization Server must use for processing requests from the Client.
                  type: array
                  items:
                    type: string
                initiate_login_uri:
                  description: Specifies the URI using the https scheme that the authorization server can call to initiate a login at the client.
                  type: string
                exp:
                  description: 'Integer timestamp, measured in the number of seconds since January 1 1970 UTC, indicating when this permission will expire.'
                  type: string
                  format: date
                request_uris:
                  description: Provide a list of requests_uri values that are pre-registered by the Client for use at the Authorization Server.
                  type: array
                  items:
                    type: string
                authorized_origins:
                  description: Specifies authorized JavaScript origins.
                  type: array
                  items:
                    type: string
                software_id:
                  description: Specifies a unique identifier string (UUID) assigned by the client developer or software publisher used by registration endpoints to identify the client software to be dynamically registered.
                  type: string
                  example: 4NRB1-0XZABZI9E6-5SM3R
                software_version:
                  description: Specifies a version identifier string for the client software identified by 'software_id'. The value of the 'software_version' should change on any update to the client software identified by the same 'software_id'.
                  type: string
                  example: '2.1'
                software_statement:
                  description: Specifies a software statement containing client metadata values about the client software as claims. This is a string value containing the entire signed JWT.
                  type: string
                disabled:
                  description: Specifies whether client is disabled.
                  type: boolean
                oxId:
                  description: oxAuth Attribute Scope Id.
                  type: string
                deletable:
                  description: Specifies whether client is deletable.
                  type: boolean
                client_attributes:
                  type: object
                  properties:
                    tlsClientAuthSubjectDn:
                      type: string
                    runIntrospectionScriptBeforeAccessTokenAsJwtCreationAndIncludeClaims:
                      description: Run Introspection Script Before Access Token as Jwt Creation and Include Claims. Default value is false.
                      type: boolean
                    keepClientAuthorizationAfterExpiration:
                      description: Keep Client Authorization After Expiration.
                      type: boolean
                backchannel_authentication_request_signing_alg:
                  description: 'The JWS algorithm alg value that the Client will use for signing authentication request, as described in Section 7.1.1. of OAuth 2.0 [RFC6749]. When omitted, the Client will not send signed authentication requests.'
                  type: string
                  enum:
                    - RS256
                    - RS384
                    - RS512
                    - ES256
                    - ES384
                    - ES512
                    - PS256
                    - PS384
                    - PS512
                backchannel_token_delivery_mode:
                  description: specifies how backchannel token will be delivered.
                  type: string
                backchannel_client_notification_endpoint:
                  description: 'Client Initiated Backchannel Authentication (CIBA) enables a Client to initiate the authentication of an end-user by means of out-of-band mechanisms. Upon receipt of the notification, the Client makes a request to the token endpoint to obtain the tokens.'
                  type: string
                backchannel_user_code_parameter:
                  description: 'Boolean value specifying whether the Client supports the user_code parameter. If omitted, the default value is false.'
                  type: boolean
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - write
    put:
      tags:
        - OAuth - OpenID Connect - Clients
      summary: Updates an OpenID connect client.
      description: Updates an OpenID connect client.
      operationId: put-oauth-openid-clients
      requestBody:
        content:
          application/json:
            schema:
              title: Client Details.
              description: List of clients.
              type: object
              properties:
                inum:
                  description: XRI i-number. Client Identifier to uniquely identify the client.
                  type: string
                display_Name:
                  description: A human-readable name of the client.
                  type: string
                description:
                  description: A human-readable string describing the client.
                  type: string
                application_type:
                  description: 'Kind of the application. The default, if omitted, is web. The defined values are native or web. Web Clients using the OAuth Implicit Grant Type must only register URLs using the HTTPS scheme as redirect_uris, they must not use localhost as the hostname. Native Clients must only register redirect_uris using custom URI schemes or URLs using the http scheme with localhost as the hostname.'
                  type: string
                  enum:
                    - Web
                    - Native
                contacts:
                  description: e-mail addresses of people responsible for this Client.
                  type: array
                  items:
                    type: string
                redirect_uris:
                  description: Redirection URI values used by the Client. One of these registered Redirection URI values must exactly match the redirect_uri parameter value used in each Authorization Request
                  type: array
                  items:
                    type: string
                  example:
                    - 'https://client.example.org/cb'
                post_logout_redirect_uris:
                  description: Provide the URLs supplied by the RP to request that the user be redirected to this location after a logout has been performed.
                  type: array
                  items:
                    type: string
                  example:
                    - 'https://client.example.org/logout/page1'
                    - 'https://client.example.org/logout/page2'
                    - 'https://client.example.org/logout/page3'
                scope:
                  description: Provide list of scopes granted to the client.
                  type: array
                  items:
                    type: string
                  example:
                    - read write dolphin
                claims:
                  description: Provide list of claims granted to the client.
                  type: array
                  items:
                    type: string
                    description: String containing a space-separated list of claims that can be requested individually.
                client_secret:
                  type: string
                  description: The client secret.  The client MAY omit the parameter if the client secret is an empty string.
                password:
                  type: string
                  description: User password.
                associated_persons:
                  description: List of associated persons.
                  type: array
                  items:
                    type: string
                    description: Reference the DN of a person.
                trusted_client:
                  description: Attribute which corresponds to the "Pre-Authorization" property. Default value is false.
                  type: boolean
                response_types:
                  description: 'A list of the OAuth 2.0 response_type values that the Client is declaring that it will restrict itself to using. If omitted, the default is that the Client will use only the code Response Type. Allowed values are code, token, id_token.'
                  type: array
                  items:
                    type: string
                    enum:
                      - CODE
                      - TOKEN
                      - ID_TOKEN
                grant_types:
                  description: A list of the OAuth 2.0 Grant Types that the Client is declaring that it will restrict itself to using.
                  type: array
                  items:
                    type: string
                    enum:
                      - AUTHORIZATION_CODE
                      - IMPLICIT
                      - RESOURCE_OWNER_PASSWORD_CREDENTIALS
                      - CLIENT_CREDENTIALS
                      - REFRESH_TOKEN
                      - OXAUTH_UMA_TICKET
                      - CIBA
                      - DEVICE_CODE
                logo_uri:
                  description: URL that references a logo for the Client application.
                  type: string
                client_uri:
                  description: URL of the home page of the Client. The value of this field must point to a valid Web page.
                  type: string
                policy_uri:
                  description: URL that the Relying Party Client provides to the End-User to read about the how the profile data will be used.
                  type: string
                tos_uri:
                  description: URL that the Relying Party Client provides to the End-User to read about the Relying Party's terms of service.
                  type: string
                jwks_uri:
                  description: 'URL for the Client''s JSON Web Key Set (JWK) document containing key(s) that are used for signing requests to the OP. The JWK Set may also contain the Client''s encryption keys(s) that are used by the OP to encrypt the responses to the Client. When both signing and encryption keys are made available, a use (Key Use) parameter value is required for all keys in the document to indicate each key''s intended usage.'
                  type: string
                jwks:
                  description: 'List of JSON Web Key (JWK) - A JSON object that represents a cryptographic key. The members of the object represent properties of the key, including its value.'
                  type: array
                  items:
                    $ref: '#/components/schemas/JsonWebKey'
                  example: '{ "keys" : [ { "e" : "AQAB", "n" : "gmlDX_mgMcHX.." ] }'
                sector_identifier_uri:
                  description: URL using the https scheme to be used in calculating Pseudonymous Identifiers by the OP.
                  type: string
                subject_type:
                  description: Subject type requested for the Client ID. Valid types include pairwise and public.
                  type: string
                  enum:
                    - PAIRWISE
                    - PUBLIC
                id_token_token_binding_cnf:
                  description: 'Specifies the JWT Confirmation Method member name (e.g. tbh) that the Relying Party expects when receiving Token Bound ID Tokens. The presence of this parameter indicates that the Relying Party supports Token Binding of ID Tokens. If omitted, the default is that the Relying Party does not support Token Binding of ID Tokens.'
                  type: string
                rpt_as_jwt:
                  description: Specifies whether RPT should be return as signed JWT.
                  type: boolean
                access_token_as_jwt:
                  description: Specifies whether access token as signed JWT.
                  type: boolean
                access_token_signing_alg:
                  description: 'Specifies signing algorithm that has to be used during JWT signing. If it''s not specified, then the default OP signing algorithm will be used.'
                  type: string
                  enum:
                    - HS256
                    - HS384
                    - HS512
                    - RS256
                    - RS384
                    - RS512
                    - ES256
                    - ES384
                    - ES512
                    - PS256
                    - PS384
                    - PS512
                id_token_signed_response_alg:
                  description: JWS alg algorithm (JWA) required for signing the ID Token issued to this Client.
                  type: string
                  enum:
                    - HS256 - HS384 - HS512 - RS256 - RS384 - RS512 - ES256 - ES384 - ES512 - PS256 - PS384 - PS512
                id_token_encrypted_response_alg:
                  description: JWE alg algorithm (JWA) required for encrypting the ID Token issued to this Client.
                  type: string
                  enum:
                    - RSA1_5
                    - RSA-OAEP
                    - A128KW
                    - A256KW
                id_token_encrypted_response_enc:
                  description: JWE enc algorithm (JWA) required for encrypting the ID Token issued to this Client.
                  type: string
                  enum:
                    - A128CBC+HS256
                    - A256CBC+HS512
                    - A128GCM
                    - A256GCM
                userinfo_signed_response_alg:
                  description: JWS alg algorithm (JWA) required for signing UserInfo Responses.
                  type: string
                  enum:
                    - HS256
                    - HS384
                    - HS512
                    - RS256
                    - RS384
                    - RS512
                    - ES256
                    - ES384
                    - ES512
                    - PS256
                    - PS384
                    - PS512
                userinfo_encrypted_response_alg:
                  description: JWE alg algorithm (JWA) required for encrypting UserInfo Responses.
                  type: string
                  enum:
                    - RSA1_5
                    - RSA-OAEP
                    - A128KW
                    - A256KW
                userinfo_encrypted_response_enc:
                  description: JWE enc algorithm (JWA) required for encrypting UserInfo Responses.
                  type: string
                  enum:
                    - A128CBC+HS256
                    - A256CBC+HS512
                    - A128GCM
                    - A256GCM
                request_object_signing_alg:
                  description: JWS alg algorithm (JWA) that must be used for signing Request Objects sent to the OP.
                  type: string
                  enum:
                    - HS256
                    - HS384
                    - HS512
                    - RS256
                    - RS384
                    - RS512
                    - ES256
                    - ES384
                    - ES512
                    - PS256
                    - PS384
                    - PS512
                request_object_encryption_alg:
                  description: JWE alg algorithm (JWA) the RP is declaring that it may use for encrypting Request Objects sent to the OP.
                  type: string
                  enum:
                    - RSA1_5
                    - RSA-OAEP
                    - A128KW
                    - A256KW
                request_object_encryption_enc:
                  description: JWE enc algorithm (JWA) the RP is declaring that it may use for encrypting Request Objects sent to the OP.
                  type: string
                  enum:
                    - A128CBC+HS256
                    - A256CBC+HS512
                    - A128GCM
                    - A256GCM
                token_endpoint_auth_method:
                  description: Requested Client Authentication method for the Token Endpoint.
                  type: string
                  enum:
                    - client_secret_basic
                    - client_secret_post
                    - client_secret_jwt
                    - private_key_jwt
                    - none
                token_endpoint_auth_signing_alg:
                  description: JWS alg algorithm (JWA) that must be used for signing the JWT used to authenticate the Client at the Token Endpoint for the private_key_jwt and client_secret_jwt authentication methods.
                  type: string
                  enum:
                    - HS256
                    - HS384
                    - HS512
                    - RS256
                    - RS384
                    - RS512
                    - ES256
                    - ES384
                    - ES512
                    - PS256
                    - PS384
                    - PS512
                default_max_age:
                  description: Specifies the Default Maximum Authentication Age.
                  type: integer
                  format: int32
                  example: 1000000
                require_auth_time:
                  description: Boolean value specifying whether the auth_time Claim in the ID Token is required. It is required when the value is true.
                  type: boolean
                claims_redirect_uri:
                  description: Array of The Claims Redirect URIs to which the client wishes the authorization server to direct the requesting party's user agent after completing its interaction.
                  type: array
                  items:
                    type: string
                logout_uri:
                  description: Specifies the URI using the https scheme that the authorization server can call to initiate a login at the client.
                  type: array
                  items:
                    type: string
                logout_session_required:
                  description: 'Boolean value specifying whether the RP requires that a session ID query parameter be included to identify the RP session at the OP when the logout_uri is used. If omitted, the default value is false.'
                  type: boolean
                persist_client_authorizations:
                  description: Specifies if the client authorization details are to be persisted. Default value is true.
                  type: boolean
                include_claims_in_id_token:
                  description: 'If true then claims are included in token id, default value is false.'
                  type: boolean
                refresh_token_lifetime:
                  description: Specifies the Client-specific refresh token expiration.
                  type: integer
                  format: int32
                  example: 100000000
                access_token_lifetime:
                  description: Specifies the Client-specific access token expiration.
                  type: integer
                  format: int32
                  example: 100000000
                default_acr_values:
                  description: Array of default requested Authentication Context Class Reference values that the Authorization Server must use for processing requests from the Client.
                  type: array
                  items:
                    type: string
                initiate_login_uri:
                  description: Specifies the URI using the https scheme that the authorization server can call to initiate a login at the client.
                  type: string
                exp:
                  description: 'Integer timestamp, measured in the number of seconds since January 1 1970 UTC, indicating when this permission will expire.'
                  type: string
                  format: date
                request_uris:
                  description: Provide a list of requests_uri values that are pre-registered by the Client for use at the Authorization Server.
                  type: array
                  items:
                    type: string
                authorized_origins:
                  description: Specifies authorized JavaScript origins.
                  type: array
                  items:
                    type: string
                software_id:
                  description: Specifies a unique identifier string (UUID) assigned by the client developer or software publisher used by registration endpoints to identify the client software to be dynamically registered.
                  type: string
                  example: 4NRB1-0XZABZI9E6-5SM3R
                software_version:
                  description: Specifies a version identifier string for the client software identified by 'software_id'. The value of the 'software_version' should change on any update to the client software identified by the same 'software_id'.
                  type: string
                  example: '2.1'
                software_statement:
                  description: Specifies a software statement containing client metadata values about the client software as claims. This is a string value containing the entire signed JWT.
                  type: string
                disabled:
                  description: Specifies whether client is disabled.
                  type: boolean
                oxId:
                  description: oxAuth Attribute Scope Id.
                  type: string
                deletable:
                  description: Specifies whether client is deletable.
                  type: boolean
                client_attributes:
                  type: object
                  properties:
                    tlsClientAuthSubjectDn:
                      type: string
                    runIntrospectionScriptBeforeAccessTokenAsJwtCreationAndIncludeClaims:
                      description: Run Introspection Script Before Access Token as Jwt Creation and Include Claims. Default value is false.
                      type: boolean
                    keepClientAuthorizationAfterExpiration:
                      description: Keep Client Authorization After Expiration.
                      type: boolean
                backchannel_authentication_request_signing_alg:
                  description: 'The JWS algorithm alg value that the Client will use for signing authentication request, as described in Section 7.1.1. of OAuth 2.0 [RFC6749]. When omitted, the Client will not send signed authentication requests.'
                  type: string
                  enum:
                    - RS256
                    - RS384
                    - RS512
                    - ES256
                    - ES384
                    - ES512
                    - PS256
                    - PS384
                    - PS512
                backchannel_token_delivery_mode:
                  description: specifies how backchannel token will be delivered.
                  type: string
                backchannel_client_notification_endpoint:
                  description: 'Client Initiated Backchannel Authentication (CIBA) enables a Client to initiate the authentication of an end-user by means of out-of-band mechanisms. Upon receipt of the notification, the Client makes a request to the token endpoint to obtain the tokens.'
                  type: string
                backchannel_user_code_parameter:
                  description: 'Boolean value specifying whether the Client supports the user_code parameter. If omitted, the default value is false.'
                  type: boolean
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - write
  '/oauth/clients/{inum}':
    parameters:
      - schema:
          type: string
        name: inum
        in: path
        description: Client identifier
        required: true
    get:
      tags:
        - OAuth - OpenID Connect - Clients
      summary: Gets an OpenID connect client by inum.
      description: Gets an OpenID connect client by inum.
      operationId: get-oauth-openid-clients-by-inum
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Client Details.
                properties:
                  inum:
                    description: XRI i-number. Client Identifier to uniquely identify the client.
                    type: string
                  display_Name:
                    description: A human-readable name of the client.
                    type: string
                  description:
                    description: A human-readable string describing the client.
                    type: string
                  application_type:
                    description: 'Kind of the application. The default, if omitted, is web. The defined values are native or web. Web Clients using the OAuth Implicit Grant Type must only register URLs using the HTTPS scheme as redirect_uris, they must not use localhost as the hostname. Native Clients must only register redirect_uris using custom URI schemes or URLs using the http scheme with localhost as the hostname.'
                    type: string
                    enum:
                      - Web
                      - Native
                  contacts:
                    description: e-mail addresses of people responsible for this Client.
                    type: array
                    items:
                      type: string
                  redirect_uris:
                    description: Redirection URI values used by the Client. One of these registered Redirection URI values must exactly match the redirect_uri parameter value used in each Authorization Request
                    type: array
                    items:
                      type: string
                    example:
                      - 'https://client.example.org/cb'
                  post_logout_redirect_uris:
                    description: Provide the URLs supplied by the RP to request that the user be redirected to this location after a logout has been performed.
                    type: array
                    items:
                      type: string
                    example:
                      - 'https://client.example.org/logout/page1'
                      - 'https://client.example.org/logout/page2'
                      - 'https://client.example.org/logout/page3'
                  scope:
                    description: Provide list of scopes granted to the client.
                    type: array
                    items:
                      type: string
                    example:
                      - read write dolphin
                  claims:
                    description: Provide list of claims granted to the client.
                    type: array
                    items:
                      type: string
                      description: String containing a space-separated list of claims that can be requested individually.
                  client_secret:
                    type: string
                    description: The client secret.  The client MAY omit the parameter if the client secret is an empty string.
                  password:
                    type: string
                    description: User password.
                  associated_persons:
                    description: List of associated persons.
                    type: array
                    items:
                      type: string
                      description: Reference the DN of a person.
                  trusted_client:
                    description: Attribute which corresponds to the "Pre-Authorization" property. Default value is false.
                    type: boolean
                  response_types:
                    description: 'A list of the OAuth 2.0 response_type values that the Client is declaring that it will restrict itself to using. If omitted, the default is that the Client will use only the code Response Type. Allowed values are code, token, id_token.'
                    type: array
                    items:
                      type: string
                      enum:
                        - CODE
                        - TOKEN
                        - ID_TOKEN
                  grant_types:
                    description: A list of the OAuth 2.0 Grant Types that the Client is declaring that it will restrict itself to using.
                    type: array
                    items:
                      type: string
                      enum:
                        - AUTHORIZATION_CODE
                        - IMPLICIT
                        - RESOURCE_OWNER_PASSWORD_CREDENTIALS
                        - CLIENT_CREDENTIALS
                        - REFRESH_TOKEN
                        - OXAUTH_UMA_TICKET
                        - CIBA
                        - DEVICE_CODE
                  logo_uri:
                    description: URL that references a logo for the Client application.
                    type: string
                  client_uri:
                    description: URL of the home page of the Client. The value of this field must point to a valid Web page.
                    type: string
                  policy_uri:
                    description: URL that the Relying Party Client provides to the End-User to read about the how the profile data will be used.
                    type: string
                  tos_uri:
                    description: URL that the Relying Party Client provides to the End-User to read about the Relying Party's terms of service.
                    type: string
                  jwks_uri:
                    description: 'URL for the Client''s JSON Web Key Set (JWK) document containing key(s) that are used for signing requests to the OP. The JWK Set may also contain the Client''s encryption keys(s) that are used by the OP to encrypt the responses to the Client. When both signing and encryption keys are made available, a use (Key Use) parameter value is required for all keys in the document to indicate each key''s intended usage.'
                    type: string
                  jwks:
                    description: 'List of JSON Web Key (JWK) - A JSON object that represents a cryptographic key. The members of the object represent properties of the key, including its value.'
                    type: array
                    items:
                      $ref: '#/components/schemas/JsonWebKey'
                    example: '{ "keys" : [ { "e" : "AQAB", "n" : "gmlDX_mgMcHX.." ] }'
                  sector_identifier_uri:
                    description: URL using the https scheme to be used in calculating Pseudonymous Identifiers by the OP.
                    type: string
                  subject_type:
                    description: Subject type requested for the Client ID. Valid types include pairwise and public.
                    type: string
                    enum:
                      - PAIRWISE
                      - PUBLIC
                  id_token_token_binding_cnf:
                    description: 'Specifies the JWT Confirmation Method member name (e.g. tbh) that the Relying Party expects when receiving Token Bound ID Tokens. The presence of this parameter indicates that the Relying Party supports Token Binding of ID Tokens. If omitted, the default is that the Relying Party does not support Token Binding of ID Tokens.'
                    type: string
                  rpt_as_jwt:
                    description: Specifies whether RPT should be return as signed JWT.
                    type: boolean
                  access_token_as_jwt:
                    description: Specifies whether access token as signed JWT.
                    type: boolean
                  access_token_signing_alg:
                    description: 'Specifies signing algorithm that has to be used during JWT signing. If it''s not specified, then the default OP signing algorithm will be used.'
                    type: string
                    enum:
                      - HS256
                      - HS384
                      - HS512
                      - RS256
                      - RS384
                      - RS512
                      - ES256
                      - ES384
                      - ES512
                      - PS256
                      - PS384
                      - PS512
                  id_token_signed_response_alg:
                    description: JWS alg algorithm (JWA) required for signing the ID Token issued to this Client.
                    type: string
                    enum:
                      - HS256 - HS384 - HS512 - RS256 - RS384 - RS512 - ES256 - ES384 - ES512 - PS256 - PS384 - PS512
                  id_token_encrypted_response_alg:
                    description: JWE alg algorithm (JWA) required for encrypting the ID Token issued to this Client.
                    type: string
                    enum:
                      - RSA1_5
                      - RSA-OAEP
                      - A128KW
                      - A256KW
                  id_token_encrypted_response_enc:
                    description: JWE enc algorithm (JWA) required for encrypting the ID Token issued to this Client.
                    type: string
                    enum:
                      - A128CBC+HS256
                      - A256CBC+HS512
                      - A128GCM
                      - A256GCM
                  userinfo_signed_response_alg:
                    description: JWS alg algorithm (JWA) required for signing UserInfo Responses.
                    type: string
                    enum:
                      - HS256
                      - HS384
                      - HS512
                      - RS256
                      - RS384
                      - RS512
                      - ES256
                      - ES384
                      - ES512
                      - PS256
                      - PS384
                      - PS512
                  userinfo_encrypted_response_alg:
                    description: JWE alg algorithm (JWA) required for encrypting UserInfo Responses.
                    type: string
                    enum:
                      - RSA1_5
                      - RSA-OAEP
                      - A128KW
                      - A256KW
                  userinfo_encrypted_response_enc:
                    description: JWE enc algorithm (JWA) required for encrypting UserInfo Responses.
                    type: string
                    enum:
                      - A128CBC+HS256
                      - A256CBC+HS512
                      - A128GCM
                      - A256GCM
                  request_object_signing_alg:
                    description: JWS alg algorithm (JWA) that must be used for signing Request Objects sent to the OP.
                    type: string
                    enum:
                      - HS256
                      - HS384
                      - HS512
                      - RS256
                      - RS384
                      - RS512
                      - ES256
                      - ES384
                      - ES512
                      - PS256
                      - PS384
                      - PS512
                  request_object_encryption_alg:
                    description: JWE alg algorithm (JWA) the RP is declaring that it may use for encrypting Request Objects sent to the OP.
                    type: string
                    enum:
                      - RSA1_5
                      - RSA-OAEP
                      - A128KW
                      - A256KW
                  request_object_encryption_enc:
                    description: JWE enc algorithm (JWA) the RP is declaring that it may use for encrypting Request Objects sent to the OP.
                    type: string
                    enum:
                      - A128CBC+HS256
                      - A256CBC+HS512
                      - A128GCM
                      - A256GCM
                  token_endpoint_auth_method:
                    description: Requested Client Authentication method for the Token Endpoint.
                    type: string
                    enum:
                      - client_secret_basic
                      - client_secret_post
                      - client_secret_jwt
                      - private_key_jwt
                      - none
                  token_endpoint_auth_signing_alg:
                    description: JWS alg algorithm (JWA) that must be used for signing the JWT used to authenticate the Client at the Token Endpoint for the private_key_jwt and client_secret_jwt authentication methods.
                    type: string
                    enum:
                      - HS256
                      - HS384
                      - HS512
                      - RS256
                      - RS384
                      - RS512
                      - ES256
                      - ES384
                      - ES512
                      - PS256
                      - PS384
                      - PS512
                  default_max_age:
                    description: Specifies the Default Maximum Authentication Age.
                    type: integer
                    format: int32
                    example: 1000000
                  require_auth_time:
                    description: Boolean value specifying whether the auth_time Claim in the ID Token is required. It is required when the value is true.
                    type: boolean
                  claims_redirect_uri:
                    description: Array of The Claims Redirect URIs to which the client wishes the authorization server to direct the requesting party's user agent after completing its interaction.
                    type: array
                    items:
                      type: string
                  logout_uri:
                    description: Specifies the URI using the https scheme that the authorization server can call to initiate a login at the client.
                    type: array
                    items:
                      type: string
                  logout_session_required:
                    description: 'Boolean value specifying whether the RP requires that a session ID query parameter be included to identify the RP session at the OP when the logout_uri is used. If omitted, the default value is false.'
                    type: boolean
                  persist_client_authorizations:
                    description: Specifies if the client authorization details are to be persisted. Default value is true.
                    type: boolean
                  include_claims_in_id_token:
                    description: 'If true then claims are included in token id, default value is false.'
                    type: boolean
                  refresh_token_lifetime:
                    description: Specifies the Client-specific refresh token expiration.
                    type: integer
                    format: int32
                    example: 100000000
                  access_token_lifetime:
                    description: Specifies the Client-specific access token expiration.
                    type: integer
                    format: int32
                    example: 100000000
                  default_acr_values:
                    description: Array of default requested Authentication Context Class Reference values that the Authorization Server must use for processing requests from the Client.
                    type: array
                    items:
                      type: string
                  initiate_login_uri:
                    description: Specifies the URI using the https scheme that the authorization server can call to initiate a login at the client.
                    type: string
                  exp:
                    description: 'Integer timestamp, measured in the number of seconds since January 1 1970 UTC, indicating when this permission will expire.'
                    type: string
                    format: date
                  request_uris:
                    description: Provide a list of requests_uri values that are pre-registered by the Client for use at the Authorization Server.
                    type: array
                    items:
                      type: string
                  authorized_origins:
                    description: Specifies authorized JavaScript origins.
                    type: array
                    items:
                      type: string
                  software_id:
                    description: Specifies a unique identifier string (UUID) assigned by the client developer or software publisher used by registration endpoints to identify the client software to be dynamically registered.
                    type: string
                    example: 4NRB1-0XZABZI9E6-5SM3R
                  software_version:
                    description: Specifies a version identifier string for the client software identified by 'software_id'. The value of the 'software_version' should change on any update to the client software identified by the same 'software_id'.
                    type: string
                    example: '2.1'
                  software_statement:
                    description: Specifies a software statement containing client metadata values about the client software as claims. This is a string value containing the entire signed JWT.
                    type: string
                  disabled:
                    description: Specifies whether client is disabled.
                    type: boolean
                  oxId:
                    description: oxAuth Attribute Scope Id.
                    type: string
                  deletable:
                    description: Specifies whether client is deletable.
                    type: boolean
                  client_attributes:
                    type: object
                    properties:
                      tlsClientAuthSubjectDn:
                        type: string
                      runIntrospectionScriptBeforeAccessTokenAsJwtCreationAndIncludeClaims:
                        description: Run Introspection Script Before Access Token as Jwt Creation and Include Claims. Default value is false.
                        type: boolean
                      keepClientAuthorizationAfterExpiration:
                        description: Keep Client Authorization After Expiration.
                        type: boolean
                  backchannel_authentication_request_signing_alg:
                    description: 'The JWS algorithm alg value that the Client will use for signing authentication request, as described in Section 7.1.1. of OAuth 2.0 [RFC6749]. When omitted, the Client will not send signed authentication requests.'
                    type: string
                    enum:
                      - RS256
                      - RS384
                      - RS512
                      - ES256
                      - ES384
                      - ES512
                      - PS256
                      - PS384
                      - PS512
                  backchannel_token_delivery_mode:
                    description: specifies how backchannel token will be delivered.
                    type: string
                  backchannel_client_notification_endpoint:
                    description: 'Client Initiated Backchannel Authentication (CIBA) enables a Client to initiate the authentication of an end-user by means of out-of-band mechanisms. Upon receipt of the notification, the Client makes a request to the token endpoint to obtain the tokens.'
                    type: string
                  backchannel_user_code_parameter:
                    description: 'Boolean value specifying whether the Client supports the user_code parameter. If omitted, the default value is false.'
                    type: boolean
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - read
    delete:
      tags:
        - OAuth - OpenID Connect - Clients
      summary: Deletes an OpenID connect client by inum.
      description: Deletes an OpenID connect client by inum.
      operationId: delete-oauth-openid-clients-by-inum
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - write
  /oauth/clients/search:
    parameters:
      - name: pattern
        in: query
        required: true
        description: Search pattern.
        schema:
          type: string
      - name: size
        in: query
        required: false
        description: Search size - max size of the results to return.
        schema:
          type: integer
    get:
      tags:
        - OAuth - OpenID Connect - Clients
      summary: Searches OpenID connect clients by pattern.
      description: Searches OpenID connect clients by pattern.
      operationId: get-oauth-openid-clients-search-by-pattern
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: Clients.
                description: List of clients.
                type: array
                items:
                  type: object
                  description: Client Details.
                  properties:
                    inum:
                      description: XRI i-number. Client Identifier to uniquely identify the client.
                      type: string
                    display_Name:
                      description: A human-readable name of the client.
                      type: string
                    description:
                      description: A human-readable string describing the client.
                      type: string
                    application_type:
                      description: 'Kind of the application. The default, if omitted, is web. The defined values are native or web. Web Clients using the OAuth Implicit Grant Type must only register URLs using the HTTPS scheme as redirect_uris, they must not use localhost as the hostname. Native Clients must only register redirect_uris using custom URI schemes or URLs using the http scheme with localhost as the hostname.'
                      type: string
                      enum:
                        - Web
                        - Native
                    contacts:
                      description: e-mail addresses of people responsible for this Client.
                      type: array
                      items:
                        type: string
                    redirect_uris:
                      description: Redirection URI values used by the Client. One of these registered Redirection URI values must exactly match the redirect_uri parameter value used in each Authorization Request
                      type: array
                      items:
                        type: string
                      example:
                        - 'https://client.example.org/cb'
                    post_logout_redirect_uris:
                      description: Provide the URLs supplied by the RP to request that the user be redirected to this location after a logout has been performed.
                      type: array
                      items:
                        type: string
                      example:
                        - 'https://client.example.org/logout/page1'
                        - 'https://client.example.org/logout/page2'
                        - 'https://client.example.org/logout/page3'
                    scope:
                      description: Provide list of scopes granted to the client.
                      type: array
                      items:
                        type: string
                      example:
                        - read write dolphin
                    claims:
                      description: Provide list of claims granted to the client.
                      type: array
                      items:
                        type: string
                        description: String containing a space-separated list of claims that can be requested individually.
                    client_secret:
                      type: string
                      description: The client secret.  The client MAY omit the parameter if the client secret is an empty string.
                    password:
                      type: string
                      description: User password.
                    associated_persons:
                      description: List of associated persons.
                      type: array
                      items:
                        type: string
                        description: Reference the DN of a person.
                    trusted_client:
                      description: Attribute which corresponds to the "Pre-Authorization" property. Default value is false.
                      type: boolean
                    response_types:
                      description: 'A list of the OAuth 2.0 response_type values that the Client is declaring that it will restrict itself to using. If omitted, the default is that the Client will use only the code Response Type. Allowed values are code, token, id_token.'
                      type: array
                      items:
                        type: string
                        enum:
                          - CODE
                          - TOKEN
                          - ID_TOKEN
                    grant_types:
                      description: A list of the OAuth 2.0 Grant Types that the Client is declaring that it will restrict itself to using.
                      type: array
                      items:
                        type: string
                        enum:
                          - AUTHORIZATION_CODE
                          - IMPLICIT
                          - RESOURCE_OWNER_PASSWORD_CREDENTIALS
                          - CLIENT_CREDENTIALS
                          - REFRESH_TOKEN
                          - OXAUTH_UMA_TICKET
                          - CIBA
                          - DEVICE_CODE
                    logo_uri:
                      description: URL that references a logo for the Client application.
                      type: string
                    client_uri:
                      description: URL of the home page of the Client. The value of this field must point to a valid Web page.
                      type: string
                    policy_uri:
                      description: URL that the Relying Party Client provides to the End-User to read about the how the profile data will be used.
                      type: string
                    tos_uri:
                      description: URL that the Relying Party Client provides to the End-User to read about the Relying Party's terms of service.
                      type: string
                    jwks_uri:
                      description: 'URL for the Client''s JSON Web Key Set (JWK) document containing key(s) that are used for signing requests to the OP. The JWK Set may also contain the Client''s encryption keys(s) that are used by the OP to encrypt the responses to the Client. When both signing and encryption keys are made available, a use (Key Use) parameter value is required for all keys in the document to indicate each key''s intended usage.'
                      type: string
                    jwks:
                      description: 'List of JSON Web Key (JWK) - A JSON object that represents a cryptographic key. The members of the object represent properties of the key, including its value.'
                      type: array
                      items:
                        $ref: '#/components/schemas/JsonWebKey'
                      example: '{ "keys" : [ { "e" : "AQAB", "n" : "gmlDX_mgMcHX.." ] }'
                    sector_identifier_uri:
                      description: URL using the https scheme to be used in calculating Pseudonymous Identifiers by the OP.
                      type: string
                    subject_type:
                      description: Subject type requested for the Client ID. Valid types include pairwise and public.
                      type: string
                      enum:
                        - PAIRWISE
                        - PUBLIC
                    id_token_token_binding_cnf:
                      description: 'Specifies the JWT Confirmation Method member name (e.g. tbh) that the Relying Party expects when receiving Token Bound ID Tokens. The presence of this parameter indicates that the Relying Party supports Token Binding of ID Tokens. If omitted, the default is that the Relying Party does not support Token Binding of ID Tokens.'
                      type: string
                    rpt_as_jwt:
                      description: Specifies whether RPT should be return as signed JWT.
                      type: boolean
                    access_token_as_jwt:
                      description: Specifies whether access token as signed JWT.
                      type: boolean
                    access_token_signing_alg:
                      description: 'Specifies signing algorithm that has to be used during JWT signing. If it''s not specified, then the default OP signing algorithm will be used.'
                      type: string
                      enum:
                        - HS256
                        - HS384
                        - HS512
                        - RS256
                        - RS384
                        - RS512
                        - ES256
                        - ES384
                        - ES512
                        - PS256
                        - PS384
                        - PS512
                    id_token_signed_response_alg:
                      description: JWS alg algorithm (JWA) required for signing the ID Token issued to this Client.
                      type: string
                      enum:
                        - HS256 - HS384 - HS512 - RS256 - RS384 - RS512 - ES256 - ES384 - ES512 - PS256 - PS384 - PS512
                    id_token_encrypted_response_alg:
                      description: JWE alg algorithm (JWA) required for encrypting the ID Token issued to this Client.
                      type: string
                      enum:
                        - RSA1_5
                        - RSA-OAEP
                        - A128KW
                        - A256KW
                    id_token_encrypted_response_enc:
                      description: JWE enc algorithm (JWA) required for encrypting the ID Token issued to this Client.
                      type: string
                      enum:
                        - A128CBC+HS256
                        - A256CBC+HS512
                        - A128GCM
                        - A256GCM
                    userinfo_signed_response_alg:
                      description: JWS alg algorithm (JWA) required for signing UserInfo Responses.
                      type: string
                      enum:
                        - HS256
                        - HS384
                        - HS512
                        - RS256
                        - RS384
                        - RS512
                        - ES256
                        - ES384
                        - ES512
                        - PS256
                        - PS384
                        - PS512
                    userinfo_encrypted_response_alg:
                      description: JWE alg algorithm (JWA) required for encrypting UserInfo Responses.
                      type: string
                      enum:
                        - RSA1_5
                        - RSA-OAEP
                        - A128KW
                        - A256KW
                    userinfo_encrypted_response_enc:
                      description: JWE enc algorithm (JWA) required for encrypting UserInfo Responses.
                      type: string
                      enum:
                        - A128CBC+HS256
                        - A256CBC+HS512
                        - A128GCM
                        - A256GCM
                    request_object_signing_alg:
                      description: JWS alg algorithm (JWA) that must be used for signing Request Objects sent to the OP.
                      type: string
                      enum:
                        - HS256
                        - HS384
                        - HS512
                        - RS256
                        - RS384
                        - RS512
                        - ES256
                        - ES384
                        - ES512
                        - PS256
                        - PS384
                        - PS512
                    request_object_encryption_alg:
                      description: JWE alg algorithm (JWA) the RP is declaring that it may use for encrypting Request Objects sent to the OP.
                      type: string
                      enum:
                        - RSA1_5
                        - RSA-OAEP
                        - A128KW
                        - A256KW
                    request_object_encryption_enc:
                      description: JWE enc algorithm (JWA) the RP is declaring that it may use for encrypting Request Objects sent to the OP.
                      type: string
                      enum:
                        - A128CBC+HS256
                        - A256CBC+HS512
                        - A128GCM
                        - A256GCM
                    token_endpoint_auth_method:
                      description: Requested Client Authentication method for the Token Endpoint.
                      type: string
                      enum:
                        - client_secret_basic
                        - client_secret_post
                        - client_secret_jwt
                        - private_key_jwt
                        - none
                    token_endpoint_auth_signing_alg:
                      description: JWS alg algorithm (JWA) that must be used for signing the JWT used to authenticate the Client at the Token Endpoint for the private_key_jwt and client_secret_jwt authentication methods.
                      type: string
                      enum:
                        - HS256
                        - HS384
                        - HS512
                        - RS256
                        - RS384
                        - RS512
                        - ES256
                        - ES384
                        - ES512
                        - PS256
                        - PS384
                        - PS512
                    default_max_age:
                      description: Specifies the Default Maximum Authentication Age.
                      type: integer
                      format: int32
                      example: 1000000
                    require_auth_time:
                      description: Boolean value specifying whether the auth_time Claim in the ID Token is required. It is required when the value is true.
                      type: boolean
                    claims_redirect_uri:
                      description: Array of The Claims Redirect URIs to which the client wishes the authorization server to direct the requesting party's user agent after completing its interaction.
                      type: array
                      items:
                        type: string
                    logout_uri:
                      description: Specifies the URI using the https scheme that the authorization server can call to initiate a login at the client.
                      type: array
                      items:
                        type: string
                    logout_session_required:
                      description: 'Boolean value specifying whether the RP requires that a session ID query parameter be included to identify the RP session at the OP when the logout_uri is used. If omitted, the default value is false.'
                      type: boolean
                    persist_client_authorizations:
                      description: Specifies if the client authorization details are to be persisted. Default value is true.
                      type: boolean
                    include_claims_in_id_token:
                      description: 'If true then claims are included in token id, default value is false.'
                      type: boolean
                    refresh_token_lifetime:
                      description: Specifies the Client-specific refresh token expiration.
                      type: integer
                      format: int32
                      example: 100000000
                    access_token_lifetime:
                      description: Specifies the Client-specific access token expiration.
                      type: integer
                      format: int32
                      example: 100000000
                    default_acr_values:
                      description: Array of default requested Authentication Context Class Reference values that the Authorization Server must use for processing requests from the Client.
                      type: array
                      items:
                        type: string
                    initiate_login_uri:
                      description: Specifies the URI using the https scheme that the authorization server can call to initiate a login at the client.
                      type: string
                    exp:
                      description: 'Integer timestamp, measured in the number of seconds since January 1 1970 UTC, indicating when this permission will expire.'
                      type: string
                      format: date
                    request_uris:
                      description: Provide a list of requests_uri values that are pre-registered by the Client for use at the Authorization Server.
                      type: array
                      items:
                        type: string
                    authorized_origins:
                      description: Specifies authorized JavaScript origins.
                      type: array
                      items:
                        type: string
                    software_id:
                      description: Specifies a unique identifier string (UUID) assigned by the client developer or software publisher used by registration endpoints to identify the client software to be dynamically registered.
                      type: string
                      example: 4NRB1-0XZABZI9E6-5SM3R
                    software_version:
                      description: Specifies a version identifier string for the client software identified by 'software_id'. The value of the 'software_version' should change on any update to the client software identified by the same 'software_id'.
                      type: string
                      example: '2.1'
                    software_statement:
                      description: Specifies a software statement containing client metadata values about the client software as claims. This is a string value containing the entire signed JWT.
                      type: string
                    disabled:
                      description: Specifies whether client is disabled.
                      type: boolean
                    oxId:
                      description: oxAuth Attribute Scope Id.
                      type: string
                    deletable:
                      description: Specifies whether client is deletable.
                      type: boolean
                    client_attributes:
                      type: object
                      properties:
                        tlsClientAuthSubjectDn:
                          type: string
                        runIntrospectionScriptBeforeAccessTokenAsJwtCreationAndIncludeClaims:
                          description: Run Introspection Script Before Access Token as Jwt Creation and Include Claims. Default value is false.
                          type: boolean
                        keepClientAuthorizationAfterExpiration:
                          description: Keep Client Authorization After Expiration.
                          type: boolean
                    backchannel_authentication_request_signing_alg:
                      description: 'The JWS algorithm alg value that the Client will use for signing authentication request, as described in Section 7.1.1. of OAuth 2.0 [RFC6749]. When omitted, the Client will not send signed authentication requests.'
                      type: string
                      enum:
                        - RS256
                        - RS384
                        - RS512
                        - ES256
                        - ES384
                        - ES512
                        - PS256
                        - PS384
                        - PS512
                    backchannel_token_delivery_mode:
                      description: specifies how backchannel token will be delivered.
                      type: string
                    backchannel_client_notification_endpoint:
                      description: 'Client Initiated Backchannel Authentication (CIBA) enables a Client to initiate the authentication of an end-user by means of out-of-band mechanisms. Upon receipt of the notification, the Client makes a request to the token endpoint to obtain the tokens.'
                      type: string
                    backchannel_user_code_parameter:
                      description: 'Boolean value specifying whether the Client supports the user_code parameter. If omitted, the default value is false.'
                      type: boolean
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - read
  /oauth/openid/sectoridentifier:
    get:
      tags:
        - OAuth - OpenID Connect - Sector Identifiers
      summary: Gets list of OpenID Connect Sector Identifiers.
      description: Gets list of OpenID Connect Sector Identifiers.
      operationId: get-oauth-openid-sectoridentifier
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: List of OpenID Connect Sector Identifiers.
                description: List of OpenID Connect Sector Identifiers.
                type: array
                items:
                  type: object
                  description: Sector Identifier Details.
                  properties:
                    id:
                      description: XRI i-number. Sector Identifier to uniquely identify the sector.
                      type: string
                    description:
                      description: A human-readable string describing the sector.
                      type: string
                    redirect_uris:
                      description: Redirection URI values used by the Client. One of these registered Redirection URI values must exactly match the redirect_uri parameter value used in each Authorization Request
                      type: array
                      items:
                        type: string
                      example:
                        - 'https://client.example.org/cb'
                    client_id:
                      description: List of OAuth 2.0 Client Identifier valid at the Authorization Server.
                      type: array
                      items:
                        type: string
                      example: 1402.0ab17362-36cc-4ac8-9c73-20239de64364 API Requesting Party Client.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - read
    post:
      tags:
        - OAuth - OpenID Connect - Sector Identifiers
      summary: Adds an OpenID Connect Sector Identifier.
      description: Adds an OpenID Connect Sector Identifier.
      operationId: post-oauth-openid-sectoridentifier
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Sector Identifier Details.
              properties:
                id:
                  description: XRI i-number. Sector Identifier to uniquely identify the sector.
                  type: string
                description:
                  description: A human-readable string describing the sector.
                  type: string
                redirect_uris:
                  description: Redirection URI values used by the Client. One of these registered Redirection URI values must exactly match the redirect_uri parameter value used in each Authorization Request
                  type: array
                  items:
                    type: string
                  example:
                    - 'https://client.example.org/cb'
                client_id:
                  description: List of OAuth 2.0 Client Identifier valid at the Authorization Server.
                  type: array
                  items:
                    type: string
                  example: 1402.0ab17362-36cc-4ac8-9c73-20239de64364 API Requesting Party Client.
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - write
    put:
      tags:
        - OAuth - OpenID Connect - Sector Identifiers
      summary: Updates an OpenID Connect Sector Identifier.
      description: Updates an OpenID Connect Sector Identifier.
      operationId: put-oauth-openid-sectoridentifier
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Sector Identifier Details.
              properties:
                id:
                  description: XRI i-number. Sector Identifier to uniquely identify the sector.
                  type: string
                description:
                  description: A human-readable string describing the sector.
                  type: string
                redirect_uris:
                  description: Redirection URI values used by the Client. One of these registered Redirection URI values must exactly match the redirect_uri parameter value used in each Authorization Request
                  type: array
                  items:
                    type: string
                  example:
                    - 'https://client.example.org/cb'
                client_id:
                  description: List of OAuth 2.0 Client Identifier valid at the Authorization Server.
                  type: array
                  items:
                    type: string
                  example: 1402.0ab17362-36cc-4ac8-9c73-20239de64364 API Requesting Party Client.
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - write
  '/oauth/openid/sectoridentifier/{id}':
    parameters:
      - name: id
        in: path
        required: true
        description: Scope ID.
        schema:
          type: string
    get:
      tags:
        - OAuth - OpenID Connect - Sector Identifiers
      summary: Gets an OpenID Connect Sector Identifier with specified id.
      description: Gets an OpenID Connect Sector Identifier with specified id.
      operationId: get-oauth-openid-sectoridentifier-by-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Sector Identifier Details.
                properties:
                  id:
                    description: XRI i-number. Sector Identifier to uniquely identify the sector.
                    type: string
                  description:
                    description: A human-readable string describing the sector.
                    type: string
                  redirect_uris:
                    description: Redirection URI values used by the Client. One of these registered Redirection URI values must exactly match the redirect_uri parameter value used in each Authorization Request
                    type: array
                    items:
                      type: string
                    example:
                      - 'https://client.example.org/cb'
                  client_id:
                    description: List of OAuth 2.0 Client Identifier valid at the Authorization Server.
                    type: array
                    items:
                      type: string
                    example: 1402.0ab17362-36cc-4ac8-9c73-20239de64364 API Requesting Party Client.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - read
    delete:
      tags:
        - OAuth - OpenID Connect - Sector Identifiers
      summary: Deletes an OpenID Connect Sector Identifier with specified id.
      description: Deletes an OpenID Connect Sector Identifier with specified id.
      operationId: delete-oauth-openid-sectoridentifier-by-id
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - write
  /oauth/openid/sectoridentifier/search:
    parameters:
      - name: pattern
        in: query
        required: true
        description: Search pattern.
        schema:
          type: string
      - name: size
        in: query
        required: false
        description: Search size - max size of the results to return.
        schema:
          type: integer
    get:
      tags:
        - OAuth - OpenID Connect - Sector Identifiers
      summary: Searches OpenID Sector Identifiers by pattern.
      description: Searches OpenID Sector Identifiers by pattern.
      operationId: get-oauth-openid-sectoridentifier-search-by-pattern
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: List of OpenID Sector Identifiers.
                description: List of OpenID Sector Identifiers.
                type: array
                items:
                  type: object
                  description: Sector Identifier Details.
                  properties:
                    id:
                      description: XRI i-number. Sector Identifier to uniquely identify the sector.
                      type: string
                    description:
                      description: A human-readable string describing the sector.
                      type: string
                    redirect_uris:
                      description: Redirection URI values used by the Client. One of these registered Redirection URI values must exactly match the redirect_uri parameter value used in each Authorization Request
                      type: array
                      items:
                        type: string
                      example:
                        - 'https://client.example.org/cb'
                    client_id:
                      description: List of OAuth 2.0 Client Identifier valid at the Authorization Server.
                      type: array
                      items:
                        type: string
                      example: 1402.0ab17362-36cc-4ac8-9c73-20239de64364 API Requesting Party Client.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - read
  /oauth/uma/scopes:
    get:
      tags:
        - OAuth - UMA Scopes
      summary: Gets list of UMA scope description.
      description: Gets list of UMA scope description.
      operationId: get-oauth-uma-scopes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: UMA scope description list.
                description: List of UMA scope description.
                type: array
                items:
                  type: object
                  description: UmaScope
                  required:
                    - id
                    - name
                  properties:
                    id:
                      description: The base64url encoded id.
                      type: string
                    displayName:
                      description: A human-readable name of the scope.
                      type: string
                    iconUrl:
                      description: A URL for a graphic icon representing the scope. The referenced icon MAY be used by the authorization server in any user interface it presents to the resource owner.
                      type: string
                    authorizationPolicies:
                      description: Policies associated with all scopes.
                      type: array
                      items:
                        type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - read
    post:
      tags:
        - OAuth - UMA Scopes
      summary: Adds UMA scope description.
      description: Adds UMA scope description.
      operationId: post-oauth-uma-scopes
      requestBody:
        content:
          application/json:
            schema:
              title: UmaScope
              required:
                - id
                - name
              properties:
                id:
                  description: The base64url encoded id.
                  type: string
                displayName:
                  description: A human-readable name of the scope.
                  type: string
                iconUrl:
                  description: A URL for a graphic icon representing the scope. The referenced icon MAY be used by the authorization server in any user interface it presents to the resource owner.
                  type: string
                authorizationPolicies:
                  description: Policies associated with all scopes.
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - write
    put:
      tags:
        - OAuth - UMA Scopes
      summary: Updates an UMA scope description.
      description: Updates an UMA scope description.
      operationId: put-oauth-uma-scopes
      requestBody:
        content:
          application/json:
            schema:
              title: UmaScope
              required:
                - id
                - name
              properties:
                id:
                  description: The base64url encoded id.
                  type: string
                displayName:
                  description: A human-readable name of the scope.
                  type: string
                iconUrl:
                  description: A URL for a graphic icon representing the scope. The referenced icon MAY be used by the authorization server in any user interface it presents to the resource owner.
                  type: string
                authorizationPolicies:
                  description: Policies associated with all scopes.
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - write
  '/oauth/uma/scopes/{id}':
    parameters:
      - name: id
        in: path
        required: true
        description: Resource description ID.
        schema:
          type: string
    get:
      tags:
        - OAuth - UMA Scopes
      summary: Gets UMA scope description with specified id.
      description: Gets UMA scope description with specified id.
      operationId: get-oauth-uma-scopes-by-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: UmaScope
                required:
                  - id
                  - name
                properties:
                  id:
                    description: The base64url encoded id.
                    type: string
                  displayName:
                    description: A human-readable name of the scope.
                    type: string
                  iconUrl:
                    description: A URL for a graphic icon representing the scope. The referenced icon MAY be used by the authorization server in any user interface it presents to the resource owner.
                    type: string
                  authorizationPolicies:
                    description: Policies associated with all scopes.
                    type: array
                    items:
                      type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - read
    delete:
      tags:
        - OAuth - UMA Scopes
      summary: Deletes UMA scope description with specified id.
      description: Deletes UMA scope description with specified id.
      operationId: delete-oauth-uma-scopes-by-id
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - write
  /oauth/uma/scopes/search:
    parameters:
      - name: pattern
        in: query
        required: true
        description: Search pattern.
        schema:
          type: string
      - name: size
        in: query
        required: false
        description: Search size - max size of the results to return.
        schema:
          type: integer
    get:
      tags:
        - OAuth - UMA Scopes
      summary: Searches UMA scope description by pattern.
      description: Searches UMA scope description by pattern.
      operationId: get-oauth-uma-scopes-search-by-pattern
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: UMA scope description list.
                description: List of UMA scope description.
                type: array
                items:
                  type: object
                  description: UmaScope
                  required:
                    - id
                    - name
                  properties:
                    id:
                      description: The base64url encoded id.
                      type: string
                    displayName:
                      description: A human-readable name of the scope.
                      type: string
                    iconUrl:
                      description: A URL for a graphic icon representing the scope. The referenced icon MAY be used by the authorization server in any user interface it presents to the resource owner.
                      type: string
                    authorizationPolicies:
                      description: Policies associated with all scopes.
                      type: array
                      items:
                        type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - read
  /oauth/uma/scopes/search-limit:
    parameters:
      - name: size
        in: query
        required: true
        description: Search size - max size of the results to return.
        schema:
          type: integer
    get:
      tags:
        - OAuth - UMA Scopes
      summary: Gets UMA scope description list with search result limited with specified max size.
      description: Gets UMA scope description list with search result limited with specified max size.
      operationId: get-oauth-uma-scopes-search-limit
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: UMA scope description list.
                description: List of UMA scope description.
                type: array
                items:
                  type: object
                  description: UmaScope
                  required:
                    - id
                    - name
                  properties:
                    id:
                      description: The base64url encoded id.
                      type: string
                    displayName:
                      description: A human-readable name of the scope.
                      type: string
                    iconUrl:
                      description: A URL for a graphic icon representing the scope. The referenced icon MAY be used by the authorization server in any user interface it presents to the resource owner.
                      type: string
                    authorizationPolicies:
                      description: Policies associated with all scopes.
                      type: array
                      items:
                        type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - read
        - oxAuth: []
  /oauth/uma/resources:
    get:
      tags:
        - OAuth - UMA Resources
      summary: Gets list of UMA Resources.
      description: Gets list of UMA Resources.
      operationId: get-oauth-uma-resources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: UMA Resource list.
                description: List of UMA Resource.
                type: array
                items:
                  type: object
                  description: UMAResource
                  required:
                    - id
                    - name
                  properties:
                    id:
                      description: Resource id.
                      type: string
                    name:
                      description: A human-readable name of the scope.
                      type: string
                    iconUrl:
                      description: A URL for a graphic icon representing the resource.
                      type: string
                    scopes:
                      description: Applicable resource scopes.
                      type: array
                      items:
                        type: string
                    scopeExpression:
                      description: List of resource scope expression.
                      type: array
                      items:
                        type: string
                    clients:
                      description: List of associated clients.
                      type: array
                      items:
                        type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - read
    post:
      tags:
        - OAuth - UMA Resources
      summary: Adds an UMA Resource.
      description: Adds an UMA Resource.
      operationId: post-oauth-uma-resources
      requestBody:
        content:
          application/json:
            schema:
              title: UMAResource
              required:
                - id
                - name
              properties:
                id:
                  description: Resource id.
                  type: string
                name:
                  description: A human-readable name of the scope.
                  type: string
                iconUrl:
                  description: A URL for a graphic icon representing the resource.
                  type: string
                scopes:
                  description: Applicable resource scopes.
                  type: array
                  items:
                    type: string
                scopeExpression:
                  description: List of resource scope expression.
                  type: array
                  items:
                    type: string
                clients:
                  description: List of associated clients.
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - write
    put:
      tags:
        - OAuth - UMA Resources
      summary: Updates an UMA Resource.
      description: Updates an UMA Resource.
      operationId: put-oauth-uma-resources
      requestBody:
        content:
          application/json:
            schema:
              title: UMAResource
              required:
                - id
                - name
              properties:
                id:
                  description: Resource id.
                  type: string
                name:
                  description: A human-readable name of the scope.
                  type: string
                iconUrl:
                  description: A URL for a graphic icon representing the resource.
                  type: string
                scopes:
                  description: Applicable resource scopes.
                  type: array
                  items:
                    type: string
                scopeExpression:
                  description: List of resource scope expression.
                  type: array
                  items:
                    type: string
                clients:
                  description: List of associated clients.
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - write
  '/oauth/uma/resources/{id}':
    parameters:
      - name: id
        in: path
        required: true
        description: Resource description ID.
        schema:
          type: string
    get:
      tags:
        - OAuth - UMA Resources
      summary: Gets an UMA Resource with specified id.
      description: Gets an UMA Resource with specified id.
      operationId: get-oauth-uma-resources-by-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: UMAResource
                required:
                  - id
                  - name
                properties:
                  id:
                    description: Resource id.
                    type: string
                  name:
                    description: A human-readable name of the scope.
                    type: string
                  iconUrl:
                    description: A URL for a graphic icon representing the resource.
                    type: string
                  scopes:
                    description: Applicable resource scopes.
                    type: array
                    items:
                      type: string
                  scopeExpression:
                    description: List of resource scope expression.
                    type: array
                    items:
                      type: string
                  clients:
                    description: List of associated clients.
                    type: array
                    items:
                      type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - read
    delete:
      tags:
        - OAuth - UMA Resources
      summary: Deletes an UMA Resource with specified id.
      description: Deletes an UMA Resource with specified id.
      operationId: delete-oauth-uma-resources-by-id
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - write
  /oauth/uma/resources/search:
    parameters:
      - name: pattern
        in: query
        required: true
        description: Search pattern.
        schema:
          type: string
      - name: size
        in: query
        required: false
        description: Search size - max size of the results to return.
        schema:
          type: integer
    get:
      tags:
        - OAuth - UMA Resources
      summary: Searches UMA Resources by pattern.
      description: Searches UMA Resources by pattern.
      operationId: get-oauth-uma-resources-search-by-pattern
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: UMA Resource list.
                description: List of UMA Resource.
                type: array
                items:
                  type: object
                  description: UMAResource
                  required:
                    - id
                    - name
                  properties:
                    id:
                      description: Resource id.
                      type: string
                    name:
                      description: A human-readable name of the scope.
                      type: string
                    iconUrl:
                      description: A URL for a graphic icon representing the resource.
                      type: string
                    scopes:
                      description: Applicable resource scopes.
                      type: array
                      items:
                        type: string
                    scopeExpression:
                      description: List of resource scope expression.
                      type: array
                      items:
                        type: string
                    clients:
                      description: List of associated clients.
                      type: array
                      items:
                        type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - read
  /oauth/uma/resources/search-limit:
    parameters:
      - name: size
        in: query
        required: true
        description: Search size - max size of the results to return.
        schema:
          type: integer
    get:
      tags:
        - OAuth - UMA Resources
      summary: Gets UMA Resource list with search result limited with specified max size.
      description: Gets UMA Resource list with search result limited with specified max size.
      operationId: get-oauth-uma-resources-search-limit
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: UMA Resource list.
                description: List of UMA Resource.
                type: array
                items:
                  type: object
                  description: UMAResource
                  required:
                    - id
                    - name
                  properties:
                    id:
                      description: Resource id.
                      type: string
                    name:
                      description: A human-readable name of the scope.
                      type: string
                    iconUrl:
                      description: A URL for a graphic icon representing the resource.
                      type: string
                    scopes:
                      description: Applicable resource scopes.
                      type: array
                      items:
                        type: string
                    scopeExpression:
                      description: List of resource scope expression.
                      type: array
                      items:
                        type: string
                    clients:
                      description: List of associated clients.
                      type: array
                      items:
                        type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      security:
        - oxAuth:
            - read
components:
  securitySchemes:
    oxAuth:
      type: oauth2
      description: Authorization
      flows:
        clientCredentials:
          tokenUrl: 'https://{op-hostname}/.../token'
          scopes:
            read: Grants read access
            write: Grants write access
            admin: Grants read and write access to administrative information
  responses:
    Found:
      description: Resource Found.
      content: {}
    InvalidRequest:
      description: Invalid parameters are provided to endpoint.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Unauthorized:
      description: Access token is missing or invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    AccessDenied:
      description: Invalid details provided hence access denied.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    NotFound:
      description: Resource Not Found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    NotAcceptable:
      description: Request Not Acceptable.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    InternalServerError:
      description: Internal error occurred. Please check log file for details.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
  schemas:
    ErrorResponse:
      required:
        - error_code
        - error_description
      type: object
      properties:
        error_code:
          type: string
        error_description:
          type: string
        details:
          type: string
    CustomScript:
      required:
        - id
        - name
      type: object
      properties:
        dn:
          type: string
        inum:
          type: string
        name:
          type: string
          pattern: '^[a-zA-Z0-9_\\-\\:\\/\\.]+$'
          minLength: 1
          maxLength: 60
          description: 'Name should contain only letters, digits and underscores.'
        aliases:
          type: array
          items:
            type: string
        description:
          type: string
        script:
          type: string
          description: Actual script.
        scriptType:
          type: string
          enum:
            - person_authentication
            - introspection
            - resource_owner_password_credentials
            - application_session
            - cache_refresh
            - update_user
            - user_registration
            - client_registration
            - id_generator
            - uma_rpt_policy
            - uma_rpt_claims
            - uma_claims_gathering
            - consent_gathering
            - dynamic_scope
            - spontaneous_scope
            - end_session
            - post_authn
            - scim
            - ciba_end_user_notification
            - persistence_extension
            - idp
        programmingLanguage:
          type: string
          enum:
            - python
            - javascript
          description: Specifies programming language of the custom script.
        moduleProperties:
          type: array
          items:
            type: object
            properties:
              value1:
                type: string
              value2:
                type: string
              description:
                type: string
        configurationProperties:
          type: array
          items:
            type: object
            properties:
              value1:
                type: string
              value2:
                type: string
              description:
                type: string
              hide:
                type: boolean
        level:
          type: integer
        revision:
          type: integer
          format: int64
        enabled:
          type: boolean
        scriptError:
          type: object
          properties:
            raisedAt:
              type: string
              format: date
            stackTrace:
              type: string
        modified:
          type: boolean
        internal:
          type: boolean
    LdapConfiguration:
      type: object
      required:
        - configId
        - bindDN
        - maxConnections
        - primaryKey
        - localPrimaryKey
        - servers
        - baseDNs
        - useSSL
      properties:
        configId:
          type: string
          description: Unique identifier - Name
          example: auth_ldap_server
        bindDN:
          type: string
          description: User Distingusihed Name for binding.
        maxConnections:
          type: integer
          description: Total number of simultaneous connections allowed.
          format: int32
          default: 2
        primaryKey:
          type: string
          description: Used to search and bind operations in configured LDAP server.
          example: 'SAMAccountName,uid, email'
        localPrimaryKey:
          type: string
          description: Used to search local user entry in Gluu Server’s internal LDAP directory.
          example: 'uid, email'
        servers:
          type: array
          description: List of LDAP authentication servers.
          items:
            type: string
            description: Unique name of the authentication server and port number.
            example: 'authserver.org:63'
        baseDNs:
          type: array
          description: list of LDAP base Distingusihed Name
          items:
            type: string
        useSSL:
          type: boolean
        bindPassword:
          type: string
          description: User password for binding.
        useAnonymousBind:
          type: boolean
          description: Boolean value used to indicate if the LDAP Server will allow anonymous bind request.
        enabled:
          type: boolean
        version:
          type: integer
    CouchbaseConfiguration:
      type: object
      required:
        - userName
        - userPassword
        - servers
        - defaultBucket
        - buckets
      properties:
        userName:
          type: string
          description: Couchbase server user.
        userPassword:
          type: string
          description: Encoded Couchbase server user password.
        servers:
          type: array
          items:
            type: string
          description: Couchbase server host and port.
        defaultBucket:
          type: string
          description: Main bucket that application should use if other mapping rules were not applied.
        buckets:
          type: array
          items:
            type: string
          description: List of buckets defining mapping rules.
        passwordEncryptionMethod:
          type: string
          enum:
            - SHA
            - SSHA
            - SHA-256
            - SSHA-256
            - SHA-384
            - SSHA-384
            - SHA-512
            - SSHA-512
            - MD5
            - SMD5
            - CRYPT
            - CRYPT-MD5
            - CRYPT-SHA-256
            - CRYPT-SHA-512
            - CRYPT-BCRYPT
            - CRYPT-BCRYPT
            - PKCS5S2
        operationTracingEnabled:
          type: boolean
          default: false
        mutationTokensEnabled:
          type: boolean
          description: 'If mutation tokens are enabled, they can be used for advanced durability requirements, as well as optimized RYOW consistency.'
          default: false
        connectTimeout:
          type: integer
          format: int32
        computationPoolSize:
          type: integer
          format: int32
          description: 'Sets the pool size (number of threads to use) for all non-blocking operations, default value is the number of CPUs.'
        useSSL:
          type: boolean
        sslTrustStoreFile:
          type: string
          description: The path to the trust store file to use. It contains the trusted certificates.
        sslTrustStorePin:
          type: string
          description: The PIN to use to access the contents of the trust store.
        sslTrustStoreFormat:
          type: string
          description: The format to use for the trust store.
        binaryAttributes:
          type: array
          items:
            type: string
        certificateAttributes:
          type: array
          items:
            type: string
    JsonWebKey:
      required:
        - alg
        - exp
        - key_ops
        - kid
        - kty
        - use
        - x5c
      type: object
      properties:
        kid:
          type: string
        kty:
          type: string
        use:
          type: string
        alg:
          type: string
        crv:
          type: string
        exp:
          type: integer
          format: int64
        x5c:
          type: array
          items:
            type: string
        'n':
          type: string
        e:
          type: string
        x:
          type: string
        'y':
          type: string
