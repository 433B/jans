openapi: 3.0.1
info:
  title: oxauth-config
  description: oxauth-config - Authorization services
  contact:
    email: xxx@gluu.org
  license:
    name: License
    url: 'https://github.com/GluuFederation/oxauth-config/blob/master/LICENSE'
  version: '1.0'
servers:
  - url: 'https://gluu.org/'
tags:
  - name: developers
    description: oxauth-config enables access to the features available via the existing oxAuth API.
  - name: Attribute
  - name: Authentication
  - name: Custom Scripts
  - name: Graphics
  - name: LDAP configuration
  - name: Library
  - name: Properties
paths:
  /config/properties:
    get:      
      summary: Gets all oxauth configuration properties.
      description: Gets all oxauth configuration properties.
      operationId: properties
      tags:
        - Properties
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: AppConfiguration
                description: List of all oxauth-config properties.
                items:
                  type: object
                  title: AppConfiguration
                  description: App configuration properties.
                  required:
                    - sessionAsJwt
                    - issuer
                    - baseEndpoint
                    - authorizationEndpoint
                    - tokenEndpoint
                    - tokenRevocationEndpoint
                    - userInfoEndpoint
                    - clientInfoEndpoint
                    - checkSessionIFrame
                    - endSessionEndpoint
                    - jwksUri
                    - registrationEndpoint
                    - openIdDiscoveryEndpoint
                    - openIdConfigurationEndpoint
                    - idGenerationEndpoint
                    - introspectionEndpoint
                    - introspectionAccessTokenMustHaveUmaProtectionScope
                    - umaConfigurationEndpoint
                    - oxElevenGenerateKeyEndpoint
                    - oxElevenSignEndpoint
                    - oxElevenVerifySignatureEndpoint
                    - oxElevenDeleteKeyEndpoint
                    - oxElevenJwksEndpoint
                    - openidSubAttribute
                    - responseTypesSupported
                    - responseModesSupported
                    - grantTypesSupported
                    - defaultSubjectType
                    - userInfoSigningAlgValuesSupported
                    - userInfoEncryptionAlgValuesSupported
                    - userInfoEncryptionEncValuesSupported
                    - idTokenSigningAlgValuesSupported
                    - idTokenEncryptionAlgValuesSupported
                    - idTokenEncryptionEncValuesSupported
                    - requestObjectSigningAlgValuesSupported
                    - requestObjectEncryptionAlgValuesSupported
                    - requestObjectEncryptionEncValuesSupported
                    - tokenEndpointAuthMethodsSupported
                    - tokenEndpointAuthSigningAlgValuesSupported
                    - dynamicRegistrationCustomAttributes
                    - displayValuesSupported
                    - claimTypesSupported
                    - serviceDocumentation
                    - claimsLocalesSupported
                    - idTokenTokenBindingCnfValuesSupported
                    - uiLocalesSupported
                    - opPolicyUri
                    - opTosUri
                    - authorizationCodeLifetime
                    - refreshTokenLifetime
                    - idTokenLifetime
                    - accessTokenLifetime
                    - umaRptLifetime
                    - umaTicketLifetime
                    - umaPctLifetime
                    - umaResourceLifetime
                  properties:
                    sessionAsJwt:
                      type: boolean
                      description: Boolean value true saves session data as a JWT.
                    issuer:
                      type: string
                      description: URL using the https scheme that OP asserts as Issuer identifier.
                      example: 'https://server.example.com/'
                    baseEndpoint:
                      type: string
                      description: The base URL for endpoints.
                      example: 'https://server.example.com/oxauth/restv1'
                    authorizationEndpoint:
                      type: string
                      description: The authorization endpoint URL.
                      example: 'https://server.example.com/oxauth/restv1/authorize'
                    tokenEndpoint:
                      type: string
                      description: The token endpoint URL.
                      example: 'https://server.example.com/oxauth/restv1/token'
                    tokenRevocationEndpoint:
                      type: string
                      description: The URL for the access_token or refresh_token revocation endpoint.
                      example: 'https://server.example.com/oxauth/restv1/revoke'
                    userInfoEndpoint:
                      type: string
                      description: The User Info endpoint URL.
                      example: 'https://server.example.com/oxauth/restv1/userinfo'
                    clientInfoEndpoint:
                      type: string
                      description: The Client Info endpoint URL.
                      example: 'https://server.example.com/oxauth/restv1/clientinfo'
                    checkSessionIFrame:
                      type: string
                      description: URL for an OP IFrame that supports cross-origin communications for session state information with the RP Client using the HTML5 postMessage API.
                      example: 'https://server.example.com/oxauth/opiframe.htm'
                    endSessionEndpoint:
                      type: string
                      description: URL at the OP to which an RP can perform a redirect to request that the end user be logged out at the OP.
                      example: 'https://server.example.com/oxauth/restv1/end_session'
                    jwksUri:
                      type: string
                      description: URL of the OP's JSON Web Key Set (JWK) document. This contains the signing key(s) the RP uses to validate signatures from the OP.
                      example: 'https://server.example.com/oxauth/restv1/jwks'
                    registrationEndpoint:
                      type: string
                      description: URL of the Registration Enpoint.
                      example: 'https://server.example.com/oxauth/restv1/register'
                    openIdDiscoveryEndpoint:
                      type: string
                      description: URL for the Discovery Endpoint.
                      example: 'https://server.example.com/.well-known/webfinger'
                    openIdConfigurationEndpoint:
                      type: string
                      description: URL for the Open ID Connect Configuration Endpoint.
                      example: 'https://server.example.com/.well-known/openid-configuration'
                    idGenerationEndpoint:
                      type: string
                      description: URL for the ID Generation Endpoint.
                      example: 'https://server.example.com/oxauth/restv1/id'
                    introspectionEndpoint:
                      type: string
                      description: URL for the Introspection Endpoint.
                      example: 'https://server.example.com/oxauth/restv1/introspection'
                    introspectionAccessTokenMustHaveUmaProtectionScope:
                      type: boolean
                      description: Reject introspection requests if access_token in Authorization header does not have uma_protection scope.
                      default: false
                    umaConfigurationEndpoint:
                      type: string
                      description: URL for the UMA Configuration Endpoint.
                      example: 'https://server.example.com/oxauth/restv1/uma2-configuration'
                    sectorIdentifierEndpoint:
                      type: string
                      description: URL for the Sector Identifier Endpoint.
                      example: null
                    oxElevenGenerateKeyEndpoint:
                      type: string
                      description: URL for the oxEleven Generate Key Endpoint.
                      example: 'https://server.example.com/oxeleven/rest/oxeleven/generateKey'
                    oxElevenSignEndpoint:
                      type: string
                      description: URL for the oxEleven Sign Endpoint.
                      example: 'https://server.example.com/oxeleven/rest/oxeleven/sign'
                    oxElevenVerifySignatureEndpoint:
                      type: string
                      description: URL for the oxEleven Verify Signature Endpoint.
                      example: 'https://server.example.com/oxeleven/rest/oxeleven/verifySignature'
                    oxElevenDeleteKeyEndpoint:
                      type: string
                      description: URL for the oxEleven Delete Key Endpoint.
                      example: 'https://server.example.com/oxeleven/rest/oxeleven/deleteKey'
                    oxElevenJwksEndpoint:
                      type: string
                      description: URL for the oxEleven JWKS Endpoint..
                      example: null
                    openidSubAttribute:
                      type: string
                      description: Specifies which LDAP attribute is used for the subject identifier claim.
                      example: inum
                    responseTypesSupported:
                      type: array
                      description: A list of the OAuth 2.0 response_type values that this OP supports.
                      minItems: 1
                      items:
                        type: string
                      example:
                        - code
                        - token
                        - id_token
                    responseModesSupported:
                      type: array
                      description: A list of the OAuth 2.0 Response Mode values that this OP supports.
                      items:
                        type: string
                      example:
                        - query
                        - fragment
                        - form_post
                    grantTypesSupported:
                      type: array
                      description: A list of the OAuth 2.0 Grant Type values that this OP supports.
                      items:
                        type: string
                      example:
                        - authorization_code
                        - implicit
                        - password
                        - client_credentials
                        - refresh_token
                        - '\urn\:ietf\:params\:oauth\:grant-type\:uma-ticket'
                        - '\urn\:openid\:params\:grant-type\:ciba'
                    dynamicGrantTypeDefault:
                      type: array
                      description: list of the OAuth 2.0 Grant Type values that it's possible to set via client registration API..
                      items:
                        type: string
                      example:
                        - authorization_code
                        - implicit
                        - password
                        - client_credentials
                        - refresh_token
                        - 'urn:ietf:params:oauth:grant-type:uma-ticket'
                        - 'urn:openid:params:grant-type:ciba'
                    subjectTypesSupported:
                      type: array
                      description: A list of the Subject Identifier types that this OP supports. Valid types include pairwise and public.
                      items:
                        type: string
                      example:
                        - public
                        - pairwise
                    defaultSubjectType:
                      type: string
                      description: Default Subject Type used for Dynamic Client Registration.
                      items:
                        type: string
                      example:
                        - public
                        - pairwise
                    userInfoSigningAlgValuesSupported:
                      type: array
                      description: A list of the JWS signing algorithms (alg values) JWA supported by the UserInfo Endpoint to encode the Claims in a JWT.
                      items:
                        type: string
                      example:
                        - HS256
                        - HS384
                        - HS512
                        - RS256
                        - RS384
                        - RS512
                        - ES256
                        - ES384
                        - ES512
                        - PS256
                        - PS384
                        - PS512
                    userInfoEncryptionAlgValuesSupported:
                      type: array
                      description: A list of the JWE encryption algorithms (alg values) JWA supported by the UserInfo Endpoint to encode the Claims in a JWT.
                      items:
                        type: string
                      example:
                        - RSA1_5
                        - RSA-OAEP
                        - A128KW
                        - A256KW
                    userInfoEncryptionEncValuesSupported:
                      type: array
                      description: A list of the JWE encryption algorithms (enc values) JWA supported by the UserInfo Endpoint to encode the Claims in a JWT.
                      items:
                        type: string
                      example:
                        - A128CBC+HS256
                        - A256CBC+HS512
                        - A128GCM
                        - A256GCM
                    idTokenSigningAlgValuesSupported:
                      type: array
                      description: A list of the JWS signing algorithms (alg values) supported by the OP for the ID Token to encode the Claims in a JWT.
                      items:
                        type: string
                      example:
                        - none
                        - HS256
                        - HS384
                        - HS512
                        - RS256
                        - RS384
                        - RS512
                        - ES256
                        - ES384
                        - ES512
                        - PS256
                        - PS384
                        - PS512
                    idTokenEncryptionAlgValuesSupported:
                      type: array
                      description: A list of the JWE encryption algorithms (alg values) supported by the OP for the ID Token to encode the Claims in a JWT.
                      items:
                        type: string
                      example:
                        - RSA1_5
                        - RSA-OAEP
                        - A128KW
                        - A256KW
                    idTokenEncryptionEncValuesSupported:
                      type: array
                      description: A list of the JWE encryption algorithms (enc values) supported by the OP for the ID Token to encode the Claims in a JWT.
                      items:
                        type: string
                      example:
                        - A128CBC+HS256
                        - A256CBC+HS512
                        - A128GCM
                        - A256GCM
                    requestObjectSigningAlgValuesSupported:
                      type: array
                      description: A list of the JWS signing algorithms (alg values) supported by the OP for Request Objects.
                      items:
                        type: string
                      example:
                        - none
                        - HS256
                        - HS384
                        - HS512
                        - RS256
                        - RS384
                        - RS512
                        - ES256
                        - ES384
                        - ES512
                        - PS256
                        - PS384
                        - PS512
                    requestObjectEncryptionAlgValuesSupported:
                      type: array
                      description: A list of the JWE encryption algorithms (alg values) supported by the OP for Request Objects.
                      items:
                        type: string
                      example:
                        - RSA1_5
                        - RSA-OAEP
                        - A128KW
                        - A256KW
                    requestObjectEncryptionEncValuesSupported:
                      type: array
                      description: A list of the JWE encryption algorithms (enc values) supported by the OP for Request Objects.
                      items:
                        type: string
                      example:
                        - A128CBC+HS256
                        - A256CBC+HS512
                        - A128GCM
                        - A256GCM
                    tokenEndpointAuthMethodsSupported:
                      type: array
                      description: A list of Client Authentication methods supported by this Token Endpoint.
                      items:
                        type: string
                      example:
                        - client_secret_basic
                        - client_secret_post
                        - client_secret_jwt
                        - private_key_jwt
                    tokenEndpointAuthSigningAlgValuesSupported:
                      type: array
                      description: A list of the JWS signing algorithms (alg values) supported by the Token Endpoint for the signature on the JWT used to authenticate the Client at the Token Endpoint for the private_key_jwt and client_secret_jwt authentication methods.
                      items:
                        type: string
                      example:
                        - HS256
                        - HS384
                        - HS512
                        - RS256
                        - RS384
                        - RS512
                        - ES256
                        - ES384
                        - ES512
                        - PS256
                        - PS384
                        - PS512
                    dynamicRegistrationCustomAttributes:
                      type: array
                      description: Custom attributes for the Dynamic registration.
                      items:
                        type: string
                      example:
                        - oxAuthTrustedClient
                    displayValuesSupported:
                      type: array
                      description: A list of the display parameter values that the OpenID Provider supports.
                      items:
                        type: string
                      example:
                        - page
                        - popup
                    claimTypesSupported:
                      type: array
                      description: A list of the Claim Types that the OpenID Provider supports.
                      items:
                        type: string
                      example:
                        - normal
                    serviceDocumentation:
                      type: string
                      description: URL of a page containing human-readable information that developers might want or need to know when using the OpenID Provider.
                      items:
                        type: string
                      format: url
                      example: 'http://gluu.org/docs'
                    claimsLocalesSupported:
                      type: array
                      description: Languages and scripts supported for values in Claims being returned.
                      items:
                        type: string
                      example:
                        - en
                    idTokenTokenBindingCnfValuesSupported:
                      type: array
                      description: 'Array containing a list of the JWT Confirmation Method member names supported by the OP for Token Binding of ID Tokens. The presence of this parameter indicates that the OpenID Provider supports Token Binding of ID Tokens. If omitted, the default is that the OpenID Provider does not support Token Binding of ID Tokens.'
                      items:
                        type: string
                      example:
                        - tbh
                    uiLocalesSupported:
                      type: array
                      description: Languages and scripts supported for the user interface.
                      items:
                        type: string
                      example:
                        - en
                        - es
                    persistIdTokenInLdap:
                      type: boolean
                      description: Specifies whether to persist id_token into LDAP (otherwise saves into cache).
                      default: false
                    persistRefreshTokenInLdap:
                      type: boolean
                      description: Specifies whether to persist refresh_token into LDAP (otherwise saves into cache).
                      default: true
                    claimsParameterSupported:
                      type: boolean
                      description: Specifies whether the OP supports use of the claims parameter.
                      default: false
                    requestParameterSupported:
                      type: boolean
                      description: Boolean value specifying whether the OP supports use of the request parameter.
                      default: false
                    requestUriParameterSupported:
                      type: boolean
                      description: Boolean value specifying whether the OP supports use of the request_uri parameter.
                      default: false
                    requireRequestUriRegistration:
                      type: boolean
                      description: Boolean value specifying whether the OP requires any request_uri values used to be pre-registered using the request_uris registration parameter.
                      default: false
                    opPolicyUri:
                      type: string
                      description: URL that the OpenID Provider provides to the person registering the Client to read about the OP's requirements on how the Relying Party can use the data provided by the OP.
                      example: 'http://ox.gluu.org/doku.php?id=oxauth:policy'
                    opTosUri:
                      type: string
                      description: URL that the OpenID Provider provides to the person registering the Client to read about OpenID Provider's terms of service.
                      example: 'http://ox.gluu.org/doku.php?id=oxauth:tos'
                    authorizationCodeLifetime:
                      type: integer
                      description: The lifetime of the Authorization Code.
                      multipleOf: 1
                      minimum: 1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      example: 60
                    refreshTokenLifetime:
                      type: integer
                      description: The lifetime of the Refresh Token.
                      multipleOf: 1
                      minimum: 1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      example: 14400
                    idTokenLifetime:
                      type: integer
                      description: The lifetime of the ID Token.
                      multipleOf: 1
                      minimum: 1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      example: 3600
                    accessTokenLifetime:
                      type: integer
                      description: The lifetime of the short lived Access Token.
                      multipleOf: 1
                      minimum: 1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      example: 3600
                    umaRptLifetime:
                      type: integer
                      description: UMA RPT lifetime.
                      multipleOf: 1
                      minimum: 1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      example: 3600
                    umaTicketLifetime:
                      type: integer
                      description: UMA ticket lifetime.
                      multipleOf: 1
                      minimum: 1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      example: 3600
                    umaPctLifetime:
                      type: integer
                      description: UMA PCT lifetime.
                      multipleOf: 1
                      minimum: 1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      example: 3600
                    umaResourceLifetime:
                      type: integer
                      description: UMA PCT lifetime.
                      multipleOf: 1
                      minimum: 1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      example: 3600
                    umaAddScopesAutomatically:
                      type: boolean
                      description: Add UMA scopes automatically if it is not registered yet.
                      default: false
                    umaValidateClaimToken:
                      type: boolean
                      description: Validate claim_token as id_token assuming it is issued by local idp.
                      default: false
                    umaGrantAccessIfNoPolicies:
                      type: boolean
                      description: Specify whether to grant access to resources if there is no any policies associated with scopes.
                      default: false
                    umaRestrictResourceToAssociatedClient:
                      type: boolean
                      description: Restrict access to resource by associated client.
                      default: false
                    umaKeepClientDuringResourceSetRegistration:
                      type: boolean
                      description: Save client information during resource registration.
                      default: false
                    umaRptAsJwt:
                      type: boolean
                      description: Issue RPT as JWT or as random string.
                      default: false
                    cleanServiceInterval:
                      type: integer
                      description: Time interval for the Clean Service in seconds.
                      multipleOf: 1
                      minimum: 1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      example: 60
                    cleanServiceBaseDns:
                      type: array
                      description: List of additional base dns under which AS will look up for expired entities.
                      items:
                        type: string
                      minItems: 0
                      uniqueItems: true
                      example:
                        - ssn
                    cleanServiceBatchChunkSize:
                      type: integer
                      description: Each clean up iteration fetches chunk of expired data per base dn and removes it from storage.
                      multipleOf: 1
                      minimum: 1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      example: 10000
                    keyRegenerationEnabled:
                      type: boolean
                      description: Boolean value specifying whether to regenerate keys.
                      default: false
                    keyRegenerationInterval:
                      type: integer
                      description: The interval for key regeneration in hours.
                      multipleOf: 1
                      minimum: 1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      example: 48
                    defaultSignatureAlgorithm:
                      type: string
                      description: The default signature algorithm to sign ID Tokens.
                      items:
                        type: string
                      example:
                        - HS256
                        - HS384
                        - HS512
                        - RS256
                        - RS384
                        - RS512
                        - ES256
                        - ES384
                        - ES512
                    oxOpenIdConnectVersion:
                      type: string
                      description: OpenID Connect Version.
                      minLength: 1
                      example: openidconnect-1.0
                    oxId:
                      type: string
                      description: URL for the Inum generator Service.
                      format: url
                      minLength: 1
                      example: 'https://server.example.com/oxid/service/gluu/inum'
                    dynamicRegistrationEnabled:
                      type: boolean
                      description: Boolean value specifying whether to enable Dynamic Registration.
                      default: false
                    dynamicRegistrationExpirationTime:
                      type: integer
                      description: 'Expiration time in seconds for clients created with dynamic registration, -1 means never expire.'
                      multipleOf: 1
                      minimum: 0
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      default: -1
                    dynamicRegistrationPersistClientAuthorizations:
                      type: boolean
                      description: Boolean value specifying whether to persist client authorizations.
                      default: false
                    trustedClientEnabled:
                      type: boolean
                      description: Boolean value specifying whether a client is trusted and no authorization is required.
                      default: false
                    dynamicRegistrationScopesParamEnabled:
                      type: boolean
                      description: Boolean value specifying whether to enable scopes parameter in dynamic registration.
                      default: false
                    dynamicRegistrationCustomObjectClass:
                      type: string
                      description: LDAP custom object class for dynamic registration.
                      minLength: 1
                    personCustomObjectClassList:
                      type: array
                      description: LDAP custom object class list for dynamic person enrollment.
                      uniqueItems: true
                      minItems: 0
                      items:
                        type: string
                      example:
                        - gluuCustomPerson
                        - gluuPerson
                    authenticationFiltersEnabled:
                      type: boolean
                      description: Boolean value specifying whether to enable user authentication filters.
                      default: false
                    clientAuthenticationFiltersEnabled:
                      type: boolean
                      description: Boolean value specifying whether to enable client authentication filters.
                      default: false
                    authenticationFilters:
                      type: array
                      description: User authentication filters.
                      uniqueItems: false
                      minItems: 1
                      items:
                        type: object
                        properties:
                          filter:
                            type: string
                            example: '(&(mail=*{0}*)(inum={1}))'
                          bind:
                            type: boolean
                            default: false
                          bind-password-attribute:
                            type: string
                          base-dn:
                            type: string
                            example: 'ou=people,o=gluu'
                    clientAuthenticationFilters:
                      type: array
                      description: Client authentication filters.
                      uniqueItems: false
                      minItems: 1
                      items:
                        type: object
                        properties:
                          filter:
                            type: string
                            example: 'myCustomAttr1={0}'
                          bind:
                            type: boolean
                            default: false
                          bind-password-attribute:
                            type: string
                          base-dn:
                            type: string
                            example: 'ou=clients,o=gluu'
                    sessionIdUnusedLifetime:
                      type: integer
                      description: The lifetime for unused session states.
                      multipleOf: 1
                      minimum: 1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      example: 86400
                    sessionIdUnauthenticatedUnusedLifetime:
                      type: integer
                      description: The lifetime for unused unauthenticated session states.
                      multipleOf: 1
                      minimum: 1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      default: 120
                      example: 800
                    sessionIdLifetime:
                      type: integer
                      description: The lifetime of session id in seconds. If 0 or -1 then expiration is not set. `session_id` cookie expires when browser session ends.
                      multipleOf: 1
                      minimum: -1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      default: 86400
                      example: 86400
                    sessionIdEnabled:
                      type: boolean
                      description: Boolean value specifying whether to enable authentication by session_id.
                      default: false
                    sessionIdPersistOnPromptNone:
                      type: boolean
                      description: Boolean value specifying whether to persist session ID on prompt none.
                      default: false
                    configurationUpdateInterval:
                      type: integer
                      description: The interval for configuration update in seconds.
                      multipleOf: 1
                      minimum: 1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      example: 3600
                    cssLocation:
                      type: string
                      description: The location for CSS files.
                      minLength: 1
                    jsLocation:
                      type: string
                      description: The location for JavaScript files.
                      minLength: 1
                    imgLocation:
                      type: string
                      description: The location for image files.
                      minLength: 1
                    metricReporterInterval:
                      type: integer
                      description: The interval for metric reporter in seconds.
                      multipleOf: 1
                      minimum: 1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      example: 300
                    metricReporterKeepDataDays:
                      type: integer
                      description: The days to keep metric reported data.
                      multipleOf: 1
                      minimum: 1
                      exclusiveMinimum: false
                      maximum: 2147483647
                      exclusiveMaximum: false
                      example: 15
                    metricReporterEnabled:
                      type: boolean
                      description: Boolean value specifying whether to enable Metric Reporter.
                      default: true
                    pairwiseIdType:
                      type: string
                      description: The pairwise ID type.
                      items:
                        type: string
                      example:
                        - persistent
                        - algorithmic
                    pairwiseCalculationKey:
                      type: string
                      description: Key to calculate algorithmic pairwise IDs.
                      minLength: 1
                    pairwiseCalculationSalt:
                      type: string
                      description: Salt to calculate algorithmic pairwise IDs.
                      minLength: 1
                    shareSubjectIdBetweenClientsWithSameSectorId:
                      type: boolean
                      description: Share Subject ID between clients with same Sector ID.
                      default: false
                    webKeysStorage:
                      type: string
                      description: Web Key Storage Type.
                      format: enum - keystore - pkcs11
                    dnName:
                      type: string
                      description: DN of certificate issuer.
                      minLength: 1
                      example: CN=oxAuth CA Certificates
                    keyStoreFile:
                      type: string
                      description: The Key Store File (JKS).
                      minLength: 1
                      example: /etc/certs/oxauth-keys.jks
                    keyStoreSecret:
                      type: string
                      description: The password of the Key Store.
                      minLength: 1
                    endSessionWithAccessToken:
                      type: boolean
                      description: Accept access token to call end_session endpoint.
                    clientWhiteList:
                      type: array
                      description: White List for Client Redirection URIs.
                      uniqueItems: true
                      minItems: 0
                      items:
                        type: string
                    clientBlackList:
                      type: array
                      description: Black List for Client Redirection URIs.
                      uniqueItems: true
                      minItems: 0
                      items:
                        type: string
                    legacyIdTokenClaims:
                      type: boolean
                      description: Include Claims in ID Token.
                    customHeadersWithAuthorizationResponse:
                      type: boolean
                      description: Boolean value specifying whether to enable Custom Response Header parameter to return custom headers with the Authorization Response.
                    frontChannelLogoutSessionSupported:
                      type: boolean
                      description: Boolean value to specify support for front channel logout session.
                    useCacheForAllImplicitFlowObjects:
                      type: boolean
                      description: Boolean value to specify whether to persist all objects into cache during Implicit Flow.
                      default: false
                    invalidateSessionCookiesAfterAuthorizationFlow:
                      type: boolean
                      description: Boolean value to specify whether to invalidate `session_id` and `consent_session_id` cookies right after successful or unsuccessful authorization.
                      default: false
                    updateUserLastLogonTime:
                      type: boolean
                      description: Boolean value to specify if application should update oxLastLogonTime attribute on user authentication.
                      default: false
                    updateClientAccessTime:
                      type: boolean
                      description: Boolean value to specify if application should update oxLastAccessTime/oxLastLogonTime attributes on client authentication.
                      default: false
                    enableClientGrantTypeUpdate:
                      type: boolean
                      description: Boolean value to specify if client can update Grant Type values.
                      default: false
                    loggingLevel:
                      type: string
                      description: Logging level for oxAuth logers.
                      format: enum - TRACE - DEBUG - INFO - WARN - ERROR - FATAL - OFF
                    corsConfigurationFilters:
                      type: array
                      description: CORS Configuration filters.
                      minItems: 1
                      uniqueItems: false
                      items:
                        type: object
                        properties:
                          filterName:
                            type: string
                            minLength: 1
                          corsEnabled:
                            type: boolean
                            default: true
                          corsAllowedOrigins:
                            type: string
                            minLength: 1
                            default: \*
                          corsAllowedMethods:
                            type: string
                            default: 'GET,POST,HEAD,OPTIONS'
                          corsAllowedHeaders:
                            type: string
                            minLength: 1
                            default: 'Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers'
                          corsExposedHeaders:
                            type: string
                            minLength: 1
                          corsSupportCredentials:
                            type: boolean
                            default: true
                          corsLoggingEnabled:
                            type: boolean
                            default: false
                          corsPreflightMaxAge:
                            type: integer
                            multipleOf: 1
                            minimum: 1
                            exclusiveMinimum: false
                            maximum: 2147483647
                            exclusiveMaximum: false
                            default: 1800
                          corsRequestDecorate:
                            type: boolean
                            default: true
                    logClientIdOnClientAuthentication:
                      type: boolean
                      description: Boolean value to specify if application should log the Client ID on client authentication.
                    logClientNameOnClientAuthentication:
                      type: boolean
                      description: Boolean value to specify if application should log the Client Name on client authentication.
                    authorizationRequestCustomAllowedParameters:
                      type: array
                      description: Authorization Request Custom Allowed Parameters.
                      minItems: 0
                      uniqueItems: true
                      items:
                        type: string
                    legacyDynamicRegistrationScopeParam:
                      type: boolean
                      description: Legacy Dynamic Registration Scopes JSON Array Param.
                    openidScopeBackwardCompatibility:
                      type: boolean
                      description: 'Set to false to only allow token endpoint request for openid scope with grant type equals to authorization_code, restrict access to userinfo to scope openid and only return id_token if scope contains openid.'
                      default: false
                    skipAuthorizationForOpenIdScopeAndPairwiseId:
                      type: boolean
                      description: 'If a client has only openid scope and pairwise id, person should not have to authorize.'
                      default: false
                    allowPostLogoutRedirectWithoutValidation:
                      type: boolean
                      description: Allows post logout redirect without validation for End Session Endpoint.
                      default: false
                    httpLoggingEnabled:
                      type: boolean
                      description: Enable/Disable request/response logging filter.
                      default: false
                    httpLoggingExludePaths:
                      type: array
                      description: List of base URI for which request/response logging filter should not record activity.
                      minItems: 0
                      uniqueItems: true
                      items:
                        type: string
                      example: '\"/oxauth/img\", \"/oxauth/stylesheet\"'
                    externalLoggerConfiguration:
                      type: string
                      description: Path to external log4j2 logging configuration.
                      minLength: 1
                      example: /identity/logviewer/configure
                    disableU2fEndpoint:
                      type: boolean
                      description: Path to external log4j2 logging configuration.
                      default: false
                    disableJdkLogger:
                      type: boolean
                      description: Boolean value specifying whether to enable JDK Loggers.
                      default: true
                    jmsUserName:
                      type: string
                      description: JMS UserName.
                      minLength: 1
                    jmsPassword:
                      type: string
                      description: JMS Password.
                      minLength: 1
                    jmsBrokerURISetjmsBrokerURISet:
                      type: array
                      description: JMS Broker URI Set.
                      format: select
                      items:
                        type: string
                    oxElevenTestModeToken:
                      type: string
                      description: oxEleven Test Mode Token.
                      minLength: 1
                    enabledOAuthAuditLogging:
                      type: boolean
                      description: enabled OAuth Audit Logging.
                    authenticationProtectionConfiguration:
                      type: object
                      description: Authentication Brute Force Protection Configuration.
                      properties:
                        attemptExpiration:
                          type: integer
                          multipleOf: 1
                          minimum: 1
                          maximum: 2147483647
                          exclusiveMinimum: false
                          exclusiveMaximum: false
                        maximumAllowedAttemptsWithoutDelay:
                          type: integer
                          multipleOf: 1
                          minimum: 1
                          maximum: 2147483647
                          exclusiveMinimum: false
                          exclusiveMaximum: false
                        delayTime:
                          type: integer
                          multipleOf: 1
                          minimum: 1
                          maximum: 2147483647
                          exclusiveMinimum: false
                          exclusiveMaximum: false
                        bruteForceProtectionEnabled:
                          type: boolean
                    errorHandlingMethod:
                      type: string
                      description: A list of possible error handling methods.
                      format: enum - internal - remote
                    useLocalCache:
                      type: boolean
                      description: 'Boolean value specifying whether to enable local in-memory cache for attributes, scopes, clients and organization configuration.'
                      default: false
                    spontaneousScopeLifetime:
                      type: integer
                      description: The lifetime of spontaneous scope in seconds.
                      multipleOf: 1
                      minimum: 1
                      maximum: 2147483647
                      exclusiveMinimum: false
                      exclusiveMaximum: false
                    jwksAlgorithmsSupported:
                      type: array
                      description: A list of algorithms that will be used in JWKS endpoint.
                      minItems: 1
                      uniqueItems: true
                      items:
                        type: string
                      format: select - RS256 - RS384 - RS512 - ES256 - ES384 - ES512 - PS256 - PS384 - PS512 - RSA1_5 - RSA-OAEP
                    dynamicRegistrationPasswordGrantTypeEnabled:
                      type: boolean
                      description: Boolean value specifying whether to enable Password Grant Type during Dynamic Registration.
                      default: false
                    returnClientSecretOnRead:
                      type: boolean
                      description: Boolean value specifying whether a client_secret is returned on client GET or PUT. Set to false by default which means to not return secret.
                      default: false
                    rejectJwtWithNoneAlg:
                      type: boolean
                      description: Boolean value specifying whether reject JWT requested or validated with algorithm None. Default value is true.
                      default: true
                    expirationNotificatorEnabled:
                      type: boolean
                      description: 'Boolean value specifying whether expiration notificator is enabled (used to identify expiration for persistence that support TTL, like Couchbase).'
                      default: true
                    expirationNotificatorMapSizeLimit:
                      type: integer
                      description: The expiration notificator maximum size limit.
                      default: 100000
                    expirationNotificatorIntervalInSeconds:
                      type: integer
                      description: The expiration notificator interval in seconds.
                      default: 600
                    clientRegDefaultToCodeFlowWithRefresh:
                      type: boolean
                      description: Boolean value specifying whether to add Authorization Code Flow with Refresh grant during client registration.
                    sessionIdRequestParameterEnabled:
                      type: boolean
                      description: Boolean value specifying whether to enable session_id HTTP request parameter.
                      default: false
                    changeSessionIdOnAuthentication:
                      type: boolean
                      description: Boolean value specifying whether to enable session_id HTTP request parameter.
                      default: true
                    serverSessionIdLifetime:
                      type: integer
                      description: The sessionId lifetime in seconds for sessionId.
                      default: 86400
                    cookieDomain:
                      type: string
                      description: Sets cookie domain for all cookies created by OP.
                    loggingLayout:
                      type: string
                      description: Sets the layout of logging.
                    fapiCompatibility:
                      type: boolean
                      description: Boolean value specifying whether turn on FAPI compatibility mode. If true AS behaves in more strict mode.
                      default: false
                    forceIdTokenHintPrecense:
                      type: boolean
                      description: Boolean value specifying whether force id_token_hint parameter precense (false by default).
                      default: false
                    forceOfflineAccessScopeToEnableRefreshToken:
                      type: boolean
                      description: Boolean value specifying whether force offline_access scope to enable refresh_token grant type. Default value is true.
                      default: true
                    errorReasonEnabled:
                      type: boolean
                      description: Boolean value specifying whether to return detailed reason of the error from AS. Default value is false.
                      default: false
                    removeRefreshTokensForClientOnLogout:
                      type: boolean
                      description: Boolean value specifying whether to remove refresh tokens on logout. Default value is true.
                      default: true
                    consentGatheringScriptBackwardCompatibility:
                      type: boolean
                      description: Boolean value specifying whether turn on Consent Gathering Script backward compatibility mode. If true AS will pick up script with higher level globally. If false (default) AS will pick up script based on client configuration.
                      default: false
                    introspectionScriptBackwardCompatibility:
                      type: boolean
                      description: Boolean value specifying whether switch off client's introspection scripts (true value) and run all scripts that exists on server. Default value is false.
                      default: false
                    keepAuthenticatorAttributesOnAcrChange:
                      type: boolean
                      description: Boolean value specifying whether to keep authenticator attributes on ACR change.
                      default: false
                    backchannelClientId:
                      type: string
                      description: Backchannel Client Id.
                      minLength: 0
                    backchannelRedirectUri:
                      type: string
                      description: Backchannel Redirect Uri.
                      minLength: 0
                      example: 'https://server.example.com/oxeleven/rest/backchannel/backchannelRedirectUri'
                    backchannelAuthenticationEndpoint:
                      type: string
                      description: Backchannel Authentication Endpoint.
                      minLength: 0
                      example: 'https://server.example.com/oxeleven/rest/backchannel/backchannelAuthenticationEndpoint()'
                    backchannelDeviceRegistrationEndpoint:
                      type: string
                      description: Backchannel Device Registration Endpoint.
                      minLength: 0
                      example: 'https://server.example.com/oxeleven/rest/backchannel/backchannelDeviceRegistrationEndpoint'
                    backchannelTokenDeliveryModesSupported:
                      type: array
                      description: Backchannel Token Delivery Modes Supported.
                      minItems: 0
                      uniqueItems: true
                      items:
                        type: string
                      format: select - poll - ping - push
                    backchannelAuthenticationRequestSigningAlgValuesSupported:
                      type: array
                      description: Backchannel Authentication Request Signing Alg Values Supported.
                      minItems: 0
                      uniqueItems: true
                      items:
                        type: string
                      format: select - RS512 - ES256 - ES384 - ES512 - PS256 - PS384 - PS512
                    backchannelUserCodeParameterSupported:
                      type: boolean
                      description: Backchannel User Code Parameter Supported
                    backchannelBindingMessagePattern:
                      type: string
                      description: Backchannel Binding Message Pattern.
                      minLength: 0
                    backchannelAuthenticationResponseExpiresIn:
                      type: integer
                      description: Backchannel Authentication Response Expires In.
                      multipleOf: 1
                      minimum: 1
                      maximum: 2147483647
                      exclusiveMinimum: false
                      exclusiveMaximum: false
                    backchannelAuthenticationResponseInterval:
                      type: integer
                      description: Backchannel Authentication Response Interval.
                      multipleOf: 1
                      minimum: 1
                      maximum: 2147483647
                      exclusiveMinimum: false
                      exclusiveMaximum: false
                    backchannelLoginHintClaims:
                      type: array
                      description: Backchannel Login Hint Claims.
                      minItems: 0
                      uniqueItems: true
                      items:
                        type: string
                    cibaEndUserNotificationConfig:
                      type: object
                      description: CIBA End User Notification Config.
                      required:
                        - apiKey
                        - authDomain
                        - databaseURL
                        - projectId
                        - storageBucket
                        - messagingSenderId
                        - appId
                        - notificationUrl
                        - notificationKey
                        - publicVapidKey
                      properties:
                        apiKey:
                          type: string
                          minLength: 1
                        authDomain:
                          type: string
                          minLength: 1
                        databaseURL:
                          type: string
                          minLength: 1
                        projectId:
                          type: string
                          minLength: 1
                        storageBucket:
                          type: string
                          minLength: 1
                        messagingSenderId:
                          type: string
                          minLength: 1
                        appId:
                          type: string
                          minLength: 1
                        notificationUrl:
                          type: string
                          minLength: 1
                        notificationKey:
                          type: string
                          minLength: 1
                        publicVapidKey:
                          type: string
                          minLength: 1
                    backchannelRequestsProcessorJobIntervalSec:
                      type: integer
                      description: Specifies the allowable elapsed time in seconds backchannel request processor executes.
                    backchannelRequestsProcessorJobChunkSize:
                      type: integer
                      description: Each backchannel request processor iteration fetches chunk of data to be processed.
                    cibaGrantLifeExtraTimeSec:
                      type: integer
                      description: Specifies the CIBA Grant life extra time in seconds.
                    cibaMaxExpirationTimeAllowedSec:
                      type: integer
                      description: Specifies the CIBA token expiration time in seconds.
        '500':
          $ref: '#/components/responses/InternalServerError'
  /config/graphics:
    get:      
      summary: Retrieves organization graphic configuration.
      description: Retrieves organization graphic configuration.
      operationId: get-organization-graphics
      tags:
        - Graphics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: OrganizationConfiguration
                description: Organization graphic configuration details.
                type: object
                properties:
                  logoLocation:
                    type: string
                    description: Directory name for the images and logos that are used.
                  faviconPath:
                    type: string
                    description: Directory name for the images and favicon that are used.
                required:
                  - logoLocation
                  - faviconPath
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:      
      summary: Adds organization graphic configuration.
      description: Adds organization graphic configuration.
      operationId: post-organization-graphics
      tags:
        - Graphics
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              title: OrganizationConfiguration
              description: Organization graphic configuration details.
              type: object
              properties:
                logoLocation:
                  type: string
                  description: Directory name for the images and logos that are used.
                faviconPath:
                  type: string
                  description: Directory name for the images and favicon that are used.
              required:
                - logoLocation
                - faviconPath
        description: Organization graphic configuration details.
      responses:
        '200':
          description: OK
          content: {}
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: Updates organization graphic configuration.
      description: Updates organization graphic configuration.
      operationId: put-organization-graphics
      tags:
        - Graphics
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                logoLocation:
                  type: string
                  description: Directory name for the images and logos that are used.
                faviconPath:
                  type: string
                  description: Directory name for the images and favicon that are used.
              required:
                - logoLocation
                - faviconPath
      responses:
        '200':
          description: OK
        '500':
          $ref: '#/components/responses/InternalServerError'
  /config/graphics/logo:
    get:
      summary: Retrieves organization logo graphic details.
      description: Retrieves organization logo graphic details.
      operationId: get-config-graphics-logo      
      tags:
        - Graphics
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  logoLocation:
                    type: string
                    description: Directory name for the images and logos that are used.
                required:
                  - logoLocation
        '500':
          description: Internal Server Error
    post:
      summary: Adds organization logo graphic details.
      description: Adds organization logo graphic details.
      operationId: post-config-graphics-logo      
      tags:
        - Graphics
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                logoLocation:
                  type: string
                  description: Directory name for the images and logos that are used.
              required:
                - logoLocation
      responses:
        '200':
          description: OK
        '500':
          description: Internal Server Error
    put:
      summary: Updates organization logo graphic details.
      description: Updates organization logo graphic details.
      operationId: put-config-graphics-logo
      tags:
        - Graphics
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                logoLocation:
                  type: string
                  description: Directory name for the images and logos that are used.
              required:
                - logoLocation
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
    patch:
      summary: Patches organization logo graphic details.
      description: Patches organization logo graphic details.
      operationId: patch-config-graphics-logo
      tags:
        - Graphics
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                logoLocation:
                  type: string
                  description: Directory name for the images and logos that are used.
              required:
                - logoLocation
      responses:
        '200':
          description: OK
        '500':
          description: Internal Server Error
    delete:
      summary: Deletes organization logo graphic details.     
      description: Deletes organization logo graphic details.
      operationId: delete-config-graphics-logo
      tags:
        - Graphics
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  /config/graphics/favicon:
    get:
      summary: Gets organization favicon graphic details.     
      description: Gets organization favicon graphic details.     
      operationId: get-config-graphics-favicon
      tags:
        - Graphics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  faviconPath:
                    type: string
                    description: Directory name for the images and favicon that are used.
                required:
                  - faviconPath
        '500':
          description: Internal Server Error
    post:
      summary: Adds organization favicon graphic details.      
      description: Adds organization favicon graphic details.      
      operationId: post-config-graphics-favicon
      tags:
        - Graphics      
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                faviconPath:
                  type: string
                  description: Directory name for the images and favicon that are used.
              required:
                - faviconPath
        description: Details of organization favicon.
      responses:
        '200':
          description: OK
        '500':
          description: Internal Server Error
    put:
      summary: Updates organization favicon graphic details.      
      description: Updates organization favicon graphic details.
      operationId: put-config-graphics-favicon
      tags:
        - Graphics
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Details of organization favicon to be updated.
              properties:
                faviconPath:
                  type: string
                  description: Directory name for the images and favicon that are used.
              required:
                - faviconPath
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
    patch:
      summary: Patches organization favicon graphic details.
      description: Patches organization favicon graphic details.  
      operationId: patch-config-graphics-favicon
      tags:
        - Graphics
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Details of organization favicon to be updated.
              properties:
                faviconPath:
                  type: string
                  description: Directory name for the images and favicon that are used.
              required:
                - faviconPath
      responses:
        '200':
          description: OK
        '500':
          description: Internal Server Error          
    delete:
      summary: Deletes organization favicon graphic details.  
      description: Deletes organization favicon graphic details.
      operationId: delete-config-graphics-favicon
      tags:
        - Graphics
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  /attributes:
    get:
      summary: Gets all  Gluu attributes, active as well as inactive.
      description: Gets all  Gluu attributes, active as well as inactive.
      operationId: get-attributes
      tags:
        - Attribute
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: GluuAttributes
                description: List of all attribute.
                type: array
                items:
                  type: object
                  title: GluuAttribute
                  required:
                    - inum
                    - name
                    - displayName
                    - dataType
                    - status
                  properties:
                    inum:
                      type: string
                      description: Unique id identifying the attribute
                    name:
                      type: string
                      description: Name of the attribute.
                      example: 'name, displayName,birthdate, email'
                    displayName:
                      type: string
                      items:
                        type: string
                    description:
                      type: string
                      description: User friendly descriptive detail of attribute.
                    dataType:
                      type: string
                      description: Data Type of attribute.
                      enum:
                        - STRING
                        - NUMERIC
                        - BOOLEAN
                        - BINARY
                        - DATE
                    status:
                      type: string
                      description: Distingusihed Name
                    oxMultiValuedAttribute:
                      type: boolean
                      description: Boolean value indicating if the attribute is multi-value
                    lifetime:
                      type: string
                    sourceAttribute:
                      type: string
                    salt:
                      type: string
                    nameIdType:
                      type: string
                    origin:
                      type: string
                    editType:
                      type: array
                      description: GluuUserRole
                      items:
                        type: string
                    viewType:
                      type: array
                      description: GluuUserRole
                      items:
                        type: string
                    usageType:
                      type: object
                      description: GluuAttributeUsageType
                      items:
                        type: string
                    oxAuthClaimName:
                      type: string
                    seeAlso:
                      type: string
                    saml1Uri:
                      type: string
                    saml2Uri:
                      type: string
                    urn:
                      type: string
                    oxSCIMCustomAttribute:
                      type: boolean
                      description: Boolean value indicating if the attribute is a SCIM custom attribute
                    custom:
                      type: boolean
                      description: Boolean value indicating if the attribute is a custom attribute
                    requred:
                      type: boolean
                      description: Boolean value indicating is a mandatory attribute
                    attributeValidation:
                      type: object
                      description: Details of validations to be applied on the attribute
                      properties:
                        regexp:
                          type: string
                          description: Reguar expression to be used to validate the dataType.
                        minLength:
                          type: integer
                        maxLength:
                          type: integer
                    gluuTooltip:
                      type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:      
      summary: Adds new Gluu attribute.
      description: Adds new Gluu attribute.
      operationId: post-attributes
      tags:
        - Attribute
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              title: GluuAttribute
              description: New attribute.
              type: object
              required:
                - name
                - displayName
                - dataType
                - status
              properties:
                name:
                  type: string
                  description: Name of the attribute.
                  example: 'name, displayName,birthdate, email'
                displayName:
                  type: string
                  items:
                    type: string
                description:
                  type: string
                  description: User friendly descriptive detail of attribute.
                dataType:
                  type: string
                  description: Data Type of attribute.
                  enum:
                    - STRING
                    - NUMERIC
                    - BOOLEAN
                    - BINARY
                    - DATE
                status:
                  type: string
                  description: Distingusihed Name
                oxMultiValuedAttribute:
                  type: boolean
                  description: Boolean value indicating if the attribute is multi-value
                lifetime:
                  type: string
                sourceAttribute:
                  type: string
                salt:
                  type: string
                nameIdType:
                  type: string
                origin:
                  type: string
                editType:
                  type: array
                  description: GluuUserRole
                  items:
                    type: string
                viewType:
                  type: array
                  description: GluuUserRole
                  items:
                    type: string
                usageType:
                  type: object
                  description: GluuAttributeUsageType
                  items:
                    type: string
                oxAuthClaimName:
                  type: string
                seeAlso:
                  type: string
                saml1Uri:
                  type: string
                saml2Uri:
                  type: string
                urn:
                  type: string
                oxSCIMCustomAttribute:
                  type: boolean
                  description: Boolean value indicating if the attribute is a SCIM custom attribute
                custom:
                  type: boolean
                  description: Boolean value indicating if the attribute is a custom attribute
                requred:
                  type: boolean
                  description: Boolean value indicating is a mandatory attribute
                attributeValidation:
                  type: object
                  description: Details of validations to be applied on the attribute
                  properties:
                    regexp:
                      type: string
                      description: Reguar expression to be used to validate the dataType.
                    minLength:
                      type: integer
                    maxLength:
                      type: integer
                gluuTooltip:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: GluuAttribute
                type: object
                required:
                  - inum
                  - name
                  - displayName
                  - dataType
                  - status
                properties:
                  inum:
                    type: string
                    description: Unique id identifying the attribute
                  name:
                    type: string
                    description: Name of the attribute.
                    example: 'name, displayName,birthdate, email'
                  displayName:
                    type: string
                    items:
                      type: string
                  description:
                    type: string
                    description: User friendly descriptive detail of attribute.
                  dataType:
                    type: string
                    description: Data Type of attribute.
                    enum:
                      - STRING
                      - NUMERIC
                      - BOOLEAN
                      - BINARY
                      - DATE
                  status:
                    type: string
                    description: Distingusihed Name
                  oxMultiValuedAttribute:
                    type: boolean
                    description: Boolean value indicating if the attribute is multi-value
                  lifetime:
                    type: string
                  sourceAttribute:
                    type: string
                  salt:
                    type: string
                  nameIdType:
                    type: string
                  origin:
                    type: string
                  editType:
                    type: array
                    description: GluuUserRole
                    items:
                      type: string
                  viewType:
                    type: array
                    description: GluuUserRole
                    items:
                      type: string
                  usageType:
                    type: object
                    description: GluuAttributeUsageType
                    items:
                      type: string
                  oxAuthClaimName:
                    type: string
                  seeAlso:
                    type: string
                  saml1Uri:
                    type: string
                  saml2Uri:
                    type: string
                  urn:
                    type: string
                  oxSCIMCustomAttribute:
                    type: boolean
                    description: Boolean value indicating if the attribute is a SCIM custom attribute
                  custom:
                    type: boolean
                    description: Boolean value indicating if the attribute is a custom attribute
                  requred:
                    type: boolean
                    description: Boolean value indicating is a mandatory attribute
                  attributeValidation:
                    type: object
                    description: Details of validations to be applied on the attribute
                    properties:
                      regexp:
                        type: string
                        description: Reguar expression to be used to validate the dataType.
                      minLength:
                        type: integer
                      maxLength:
                        type: integer
                  gluuTooltip:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:      
      summary: Updates an existing attribute.
      description: Updates an existing attribute.
      operationId: put-attributes
      tags:
        - Attribute
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              title: GluuAttribute
              description: Attribute details
              type: object
              required:
                - inum
                - name
                - displayName
                - dataType
                - status
              properties:
                inum:
                  type: string
                  description: Unique id identifying the attribute
                name:
                  type: string
                  description: Name of the attribute.
                  example: 'name, displayName,birthdate, email'
                displayName:
                  type: string
                  items:
                    type: string
                description:
                  type: string
                  description: User friendly descriptive detail of attribute.
                dataType:
                  type: string
                  description: Data Type of attribute.
                  enum:
                    - STRING
                    - NUMERIC
                    - BOOLEAN
                    - BINARY
                    - DATE
                status:
                  type: string
                  description: Distingusihed Name
                oxMultiValuedAttribute:
                  type: boolean
                  description: Boolean value indicating if the attribute is multi-value
                lifetime:
                  type: string
                sourceAttribute:
                  type: string
                salt:
                  type: string
                nameIdType:
                  type: string
                origin:
                  type: string
                editType:
                  type: array
                  description: GluuUserRole
                  items:
                    type: string
                viewType:
                  type: array
                  description: GluuUserRole
                  items:
                    type: string
                usageType:
                  type: object
                  description: GluuAttributeUsageType
                  items:
                    type: string
                oxAuthClaimName:
                  type: string
                seeAlso:
                  type: string
                saml1Uri:
                  type: string
                saml2Uri:
                  type: string
                urn:
                  type: string
                oxSCIMCustomAttribute:
                  type: boolean
                  description: Boolean value indicating if the attribute is a SCIM custom attribute
                custom:
                  type: boolean
                  description: Boolean value indicating if the attribute is a custom attribute
                requred:
                  type: boolean
                  description: Boolean value indicating is a mandatory attribute
                attributeValidation:
                  type: object
                  description: Details of validations to be applied on the attribute
                  properties:
                    regexp:
                      type: string
                      description: Reguar expression to be used to validate the dataType.
                    minLength:
                      type: integer
                    maxLength:
                      type: integer
                gluuTooltip:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: GluuAttribute
                type: object
                required:
                  - inum
                  - name
                  - displayName
                  - dataType
                  - status
                properties:
                  inum:
                    type: string
                    description: Unique id identifying the attribute
                  name:
                    type: string
                    description: Name of the attribute.
                    example: 'name, displayName,birthdate, email'
                  displayName:
                    type: string
                    items:
                      type: string
                  description:
                    type: string
                    description: User friendly descriptive detail of attribute.
                  dataType:
                    type: string
                    description: Data Type of attribute.
                    enum:
                      - STRING
                      - NUMERIC
                      - BOOLEAN
                      - BINARY
                      - DATE
                  status:
                    type: string
                    description: Distingusihed Name
                  oxMultiValuedAttribute:
                    type: boolean
                    description: Boolean value indicating if the attribute is multi-value
                  lifetime:
                    type: string
                  sourceAttribute:
                    type: string
                  salt:
                    type: string
                  nameIdType:
                    type: string
                  origin:
                    type: string
                  editType:
                    type: array
                    description: GluuUserRole
                    items:
                      type: string
                  viewType:
                    type: array
                    description: GluuUserRole
                    items:
                      type: string
                  usageType:
                    type: object
                    description: GluuAttributeUsageType
                    items:
                      type: string
                  oxAuthClaimName:
                    type: string
                  seeAlso:
                    type: string
                  saml1Uri:
                    type: string
                  saml2Uri:
                    type: string
                  urn:
                    type: string
                  oxSCIMCustomAttribute:
                    type: boolean
                    description: Boolean value indicating if the attribute is a SCIM custom attribute
                  custom:
                    type: boolean
                    description: Boolean value indicating if the attribute is a custom attribute
                  requred:
                    type: boolean
                    description: Boolean value indicating is a mandatory attribute
                  attributeValidation:
                    type: object
                    description: Details of validations to be applied on the attribute
                    properties:
                      regexp:
                        type: string
                        description: Reguar expression to be used to validate the dataType.
                      minLength:
                        type: integer
                      maxLength:
                        type: integer
                  gluuTooltip:
                    type: string
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /attributes/{inum}:
    parameters:
      - name: inum
        in: path
        required: true
        description: Attribute ID.
        schema:
          type: string
    delete:
      summary: Deletes an attribute identified by inum.
      description: Deletes an attribute identified based on inum.
      operationId: delete-attributes-by-inum
      tags:
        - Attribute     
      responses:
        '200':
          description: OK
          content: {}
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /attributes/active:
    get:      
      summary: Gets all active attributes.
      description: Gets all active attributes.
      operationId: get-attributes-active
      tags:
        - Attribute
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: GluuAttributes
                description: List of active attribute.
                type: array
                items:
                  type: object
                  title: GluuAttribute
                  required:
                    - inum
                    - name
                    - displayName
                    - dataType
                    - status
                  properties:
                    inum:
                      type: string
                      description: Unique id identifying the attribute
                    name:
                      type: string
                      description: Name of the attribute.
                      example: 'name, displayName,birthdate, email'
                    displayName:
                      type: string
                      items:
                        type: string
                    description:
                      type: string
                      description: User friendly descriptive detail of attribute.
                    dataType:
                      type: string
                      description: Data Type of attribute.
                      enum:
                        - STRING
                        - NUMERIC
                        - BOOLEAN
                        - BINARY
                        - DATE
                    status:
                      type: string
                      description: Distingusihed Name
                    oxMultiValuedAttribute:
                      type: boolean
                      description: Boolean value indicating if the attribute is multi-value
                    lifetime:
                      type: string
                    sourceAttribute:
                      type: string
                    salt:
                      type: string
                    nameIdType:
                      type: string
                    origin:
                      type: string
                    editType:
                      type: array
                      description: GluuUserRole
                      items:
                        type: string
                    viewType:
                      type: array
                      description: GluuUserRole
                      items:
                        type: string
                    usageType:
                      type: object
                      description: GluuAttributeUsageType
                      items:
                        type: string
                    oxAuthClaimName:
                      type: string
                    seeAlso:
                      type: string
                    saml1Uri:
                      type: string
                    saml2Uri:
                      type: string
                    urn:
                      type: string
                    oxSCIMCustomAttribute:
                      type: boolean
                      description: Boolean value indicating if the attribute is a SCIM custom attribute
                    custom:
                      type: boolean
                      description: Boolean value indicating if the attribute is a custom attribute
                    requred:
                      type: boolean
                      description: Boolean value indicating is a mandatory attribute
                    attributeValidation:
                      type: object
                      description: Details of validations to be applied on the attribute
                      properties:
                        regexp:
                          type: string
                          description: Reguar expression to be used to validate the dataType.
                        minLength:
                          type: integer
                        maxLength:
                          type: integer
                    gluuTooltip:
                      type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
  /attributes/inactive:
    get:     
      summary: Gets all inactive attributes.
      description: Gets all inactive attributes.
      operationId: get-attributes-inactive
      tags:
        - Attribute
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: GluuAttributes
                description: List of inactive attributes.
                type: array
                items:
                  type: object
                  title: GluuAttribute
                  required:
                    - inum
                    - name
                    - displayName
                    - dataType
                    - status
                  properties:
                    inum:
                      type: string
                      description: Unique id identifying the attribute
                    name:
                      type: string
                      description: Name of the attribute.
                      example: 'name, displayName,birthdate, email'
                    displayName:
                      type: string
                      items:
                        type: string
                    description:
                      type: string
                      description: User friendly descriptive detail of attribute.
                    dataType:
                      type: string
                      description: Data Type of attribute.
                      enum:
                        - STRING
                        - NUMERIC
                        - BOOLEAN
                        - BINARY
                        - DATE
                    status:
                      type: string
                      description: Distingusihed Name
                    oxMultiValuedAttribute:
                      type: boolean
                      description: Boolean value indicating if the attribute is multi-value
                    lifetime:
                      type: string
                    sourceAttribute:
                      type: string
                    salt:
                      type: string
                    nameIdType:
                      type: string
                    origin:
                      type: string
                    editType:
                      type: array
                      description: GluuUserRole
                      items:
                        type: string
                    viewType:
                      type: array
                      description: GluuUserRole
                      items:
                        type: string
                    usageType:
                      type: object
                      description: GluuAttributeUsageType
                      items:
                        type: string
                    oxAuthClaimName:
                      type: string
                    seeAlso:
                      type: string
                    saml1Uri:
                      type: string
                    saml2Uri:
                      type: string
                    urn:
                      type: string
                    oxSCIMCustomAttribute:
                      type: boolean
                      description: Boolean value indicating if the attribute is a SCIM custom attribute
                    custom:
                      type: boolean
                      description: Boolean value indicating if the attribute is a custom attribute
                    requred:
                      type: boolean
                      description: Boolean value indicating is a mandatory attribute
                    attributeValidation:
                      type: object
                      description: Details of validations to be applied on the attribute
                      properties:
                        regexp:
                          type: string
                          description: Reguar expression to be used to validate the dataType.
                        minLength:
                          type: integer
                        maxLength:
                          type: integer
                    gluuTooltip:
                      type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
  /attributes/attribute/{inum}:
    parameters:
      - name: inum
        in: path
        required: true
        description: Attribute ID.
        schema:
          type: string
    get:
      summary: Gets attribute by inum.
      description: Gets attribute based on inum.
      operationId: get-attributes-by-inum
      tags:
        - Attribute     
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: GluuAttribute
                description: Gluu Server attribute corresponding to the identifier{inum}
                type: object
                required:
                  - inum
                  - name
                  - displayName
                  - dataType
                  - status
                properties:
                  inum:
                    type: string
                    description: Unique id identifying the attribute
                  name:
                    type: string
                    description: Name of the attribute.
                    example: 'name, displayName,birthdate, email'
                  displayName:
                    type: string
                    items:
                      type: string
                  description:
                    type: string
                    description: User friendly descriptive detail of attribute.
                  dataType:
                    type: string
                    description: Data Type of attribute.
                    enum:
                      - STRING
                      - NUMERIC
                      - BOOLEAN
                      - BINARY
                      - DATE
                  status:
                    type: string
                    description: Distingusihed Name
                  oxMultiValuedAttribute:
                    type: boolean
                    description: Boolean value indicating if the attribute is multi-value
                  lifetime:
                    type: string
                  sourceAttribute:
                    type: string
                  salt:
                    type: string
                  nameIdType:
                    type: string
                  origin:
                    type: string
                  editType:
                    type: array
                    description: GluuUserRole
                    items:
                      type: string
                  viewType:
                    type: array
                    description: GluuUserRole
                    items:
                      type: string
                  usageType:
                    type: object
                    description: GluuAttributeUsageType
                    items:
                      type: string
                  oxAuthClaimName:
                    type: string
                  seeAlso:
                    type: string
                  saml1Uri:
                    type: string
                  saml2Uri:
                    type: string
                  urn:
                    type: string
                  oxSCIMCustomAttribute:
                    type: boolean
                    description: Boolean value indicating if the attribute is a SCIM custom attribute
                  custom:
                    type: boolean
                    description: Boolean value indicating if the attribute is a custom attribute
                  requred:
                    type: boolean
                    description: Boolean value indicating is a mandatory attribute
                  attributeValidation:
                    type: object
                    description: Details of validations to be applied on the attribute
                    properties:
                      regexp:
                        type: string
                        description: Reguar expression to be used to validate the dataType.
                      minLength:
                        type: integer
                      maxLength:
                        type: integer
                  gluuTooltip:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
  /attributes/search:
    parameters:
      - name: pattern
        in: query
        required: true
        description: Serach pattern.
        schema:
          type: string
      - name: size
        in: query
        required: true
        description: Serach size -  max size of the results to return.
        schema:
          type: integer
    get:      
      summary: Searches attributes by pattern, and specify the max size of the results to return.
      description: Searches attributes by pattern, and specify the max size of the results to return.
      operationId: get-attributes-by-pattern
      tags:
        - Attribute      
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: GluuAttributes
                description: 'List of attributes with either of \"displayName\", \"description\" and \"gluuAttribute\" matching the specified partner.'
                type: array
                items:
                  type: object
                  title: GluuAttribute
                  description: Attribute details
                  required:
                    - inum
                    - name
                    - displayName
                    - dataType
                    - status
                  properties:
                    inum:
                      type: string
                      description: Unique id identifying the attribute
                    name:
                      type: string
                      description: Name of the attribute.
                      example: 'name, displayName,birthdate, email'
                    displayName:
                      type: string
                      items:
                        type: string
                    description:
                      type: string
                      description: User friendly descriptive detail of attribute.
                    dataType:
                      type: string
                      description: Data Type of attribute.
                      enum:
                        - STRING
                        - NUMERIC
                        - BOOLEAN
                        - BINARY
                        - DATE
                    status:
                      type: string
                      description: Distingusihed Name
                    oxMultiValuedAttribute:
                      type: boolean
                      description: Boolean value indicating if the attribute is multi-value
                    lifetime:
                      type: string
                    sourceAttribute:
                      type: string
                    salt:
                      type: string
                    nameIdType:
                      type: string
                    origin:
                      type: string
                    editType:
                      type: array
                      description: GluuUserRole
                      items:
                        type: string
                    viewType:
                      type: array
                      description: GluuUserRole
                      items:
                        type: string
                    usageType:
                      type: object
                      description: GluuAttributeUsageType
                      items:
                        type: string
                    oxAuthClaimName:
                      type: string
                    seeAlso:
                      type: string
                    saml1Uri:
                      type: string
                    saml2Uri:
                      type: string
                    urn:
                      type: string
                    oxSCIMCustomAttribute:
                      type: boolean
                      description: Boolean value indicating if the attribute is a SCIM custom attribute
                    custom:
                      type: boolean
                      description: Boolean value indicating if the attribute is a custom attribute
                    requred:
                      type: boolean
                      description: Boolean value indicating is a mandatory attribute
                    attributeValidation:
                      type: object
                      description: Details of validations to be applied on the attribute
                      properties:
                        regexp:
                          type: string
                          description: Reguar expression to be used to validate the dataType.
                        minLength:
                          type: integer
                        maxLength:
                          type: integer
                    gluuTooltip:
                      type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
  /acrs:
    get:
      summary: Gets default authentication method.
      description: Gets default authentication method.
      operationId: get-acrs
      tags:
        - Authentication
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: AuthenticationMethod
                description: Default authentication method.
                type: object
                properties:
                  defaultAcr:
                    type: string
                  oxtrustAcr:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Adds authentication method.
      description: Adds default authentication method.
      operationId: post-acrs
      tags:
        - Authentication
      requestBody:
        content:
          application/json:
            schema:
              title: AuthenticationMethod
              description: Authentication method to be added as default.
              type: object
              properties:
                defaultAcr:
                  type: string
                oxtrustAcr:
                  type: string
      responses:
        '200':
          description: OK
          content: {}
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: Updates default authentication method.
      description: Updates default authentication method.
      operationId: put-acrs
      tags:
        - Authentication
      requestBody:
        content:
          application/json:
            schema:
              title: AuthenticationMethod
              description: Authentication method to be updated as default.
              type: object
              properties:
                defaultAcr:
                  type: string
                oxtrustAcr:
                  type: string
      responses:
        '200':
          description: OK
          content: {}
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /configuration/ldap:
    get:
      summary: Gets existing LDAP configuration.
      description: Gets existing LDAP configuration.
      operationId: get-configuration-ldap
      tags:
        - LDAP configuration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: LdapConfiguration
                description: List of configured LDAP configuration.
                type: array
                items:
                  type: object
                  required:
                    - configId
                    - bindDN
                    - bindPassword
                    - servers
                    - baseDNs
                    - primaryKey
                    - localPrimaryKey
                  properties:
                    configId:
                      type: string
                      description: Unique identifier
                    bindDN:
                      type: string
                      description: User Distingusihed Name for binding.
                    bindPassword:
                      type: string
                      description: User password for binding.
                    servers:
                      type: array
                      description: List of LDAP authentication servers.
                      items:
                        type: string
                        description: Unique name of the authentication server and port number.
                        example: 'authserver.org:63'
                    maxConnections:
                      type: integer
                      description: Total number of simultaneous connections allowed.
                    useSSL:
                      type: boolean
                    baseDNs:
                      type: array
                      description: list of LDAP base Distingusihed Name
                      items:
                        type: string
                    primaryKey:
                      type: string
                      description: Used to search and bind operations in configured LDAP server.
                      example: 'SAMAccountName,uid, email'
                    localPrimaryKey:
                      type: string
                      description: Used to search local user entry in Gluu Server’s internal LDAP directory.
                      example: 'uid, email'
                    useAnonymousBind:
                      type: boolean
                      description: Boolean value used to indicate if the LDAP Server will allow anonymous bind request.
                    enabled:
                      type: boolean
                    level:
                      type: integer
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Adds new LDAP configuration.
      description: Adds new LDAP configuration.
      operationId: post-configuration-ldap
      tags:
        - LDAP configuration
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              description: LDAP configuration to be added.
              required:
                - configId
                - bindDN
                - bindPassword
                - servers
                - baseDNs
                - primaryKey
                - localPrimaryKey
              properties:
                configId:
                  type: string
                  description: Unique identifier
                bindDN:
                  type: string
                  description: User Distingusihed Name for binding.
                bindPassword:
                  type: string
                  description: User password for binding.
                servers:
                  type: array
                  description: List of LDAP authentication servers.
                  items:
                    type: string
                    description: Unique name of the authentication server and port number.
                    example: 'authserver.org:63'
                maxConnections:
                  type: integer
                  description: Total number of simultaneous connections allowed.
                useSSL:
                  type: boolean
                baseDNs:
                  type: array
                  description: list of LDAP base Distingusihed Name
                  items:
                    type: string
                primaryKey:
                  type: string
                  description: Used to search and bind operations in configured LDAP server.
                  example: 'SAMAccountName,uid, email'
                localPrimaryKey:
                  type: string
                  description: Used to search local user entry in Gluu Server’s internal LDAP directory.
                  example: 'uid, email'
                useAnonymousBind:
                  type: boolean
                  description: Boolean value used to indicate if the LDAP Server will allow anonymous bind request.
                enabled:
                  type: boolean
                level:
                  type: integer
      responses:
        '200':
          description: OK
          content: {}            
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: Updates existing LDAP configuration.
      description: Updates existing LDAP configuration.
      operationId: put-configuration-ldap
      tags:
        - LDAP configuration
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              description: LDAP configuration.
              required:
                - configId
                - bindDN
                - bindPassword
                - servers
                - baseDNs
                - primaryKey
                - localPrimaryKey
              properties:
                configId:
                  type: string
                  description: Unique identifier
                bindDN:
                  type: string
                  description: User Distingusihed Name for binding.
                bindPassword:
                  type: string
                  description: User password for binding.
                servers:
                  type: array
                  description: List of LDAP authentication servers.
                  items:
                    type: string
                    description: Unique name of the authentication server and port number.
                    example: 'authserver.org:63'
                maxConnections:
                  type: integer
                  description: Total number of simultaneous connections allowed.
                useSSL:
                  type: boolean
                baseDNs:
                  type: array
                  description: list of LDAP base Distingusihed Name
                  items:
                    type: string
                primaryKey:
                  type: string
                  description: Used to search and bind operations in configured LDAP server.
                  example: 'SAMAccountName,uid, email'
                localPrimaryKey:
                  type: string
                  description: Used to search local user entry in Gluu Server’s internal LDAP directory.
                  example: 'uid, email'
                useAnonymousBind:
                  type: boolean
                  description: Boolean value used to indicate if the LDAP Server will allow anonymous bind request.
                enabled:
                  type: boolean
                level:
                  type: integer
      responses:
        '200':
          description: OK
          content: {}            
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /configuration/ldap/{name}:
    parameters:
        - name: name
          in: path
          required: true
          description: Name of LDAP configuration.
          schema:
            type: string
    delete:
      summary: Deletes existing LDAP configuration.
      description: Deletes existing LDAP configuration.
      operationId: delete-configuration-ldap
      tags:
        - LDAP configuration      
      responses:
        '200':
          description: OK
          content: {}
        '500':
          $ref: '#/components/responses/InternalServerError'
  /configuration/ldap/status:
    get:
      summary: Gets LDAP connection based on status.
      description: Gets LDAP connection based on status.
      operationId: get-configuration-ldap-by-status
      tags:
        - LDAP configuration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ConnectionStatusDTO
                description: LDAP ConnectionStatus object.
                type: object
                required:
                  - isUp
                properties:
                  isUp:
                    type: boolean
                    description: Boolean value indicating the status of LDAP connection.
                    example: true for connection up and running
        '500':
          $ref: '#/components/responses/InternalServerError'
  /configuration/ldap/{name}/status:
    parameters:
      - name: name
        in: path
        required: true
        description: Name of LDAP configuration.
        schema:
          type: string
    get:    
      summary: Gets LDAP connection status based on name.
      description: Gets LDAP connection status based on name.
      operationId: get-configuration-ldap-status-by-name
      tags:
        - LDAP configuration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ConnectionStatusDTO
                description: LDAP ConnectionStatus object.
                type: object
                required:
                  - isUp
                properties:
                  isUp:
                    type: boolean
                    description: Boolean value indicating the status of LDAP connection.
                    example: true for connection up and running
        '500':
          $ref: '#/components/responses/InternalServerError'  
  /config/library:
    get:
      summary: Gets custom library.
      description: Gets custom library.
      operationId: get-config-library      
      tags:
        - Library
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                description: List of custom librarires added to oxAuth path.
                items:
                  type: string
        '500':
          description: Internal Server Error
    post:
      summary: Uploads custom library.      
      description: Uploads custom library.
      operationId: post-config-library
      tags:
        - Library
      parameters: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: File to upload.
              required:
                - file
      responses:
        '200':
          description: OK
          content: {}
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /config/library/{name}:
    parameters:
      - schema:
          type: string
          minLength: 1
        name: name
        in: path
        description: Name of the libraray.
        required: true
    get:
      summary: Gets custom library by name.
      description: Gets custom library by name.
      operationId: get-config-library-by-name    
      tags:
        - Library
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  file:
                    type: string
                    format: binary
                required:
                  - file
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: Deletes custom library by name.
      description: Deletes custom library by name.
      operationId: delete-config-library-by-name
      tags:
        - Library
      responses:
        '200':
          description: OK
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /scripts/person_authn:
    get:
      summary: Gets all person authentication script.
      description: Gets all person authentication script.
      operationId: get-scripts-person_authn
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '500':
          description: Internal Server Error
    post:
      summary: Adds new person authentication script.
      description: Adds new custom person authentication script.
      operationId: post-scripts-person_authn
      tags:
        - Custom Scripts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '500':
          description: Internal Server Error
    put:
      summary: Updates person authentication script.
      description: Updates person authentication script.
      operationId: put-scripts-person_authn
      tags:
        - Custom Scripts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /scripts/person_authn/{inum}:
    parameters:
      - schema:
          type: string
        name: inum
        in: path
        description: Script identifier
        required: true
    delete:
      summary: Deletes person authentication script.
      description: Deletes person authentication script.
      operationId: delete-scripts-person_authn-by-inum
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    get:
      summary: Gets person authentication script by inum.
      description: Gets person authentication script identified by inum.
      operationId: get-scripts-person_authn-by-inum
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomScript'
        '500':
          description: Internal Server Error
  /scripts/person_authn/{type}:
    parameters:
      - schema:
          type: string
        name: type
        in: path
        required: true
        description: Script type.
    get:
      summary: Gets all person authentication scripts by type.
      description: Gets all person authentication scripts based on type.
      operationId: get-scripts-person_authn-by-type
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '500':
          description: Internal Server Error
  /scripts/consent:
    get:
      summary: Gets all consent gathering script.
      description: Gets all custom consent gathering script.
      operationId: get-scripts-consent
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '500':
          description: Internal Server Error
    post:
      summary: Adds new consent gathering script.
      description: Adds new custom consent gathering script.
      operationId: post-scripts-consent      
      tags:
        - Custom Scripts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '500':
          description: Internal Server Error 
    put:
      summary: Updates consent gathering script.     
      description: Updates consent gathering script.
      operationId: put-scripts-consent
      tags:
        - Custom Scripts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /scripts/consent/{inum}:
    parameters:
      - schema:
          type: string
        name: inum
        in: path
        description: Script identifier
        required: true
    delete:
      summary: Deletes consent gathering script by inum.
      description: Deletes consent gathering script by inum.
      operationId: delete-scripts-consent-by-inum
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    get:
      summary: Gets consent gathering script by inum.
      description: Gets consent gathering script identified by inum.
      operationId: get-scripts-consent-by-inum
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomScript' 
        '500':
          description: Internal Server Error                
  /scripts/consent/{type}:
    parameters:
      - schema:
          type: string
        name: type
        in: path
        required: true
        description: Script type.
    get:
      summary: Gets all consent gathering scripts by type.      
      description: Gets all consent gathering scripts based on type.
      operationId: get-scripts-consent-by-type      
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '500':
          description: Internal Server Error      
  /scripts/client_reg:
    get:
      summary: Gets all client registration script.
      description: Gets all custom client registration script.
      operationId: get-scripts-client_reg
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: CustomScript
                description: Provides list of client custom scripts.
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '500':
          $ref: '#/components/responses/InternalServerError'      
    post:
      summary: Adds new client registration script.
      description: Adds new custom client registration script.
      operationId: post-scripts-client_reg
      tags:
        - Custom Scripts      
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomScript'  
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomScript'
        '500':
          $ref: '#/components/responses/InternalServerError'      
    put:
      summary: Updates client registration script.
      description: Updates custom client registration script.
      operationId: put-scripts-client_reg
      tags:
        - Custom Scripts       
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomScript' 
      responses:
        '200':
          description: OK
          content: {}
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'      
  /scripts/client_reg/{type}:
    get:
      summary: Gets client registration script by type.
      description: Gets client registration script by type.
      operationId: get-scripts-client_reg-by-type
      tags:
        - Custom Scripts      
      parameters:
        - name: type
          in: path
          required: true
          description: Resource description ID.
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: CustomScript
                description: Provides list of client custom scripts.
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '500':
          $ref: '#/components/responses/InternalServerError'      
  /scripts/client_reg/{inum}:
    parameters:
        - name: inum
          in: path
          required: true
          description: Authentication script ID.
          schema:
            type: string
    get:
      summary: Gets client registration script by inum.
      description: Gets custom client registration script by inum.
      operationId: get-scripts-client_reg-by-inum
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: CustomScript
                description: Provides list of client custom scripts.
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'                  
        '500':
          $ref: '#/components/responses/InternalServerError'      
    delete:
      summary: Deletes client registration script by inum.
      description: Deletes custom client registration script by inum.
      operationId: delete-scripts-client_reg
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
          content: {}
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /scripts/dyn_scopes:
    get:
      summary: Gets all dynamic scope scripts.
      description: Gets all custom dynamic scope scripts.
      operationId: get-scripts-dyn_scopes
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '500':
          description: Internal Server Error      
    post:
      summary: Adds new dynamic scope script.
      description: Adds new custom dynamic scope script.
      operationId: post-scripts-dyn_scopes
      tags:
        - Custom Scripts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '500':
          description: Internal Server Error      
    put:
      summary: Updates dynamic scope script.
      description: Updates dynamic scope script.
      operationId: put-scripts-dyn_scopes
      tags:
        - Custom Scripts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'      
      responses:
        '200':
          description: OK
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /scripts/dyn_scopes/{inum}:
    parameters:
      - schema:
          type: string
        name: inum
        in: path
        description: Script identifier
        required: true
    delete:
      summary: Deletes dynamic scope script by inum.      
      description: Deletes dynamic scope script by inum.
      operationId: delete-scripts-dyn_scopes-by-inum
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    get:
      summary: Gets dynamic scope script by inum.
      description: Gets dynamic scope script identified by inum.
      operationId: get-scripts-dyn_scopes-by-inum
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomScript'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: Updates dynamic scope script by inum.            
      description: Updates dynamic scope script based on inum.
      operationId: put-scripts-dyn_scopes-by-inum
      tags:
        - Custom Scripts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'        
      responses:
        '200':
          description: OK
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /scripts/dyn_scopes/{type}:
    parameters:
      - schema:
          type: string
        name: type
        in: path
        required: true
        description: Script type.
    get:
      summary: Gets all dynamic scope scripts by type.      
      description: Gets all dynamic scope scripts based on type.
      operationId: get-scripts-dyn_scopes-by-type
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '500':
          description: Internal Server Error      
  /scripts/uma_rpt:
    get:
      summary: Gets all UMA RPT Policy scripts.
      description: Gets all custom UMA RPT policy scripts.
      operationId: get-scripts-uma_rpt      
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '500':
          description: Internal Server Error      
    post:
      summary: Adds new UMA RPT policy script.          
      description: Adds new custom UMA RPT policy script.
      operationId: post-scripts-uma_rpt
      tags:
        - Custom Scripts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '500':
          description: Internal Server Error
    put:
      summary: Updates UMA RPT policy script.
      description: Updates UMA RPT policy script.
      operationId: put-scripts-uma_rpt
      tags:
        - Custom Scripts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript' 
      responses:
        '200':
          description: OK
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /scripts/uma_rpt/{inum}:
    parameters:
      - schema:
          type: string
        name: inum
        in: path
        description: Script identifier
        required: true
    delete:
      summary: Deletes UMA RPT policy script.      
      description: Deletes UMA RPT policy script.
      operationId: delete-scripts-uma_rpt-by-inum
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    get:
      summary: Gets UMA RPT policy script by inum.
      description: Gets UMA RPT policy script identified by inum.
      operationId: get-scripts-uma_rpt-by-inum      
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomScript'
        '500':
          $ref: '#/components/responses/InternalServerError'    
    put:
      summary: Updates UMA RPT policy script based on inum.
      description: Updates UMA RPT policy script based on inum.
      operationId: put-scripts-uma_rpt-by-inum
      tags:
        - Custom Scripts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'  
      responses:
        '200':
          description: OK
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /scripts/uma_rpt/{type}:
    parameters:
      - schema:
          type: string
        name: type
        in: path
        required: true
        description: Script type.
    get:
      summary: Gets all UMA RPT policy scripts by type.
      description: Gets all UMA RPT policy scripts based on type.
      operationId: get-scripts-uma_rpt-by-type      
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /scripts/uma_rpt/{name}:
    parameters:
      - schema:
          type: string
        name: name
        in: path
        required: true
        description: Script name.
    get:
      summary: Gets UMA RPT policy scripts by name.
      description: Gets UMA RPT policy script based on name.
      operationId: get-scripts-uma_rpt-by-name      
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '500':
          $ref: '#/components/responses/InternalServerError' 
  /scripts/uma_gather:
    get:
      summary: Gets all UMA claims gathering scripts.
      description: Gets all custom UMA claims gathering scripts.
      operationId: get-scripts-uma_gather      
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '500':
          $ref: '#/components/responses/InternalServerError'  
    post:
      summary: Adds new UMA claims gathering script.
      description: Adds new custom UMA claims gathering script.
      operationId: post-scripts-uma_gather
      tags:
        - Custom Scripts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: Updates UMA claims gathering script.
      description: Updates UMA claims gathering script.
      operationId: put-scripts-uma_gather
      tags:
        - Custom Scripts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /scripts/uma_gather/{inum}:
    parameters:
      - schema:
          type: string
        name: inum
        in: path
        description: Script identifier
        required: true
    delete:
      summary: Deletes UMA claims gathering script.
      description: Deletes UMA claims gathering script.
      operationId: delete-scripts-uma_gather-by-inum      
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'   
    get:
      summary: Gets UMA claims gathering script by inum.
      description: Gets UMA claims gathering script identified by inum.
      operationId: get-scripts-uma_gather-by-inum      
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomScript'
        '500':
          $ref: '#/components/responses/InternalServerError' 
    put:
      summary: Updates UMA claims gathering script.
      description: Updates UMA claims gathering script based on inum.
      operationId: put-scripts-uma_gather-by-inum
      tags:
        - Custom Scripts  
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'    
  /scripts/uma_gather/{type}:
    parameters:
      - schema:
          type: string
        name: type
        in: path
        required: true
        description: Script type.
    get:
      summary: Gets all UMA claims gathering scripts by type.
      description: Gets all UMA claims gathering scripts based on type.
      operationId: get-scripts-uma_gather-by-type      
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /scripts/uma_gather/{name}:
    parameters:
      - schema:
          type: string
        name: name
        in: path
        required: true
        description: Script name.
    get:
      summary: Gets UMA claims gathering scripts by name.
      description: Gets UMA claims gathering script based on name.
      operationId: get-scripts-uma_gather-by-name      
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /scripts/introspection:
    get:
      summary: Gets all introspection scripts.
      description: Gets all custom introspection scripts.
      operationId: get-scripts-introspection      
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '500':
          $ref: '#/components/responses/InternalServerError'  
    post:
      summary: Adds new introspection script.
      description: Adds new custom introspection script.
      operationId: post-scripts-introspection
      tags:
        - Custom Scripts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: Updates introspection script.
      description: Updates introspection script.
      operationId: put-scripts-introspection
      tags:
        - Custom Scripts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /scripts/introspection/{inum}:
    parameters:
      - schema:
          type: string
        name: inum
        in: path
        description: Script identifier
        required: true
    delete:
      summary: Deletes introspection script.
      description: Deletes introspection script.
      operationId: delete-scripts-introspection-by-inum      
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'   
    get:
      summary: Gets introspection script by inum.
      description: Gets introspection script identified by inum.
      operationId: get-scripts-introspection-by-inum      
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomScript'
        '500':
          $ref: '#/components/responses/InternalServerError' 
    put:
      summary: Updates introspection script.
      description: Updates introspection script based on inum.
      operationId: put-scripts-introspection-by-inum
      tags:
        - Custom Scripts  
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'    
  /scripts/introspection/{type}:
    parameters:
      - schema:
          type: string
        name: type
        in: path
        required: true
        description: Script type.
    get:
      summary: Gets all introspection scripts by type.
      description: Gets all introspection scripts based on type.
      operationId: get-scripts-introspection-by-type      
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /scripts/introspection/{name}:
    parameters:
      - schema:
          type: string
        name: name
        in: path
        required: true
        description: Script name.
    get:
      summary: Gets introspection scripts by name.
      description: Gets introspection script based on name.
      operationId: get-scripts-introspection-by-name      
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '500':
          $ref: '#/components/responses/InternalServerError' 
  /scripts/ropw:
    get:
      summary: Gets all Resource Owner Password Credentials scripts.
      description: Gets all custom Resource Owner Password Credentials scripts.
      operationId: get-scripts-ropw      
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '500':
          $ref: '#/components/responses/InternalServerError'  
    post:
      summary: Adds new Resource Owner Password Credentials script.
      description: Adds new custom Resource Owner Password Credentials script.
      operationId: post-scripts-ropw
      tags:
        - Custom Scripts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: Updates Resource Owner Password Credentials script.
      description: Updates Resource Owner Password Credentials script.
      operationId: put-scripts-ropw
      tags:
        - Custom Scripts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /scripts/ropw/{inum}:
    parameters:
      - schema:
          type: string
        name: inum
        in: path
        description: Script identifier
        required: true
    delete:
      summary: Deletes Resource Owner Password Credentials script.
      description: Deletes Resource Owner Password Credentials script.
      operationId: delete-scripts-ropw-by-inum      
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'   
    get:
      summary: Gets Resource Owner Password Credentials script by inum.
      description: Gets Resource Owner Password Credentials script identified by inum.
      operationId: get-scripts-ropw-by-inum      
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomScript'
        '500':
          $ref: '#/components/responses/InternalServerError' 
    put:
      summary: Updates Resource Owner Password Credentials script.
      description: Updates Resource Owner Password Credentials script based on inum.
      operationId: put-scripts-ropw-by-inum
      tags:
        - Custom Scripts  
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'    
  /scripts/ropw/{type}:
    parameters:
      - schema:
          type: string
        name: type
        in: path
        required: true
        description: Script type.
    get:
      summary: Gets all Resource Owner Password Credentials scripts by type.
      description: Gets all Resource Owner Password Credentials scripts based on type.
      operationId: get-scripts-ropw-by-type      
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /scripts/ropw/{name}:
    parameters:
      - schema:
          type: string
        name: name
        in: path
        required: true
        description: Script name.
    get:
      summary: Gets Resource Owner Password Credentials scripts by name.
      description: Gets Resource Owner Password Credentials script based on name.
      operationId: get-scripts-ropw-by-name      
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /scripts/app_session:
    get:
      summary: Gets all Application session scripts.
      description: Gets all custom Application session scripts.
      operationId: get-scripts-app_session    
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '500':
          $ref: '#/components/responses/InternalServerError'  
    post:
      summary: Adds new Application session script.
      description: Adds new custom Application session script.
      operationId: post-scripts-app_session
      tags:
        - Custom Scripts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: Updates Application session script.
      description: Updates Application session script.
      operationId: put-scripts-app_session
      tags:
        - Custom Scripts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /scripts/app_session/{inum}:
    parameters:
      - schema:
          type: string
        name: inum
        in: path
        description: Script identifier
        required: true
    delete:
      summary: Deletes Application session script.
      description: Deletes Application session script.
      operationId: delete-scripts-app_session-by-inum      
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'   
    get:
      summary: Gets Application session script by inum.
      description: Gets Application session script identified by inum.
      operationId: get-scripts-app_session-by-inum      
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomScript'
        '500':
          $ref: '#/components/responses/InternalServerError' 
    put:
      summary: Updates Application session script.
      description: Updates Application session script based on inum.
      operationId: put-scripts-app_session-by-inum
      tags:
        - Custom Scripts  
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
      responses:
        '200':
          description: OK
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'    
  /scripts/app_session/{type}:
    parameters:
      - schema:
          type: string
        name: type
        in: path
        required: true
        description: Script type.
    get:
      summary: Gets all Application session scripts by type.
      description: Gets all Application session scripts based on type.
      operationId: get-scripts-app_session-by-type      
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /scripts/app_session/{name}:
    parameters:
      - schema:
          type: string
        name: name
        in: path
        required: true
        description: Script name.
    get:
      summary: Gets Application session scripts by name.
      description: Gets Application session script based on name.
      operationId: get-scripts-app_session-by-name      
      tags:
        - Custom Scripts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScript'
        '500':
          $ref: '#/components/responses/InternalServerError'            
components:
  responses:
    Found:
      description: Resource Found.
      content: {}
    InvalidRequest:
      description: Invalid parameters are provided to endpoint.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Unauthorized:
      description: Unauthorized access request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    AccessDenied:
      description: Invalid details provided hence access denied.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    NotFound:
      description: Resource Not Found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    NotAcceptable:
      description: Request Not Acceptable.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    InternalServerError:
      description: Internal error occured. Please check log file for details.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
  schemas:
    ErrorResponse:
      required:
        - error
        - error_description
      type: object
      properties:
        error:
          type: string
        error_description:
          type: string
        details:
          type: string
    CustomScript:
      required:
        - id
        - name
      type: object
      properties:
        dn:
          type: string
        inum:
          type: string
        name:
          type: string
          pattern: '^[a-zA-Z0-9_\\-\\:\\/\\.]+$'
          minLength: 1
          maxLength: 60
          description: 'Name should contain only letters, digits and underscores.'
        aliases:
          type: array
          items:
            type: string
        description:
          type: string
        script:
          type: string
          description: Actual script.
        scriptType:
          type: string
          enum:
            - person_authentication
            - introspection
            - resource_owner_password_credentials
            - application_session
            - cache_refresh
            - update_user
            - user_registration
            - client_registration
            - id_generator
            - uma_rpt_policy
            - uma_rpt_claims
            - uma_claims_gathering
            - consent_gathering
            - dynamic_scope
            - spontaneous_scope
            - end_session
            - post_authn
            - scim
            - ciba_end_user_notification
            - persistence_extension
            - idp
        programmingLanguage:
          type: string
          enum:
            - python
            - javascript
          description: Specifies programming language of the custom script.
        moduleProperties:
          type: array
          items:
            type: object
            properties:
              value1:
                type: string
              value2:
                type: string
              description:
                type: string
        configurationProperties:
          type: array
          items:
            type: object
            properties:
              value1:
                type: string
              value2:
                type: string
              description:
                type: string
              hide:
                type: boolean
        level:
          type: integer
        revision:
          type: integer
          format: int64
        enabled:
          type: boolean
        scriptError:
          type: object
          properties:
            raisedAt:
              type: string
              format: date
            stackTrace:
              type: string
        modified:
          type: boolean
        internal:
          type: boolean      
